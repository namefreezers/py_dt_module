#line 1 "dtmodule.c"

#line 1 "C:\\Users\\freez\\Python310\\include\\Python.h"






#line 1 "C:\\Users\\freez\\Python310\\include\\patchlevel.h"














                                        




















#line 8 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"













































#line 47 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"


#line 50 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"









#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\io.h"







#pragma once



#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"








#pragma once

#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_share.h"








#pragma once

#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"







#pragma once

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"







#pragma once






















#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"






    
    

#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
            
        

#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    #line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"













#pragma once







































































































































#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"



#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"





























#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"


#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"

#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"





#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"



#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"











#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"








#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 229 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"































































































































































































































































































































































































































































































#pragma region Input Buffer SAL 1 compatibility macros



























































































































































































































































































































































































































































































































































































































































































































































































#pragma endregion Input Buffer SAL 1 compatibility macros

















































































#line 1555 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






























#line 1586 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
























#line 1611 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"












#line 1624 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






































#line 1663 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"















































































































#line 1775 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






































































































#line 1878 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"








































































































































































#line 2047 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"





































































































#line 2149 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
























































































































































































































#line 2366 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 2367 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"



































































































































































































































#line 2595 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    

    
    

#line 2634 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"









































































































































































































































#line 2868 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"









#line 2878 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"



    
    


#line 2886 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 2887 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






#line 2894 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 2895 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"






#line 2902 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 2903 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"











#line 2915 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"

































#line 2949 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"

























#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\concurrencysal.h"


















#pragma once















































































































































































































































































#line 292 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\concurrencysal.h"



#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\concurrencysal.h"




























































































#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\concurrencysal.h"





#line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\concurrencysal.h"
#line 2975 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\sal.h"
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"










#pragma once



#pragma pack(push, 8)



    


        
    #line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"




    


        
    #line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"



    
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"




    
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"

#pragma warning(push)
#pragma warning(disable:   4514 4820 )







#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"


    
    
        typedef unsigned __int64  uintptr_t;
    

#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"


    
    


        typedef char* va_list;
    #line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"




    
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"





#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"



#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"
    
    
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"











#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"







#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"











#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"





#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"










#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"










#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"

    void __cdecl __va_start(va_list* , ...);

    
    



    

#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"




































#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"

    

#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vadefs.h"

#pragma warning(pop) 
#pragma pack(pop)
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

#pragma warning(push)
#pragma warning(disable:   4514 4820 )














#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"









#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

    


    


#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

__pragma(pack(push, 8))




    


        
    #line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
















    

#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
    #line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    

#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
    #line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"





#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    
    
#line 148 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"




    
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"








    


#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    
#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"




    
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    



      
    #line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"






    typedef unsigned __int64 size_t;
    typedef __int64          ptrdiff_t;
    typedef __int64          intptr_t;




#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    typedef _Bool __vcrt_bool;
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



    
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



    
    typedef unsigned short wchar_t;
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    


        
    #line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    


#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"










    
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"





#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    

#line 277 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
    #line 279 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 280 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    

#line 285 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
    #line 287 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    

#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        
    #line 295 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"





#line 302 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



    
        
    



#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 321 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
    
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"





    
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    
        
    





#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"



#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    
        
    


#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


    void __cdecl __security_init_cookie(void);

    


#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"


#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
        void __cdecl __security_check_cookie(  uintptr_t _StackCookie);
        __declspec(noreturn) void __cdecl __report_gsfailure(  uintptr_t _StackCookie);
    #line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 370 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

extern uintptr_t __security_cookie;


    
    
    
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"

__pragma(pack(pop))

#pragma warning(pop) 

#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime.h"
#line 11 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"










    


        
    #line 26 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 27 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



    
#line 32 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"













    
#line 47 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    











        
    #line 63 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 64 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


        
    #line 71 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 72 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    

#line 88 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
        
    

#line 92 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 93 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"




    
#line 99 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    

#line 104 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
        
    

#line 108 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 109 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 113 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 115 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


#line 121 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"





#line 127 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 129 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"





    
#line 136 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 140 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 142 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"









    
#line 153 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"













    


        
    #line 171 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 172 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 176 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 178 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 182 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 184 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 188 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    
#line 190 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
























#line 215 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 219 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    typedef _Bool __crt_bool;
#line 221 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"














    
        


            
        #line 241 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    #line 242 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 243 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



















    

#line 265 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
        
    #line 267 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 268 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 272 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
#line 276 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


 






  

#line 288 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
   
  #line 290 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
 #line 291 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 292 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"







    

















        
    #line 319 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 320 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
#line 324 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
        
    

#line 331 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 332 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

























__declspec(dllimport) void __cdecl _invalid_parameter_noinfo(void);
__declspec(dllimport) __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(void);

__declspec(noreturn)
__declspec(dllimport) void __cdecl _invoke_watson(
      wchar_t const* _Expression,
      wchar_t const* _FunctionName,
      wchar_t const* _FileName,
            unsigned int _LineNo,
            uintptr_t _Reserved);


    



        
        
        
        
        
        
        
        
        
        
        
        

    #line 387 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 388 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"












    


#line 405 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
#line 409 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
        
    



#line 418 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 419 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"









    






        
    #line 437 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 438 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


        
    #line 445 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 446 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 450 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"













#line 464 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"















#line 480 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"





    
#line 487 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 491 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    

#line 496 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 497 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


        


            
        #line 507 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    #line 508 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 509 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 513 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"





#line 519 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


        



    #line 529 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 530 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
        
    



#line 539 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

    
        
        
        
    



#line 549 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

    
        
              
        

#line 556 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    



#line 561 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

    
        
    



#line 569 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

    
        
    



#line 577 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 578 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    
#line 582 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"








typedef int                           errno_t;
typedef unsigned short                wint_t;
typedef unsigned short                wctype_t;
typedef long                          __time32_t;
typedef __int64                       __time64_t;

typedef struct __crt_locale_data_public
{
      unsigned short const* _locale_pctype;
      int _locale_mb_cur_max;
               unsigned int _locale_lc_codepage;
} __crt_locale_data_public;

typedef struct __crt_locale_pointers
{
    struct __crt_locale_data*    locinfo;
    struct __crt_multibyte_data* mbcinfo;
} __crt_locale_pointers;

typedef __crt_locale_pointers* _locale_t;

typedef struct _Mbstatet
{ 
    unsigned long _Wchar;
    unsigned short _Byte, _State;
} _Mbstatet;

typedef _Mbstatet mbstate_t;



#line 622 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



#line 626 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    


        typedef __time64_t time_t;
    #line 633 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 634 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"



    
#line 639 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"


    typedef size_t rsize_t;
#line 643 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"










    















































































































































#line 798 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

        
        
        
        
        
        
        
        
        
        
        
        

    #line 813 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 814 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"












































































    













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1865 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

        
        
        
        

        

            


            


            


            


            


            


            


            


            



            



            


            


            


            


            


            


            


            


            


            


            



            



            



            


            



            




            

            




            

            




            

            




            

            




            

            




            

            




            

            




            

        











































#line 2055 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
    #line 2056 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"
#line 2057 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt.h"

__pragma(pack(pop))


#pragma warning(pop) 
#line 12 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_share.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )











    
    
    
    
#line 31 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_share.h"


#pragma warning(pop) 
#line 12 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"
#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"








#pragma once




#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))










    
    
#line 32 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

typedef unsigned long _fsize_t;

struct _wfinddata32_t
{
    unsigned   attrib;
    __time32_t time_create;    
    __time32_t time_access;    
    __time32_t time_write;
    _fsize_t   size;
    wchar_t    name[260];
};

struct _wfinddata32i64_t
{
    unsigned   attrib;
    __time32_t time_create;    
    __time32_t time_access;    
    __time32_t time_write;
    __int64    size;
    wchar_t    name[260];
};

struct _wfinddata64i32_t
{
    unsigned   attrib;
    __time64_t time_create;    
    __time64_t time_access;    
    __time64_t time_write;
    _fsize_t   size;
    wchar_t    name[260];
};

struct _wfinddata64_t
{
    unsigned   attrib;
    __time64_t time_create;    
    __time64_t time_access;    
    __time64_t time_write;
    __int64    size;
    wchar_t    name[260];
};














    
    
    
    
#line 93 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

 
__declspec(dllimport) int __cdecl _waccess(
      wchar_t const* _FileName,
        int            _AccessMode
    );


__declspec(dllimport) errno_t __cdecl _waccess_s(
      wchar_t const* _FileName,
        int            _AccessMode
    );

 
__declspec(dllimport) int __cdecl _wchmod(
      wchar_t const* _FileName,
        int            _Mode
    );

  
__declspec(dllimport) int __cdecl _wcreat(
      wchar_t const* _FileName,
        int            _PermissionMode
    );

 
 
__declspec(dllimport) intptr_t __cdecl _wfindfirst32(
      wchar_t const*         _FileName,
       struct _wfinddata32_t* _FindData
    );

 
 
__declspec(dllimport) int __cdecl _wfindnext32(
       intptr_t               _FindHandle,
      struct _wfinddata32_t* _FindData
    );

__declspec(dllimport) int __cdecl _wunlink(
      wchar_t const* _FileName
    );

 
__declspec(dllimport) int __cdecl _wrename(
      wchar_t const* _OldFileName,
      wchar_t const* _NewFileName
    );

__declspec(dllimport) errno_t __cdecl _wmktemp_s(
      wchar_t* _TemplateName,
                                 size_t   _SizeInWords
    );


#line 151 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

 
 __declspec(dllimport) wchar_t* __cdecl _wmktemp( wchar_t *_TemplateName);
#line 157 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

 
 
__declspec(dllimport) intptr_t __cdecl _wfindfirst32i64(
      wchar_t const*            _FileName,
       struct _wfinddata32i64_t* _FindData
    );

 
 
__declspec(dllimport) intptr_t __cdecl _wfindfirst64i32(
      wchar_t const*            _FileName,
       struct _wfinddata64i32_t* _FindData
    );

 
 
__declspec(dllimport) intptr_t __cdecl _wfindfirst64(
      wchar_t const*         _FileName,
       struct _wfinddata64_t* _FindData
    );

 
 
__declspec(dllimport) int __cdecl _wfindnext32i64(
       intptr_t                  _FindHandle,
      struct _wfinddata32i64_t* _FindData
    );

 
 
__declspec(dllimport) int __cdecl _wfindnext64i32(
       intptr_t                  _FindHandle,
      struct _wfinddata64i32_t* _FindData
    );

 
 
__declspec(dllimport) int __cdecl _wfindnext64(
       intptr_t               _FindHandle,
      struct _wfinddata64_t* _FindData
    );


__declspec(dllimport) errno_t __cdecl _wsopen_s(
       int*           _FileHandle,
      wchar_t const* _FileName,
        int            _OpenFlag,
        int            _ShareFlag,
        int            _PermissionFlag
    );

__declspec(dllimport) errno_t __cdecl _wsopen_dispatch(
      wchar_t const* _FileName,
        int            _OFlag,
        int            _ShFlag,
        int            _PMode,
       int*           _PFileHandle,
        int            _BSecure
    );


































#line 252 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

      
    __declspec(dllimport) int __cdecl _wopen(
          wchar_t const* _FileName,
            int            _OpenFlag,
        ...);

      
    __declspec(dllimport) int __cdecl _wsopen(
          wchar_t const* _FileName,
            int            _OpenFlag,
            int            _ShareFlag,
        ...);

#line 267 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wio.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 13 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))












    
    
#line 34 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

struct _finddata32_t
{
    unsigned    attrib;
    __time32_t  time_create;    
    __time32_t  time_access;    
    __time32_t  time_write;
    _fsize_t    size;
    char        name[260];
};

struct _finddata32i64_t
{
    unsigned    attrib;
    __time32_t  time_create;    
    __time32_t  time_access;    
    __time32_t  time_write;
    __int64     size;
    char        name[260];
};

struct _finddata64i32_t
{
    unsigned    attrib;
    __time64_t  time_create;    
    __time64_t  time_access;    
    __time64_t  time_write;
    _fsize_t    size;
    char        name[260];
};

struct __finddata64_t
{
    unsigned    attrib;
    __time64_t  time_create;    
    __time64_t  time_access;    
    __time64_t  time_write;
    __int64     size;
    char        name[260];
};



























    
    
    
    
#line 106 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"



     
    __declspec(dllimport) int __cdecl _access(
          char const* _FileName,
            int         _AccessMode
        );

    
    __declspec(dllimport) errno_t __cdecl _access_s(
          char const* _FileName,
            int         _AccessMode
        );

     
    __declspec(dllimport) int __cdecl _chmod(
          char const* _FileName,
            int         _Mode
        );

     
    __declspec(dllimport) int __cdecl _chsize(
          int  _FileHandle,
          long _Size
        );

    
    __declspec(dllimport) errno_t __cdecl _chsize_s(
          int     _FileHandle,
          __int64 _Size
        );

    
    __declspec(dllimport) int __cdecl _close(
          int _FileHandle
        );

    
    __declspec(dllimport) int __cdecl _commit(
          int _FileHandle
        );

      
    __declspec(dllimport) int __cdecl _creat(
          char const* _FileName,
            int         _PermissionMode
        );

     
    __declspec(dllimport) int __cdecl _dup(
          int _FileHandle
        );

     
    __declspec(dllimport) int __cdecl _dup2(
          int _FileHandleSrc,
          int _FileHandleDst
        );

     
    __declspec(dllimport) int __cdecl _eof(
          int _FileHandle
        );

     
    __declspec(dllimport) long __cdecl _filelength(
          int _FileHandle
        );

     
     
    __declspec(dllimport) intptr_t __cdecl _findfirst32(
          char const*           _FileName,
           struct _finddata32_t* _FindData
        );

     
     
    __declspec(dllimport) int __cdecl _findnext32(
           intptr_t              _FindHandle,
          struct _finddata32_t* _FindData
        );

    
    __declspec(dllimport) int __cdecl _findclose(
          intptr_t _FindHandle
        );

    __declspec(dllimport) intptr_t __cdecl _get_osfhandle(
              int _FileHandle
            );

     
    __declspec(dllimport) int __cdecl _isatty(
          int _FileHandle
        );

    __declspec(dllimport) int __cdecl _locking(
              int  _FileHandle,
              int  _LockMode,
              long _NumOfBytes
            );

    
    __declspec(dllimport) long __cdecl _lseek(
          int  _FileHandle,
          long _Offset,
          int  _Origin
        );

     
    
    __declspec(dllimport) errno_t __cdecl _mktemp_s(
          char*  _TemplateName,
                              size_t _Size
        );

    
#line 228 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

     
       __declspec(dllimport) char * __cdecl _mktemp( char *_TemplateName);
#line 234 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

    __declspec(dllimport) int __cdecl _open_osfhandle(
          intptr_t _OSFileHandle,
          int      _Flags
        );

    
         
         
        __declspec(dllimport) int __cdecl _pipe(
                 int*         _PtHandles,
                            unsigned int _PipeSize,
                            int          _TextMode
            );
    #line 249 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

     
     
    __declspec(dllimport) int __cdecl _read(
                                       int          _FileHandle,
          void*        _DstBuf,
                                       unsigned int _MaxCharCount
        );

    __declspec(dllimport) int __cdecl remove(
          char const* _FileName
        );

     
    __declspec(dllimport) int __cdecl rename(
          char const* _OldFilename,
          char const* _NewFilename
        );

    __declspec(dllimport) int __cdecl _unlink(
          char const* _FileName
        );

     
    __declspec(dllimport) int __cdecl _setmode(
          int _FileHandle,
          int _Mode
        );

     
    __declspec(dllimport) long __cdecl _tell(
          int _FileHandle
        );

    
    __declspec(dllimport) int __cdecl _umask(
          int _Mode
        );

    
    __declspec(dllimport) errno_t __cdecl _umask_s(
           int  _NewMode,
          int* _OldMode
        );

    __declspec(dllimport) int __cdecl _write(
                                     int          _FileHandle,
          void const*  _Buf,
                                     unsigned int _MaxCharCount
        );

     
    __declspec(dllimport) __int64 __cdecl _filelengthi64(
          int _FileHandle
        );

     
     
    __declspec(dllimport) intptr_t __cdecl _findfirst32i64(
          char const*              _FileName,
           struct _finddata32i64_t* _FindData
        );

     
     
    __declspec(dllimport) intptr_t __cdecl _findfirst64i32(
          char const*              _FileName,
           struct _finddata64i32_t* _FindData
        );

     
     
    __declspec(dllimport) intptr_t __cdecl _findfirst64(
          char const*            _FileName,
           struct __finddata64_t* _FindData
        );

     
     
    __declspec(dllimport) int __cdecl _findnext32i64(
           intptr_t                 _FindHandle,
          struct _finddata32i64_t* _FindData
        );

     
     
    __declspec(dllimport) int __cdecl _findnext64i32(
           intptr_t                 _FindHandle,
          struct _finddata64i32_t* _FindData
        );

     
     
    __declspec(dllimport) int __cdecl _findnext64(
           intptr_t               _FindHandle,
          struct __finddata64_t* _FindData
        );

    
    __declspec(dllimport) __int64 __cdecl _lseeki64(
          int     _FileHandle,
          __int64 _Offset,
          int     _Origin
        );

     
    __declspec(dllimport) __int64 __cdecl _telli64(
          int _FileHandle
        );

    
    __declspec(dllimport) errno_t __cdecl _sopen_s(
           int*        _FileHandle,
          char const* _FileName,
            int         _OpenFlag,
            int         _ShareFlag,
            int         _PermissionMode
        );

     
    __declspec(dllimport) errno_t __cdecl _sopen_s_nolock(
           int*        _FileHandle,
          char const* _FileName,
            int         _OpenFlag,
            int         _ShareFlag,
            int         _PermissionMode
        );

    __declspec(dllimport) errno_t __cdecl _sopen_dispatch(
          char const* _FileName,
            int         _OFlag,
            int         _ShFlag,
            int         _PMode,
           int*        _PFileHandle,
            int         _BSecure
        );



    































          
        __declspec(dllimport) int __cdecl _open(
              char const* _FileName,
                int         _OpenFlag,
            ...);

          
        __declspec(dllimport) int __cdecl _sopen(
              char const* _FileName,
                int         _OpenFlag,
                int         _ShareFlag,
            ...);

    #line 434 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"



    
        
        #pragma warning(push)
        #pragma warning(disable: 4141)

          
        __declspec(dllimport) int __cdecl access(
              char const* _FileName,
                int         _AccessMode
            );

          
        __declspec(dllimport) int __cdecl chmod(
              char const* _FileName,
                int         _AccessMode
            );

          
        __declspec(dllimport) int __cdecl chsize(
              int  _FileHandle,
              long _Size
            );

         
        __declspec(dllimport) int __cdecl close(
              int _FileHandle
        );

           
        __declspec(dllimport) int __cdecl creat(
              char const* _FileName,
                int         _PermissionMode
            );

          
        __declspec(dllimport) int __cdecl dup(
              int _FileHandle
            );

          
        __declspec(dllimport) int __cdecl dup2(
              int _FileHandleSrc,
              int _FileHandleDst
            );

          
        __declspec(dllimport) int __cdecl eof(
              int _FileHandle
            );

          
        __declspec(dllimport) long __cdecl filelength(
              int _FileHandle
            );

          
        __declspec(dllimport) int __cdecl isatty(
              int _FileHandle
            );

          
        __declspec(dllimport) int __cdecl locking(
              int  _FileHandle,
              int  _LockMode,
              long _NumOfBytes
            );

         
        __declspec(dllimport) long __cdecl lseek(
              int  _FileHandle,
              long _Offset,
              int  _Origin
            );

         
         
        __declspec(dllimport) char * __cdecl mktemp(
              char* _TemplateName
            );

           
        __declspec(dllimport) int __cdecl open(
              char const* _FileName,
                int         _OpenFlag,
            ...);

         
        
        __declspec(dllimport) int __cdecl read(
                                           int          _FileHandle,
              void*        _DstBuf,
                                           unsigned int _MaxCharCount
            );

          
        __declspec(dllimport) int __cdecl setmode(
              int _FileHandle,
              int _Mode
            );

         
        __declspec(dllimport) int __cdecl sopen(
              char const* _FileName,
              int         _OpenFlag,
              int         _ShareFlag,
            ...);

          
        __declspec(dllimport) long __cdecl tell(
              int _FileHandle
            );

         
        __declspec(dllimport) int __cdecl umask(
              int _Mode
            );

        
        __declspec(dllimport) int __cdecl unlink(
              char const* _FileName
            );

          
        __declspec(dllimport) int __cdecl write(
                                         int          _FileHandle,
              void const*  _Buf,
                                         unsigned int _MaxCharCount
            );

        #pragma warning(pop)
    #line 568 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"
#line 569 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_io.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 13 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\io.h"
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\io.h"
#line 60 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"












#line 73 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"




#line 78 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"








































#line 119 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"






#line 126 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"

#line 128 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"






#line 135 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 136 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"























#line 160 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"








typedef __int64 Py_ssize_t;


#line 172 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
















#line 189 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"

typedef int pid_t;

#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"








#pragma once





#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))




    


        


            
        #line 32 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"
    #line 33 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"
#line 34 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"



















    






        
    #line 62 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"
#line 63 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"
























































































































































#line 216 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"

    

#line 220 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"











__declspec(dllimport) unsigned int __cdecl _clearfp(void);

#pragma warning(push)
#pragma warning(disable: 4141) 

 
__declspec(dllimport) unsigned int __cdecl _controlfp(
      unsigned int _NewValue,
      unsigned int _Mask
    );

#pragma warning(pop)


__declspec(dllimport) void __cdecl _set_controlfp(
      unsigned int _NewValue,
      unsigned int _Mask
    );


__declspec(dllimport) errno_t __cdecl _controlfp_s(
      unsigned int* _CurrentState,
           unsigned int  _NewValue,
           unsigned int  _Mask
    );


__declspec(dllimport) unsigned int __cdecl _statusfp(void);


__declspec(dllimport) void __cdecl _fpreset(void);















__declspec(dllimport) unsigned int __cdecl _control87(
      unsigned int _NewValue,
      unsigned int _Mask
    );












 
__declspec(dllimport) int* __cdecl __fpecode(void);



 
__declspec(dllimport) int __cdecl __fpe_flt_rounds(void);












  __declspec(dllimport) double __cdecl _copysign(  double _Number,   double _Sign);
  __declspec(dllimport) double __cdecl _chgsign(  double _X);
  __declspec(dllimport) double __cdecl _scalb(  double _X,   long _Y);
  __declspec(dllimport) double __cdecl _logb(  double _X);
  __declspec(dllimport) double __cdecl _nextafter(  double _X,   double _Y);
  __declspec(dllimport) int    __cdecl _finite(  double _X);
  __declspec(dllimport) int    __cdecl _isnan(  double _X);
  __declspec(dllimport) int    __cdecl _fpclass(  double _X);


      __declspec(dllimport) float __cdecl _scalbf(  float _X,   long _Y);
#line 324 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"










    
    
    

    
    __declspec(dllimport) void __cdecl fpreset(void);

    
    

    
    

    
    
    

    
    
    
    
    
    
    

    
    
    

    
    
    
    
    

    
    
    
    

    

    
    
    
    
    
    

    
    
    
    

    
    
    
    
    
    

    
    
    
    

    

#line 403 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 410 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\float.h"
#line 193 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"







#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"






















#pragma warning(push)
#pragma warning(disable:4668) 
#line 26 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"


 
 typedef unsigned __int64 POINTER_64_INT;
 
  
 

#line 35 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"













#line 49 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"





#line 55 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"







#line 63 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"





#pragma once
#line 70 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"





typedef signed char         INT8, *PINT8;
typedef signed short        INT16, *PINT16;
typedef signed int          INT32, *PINT32;
typedef signed __int64      INT64, *PINT64;
typedef unsigned char       UINT8, *PUINT8;
typedef unsigned short      UINT16, *PUINT16;
typedef unsigned int        UINT32, *PUINT32;
typedef unsigned __int64    UINT64, *PUINT64;





typedef signed int LONG32, *PLONG32;





typedef unsigned int ULONG32, *PULONG32;
typedef unsigned int DWORD32, *PDWORD32;







#line 104 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"

















#line 122 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"



    typedef __int64 INT_PTR, *PINT_PTR;
    typedef unsigned __int64 UINT_PTR, *PUINT_PTR;

    typedef __int64 LONG_PTR, *PLONG_PTR;
    typedef unsigned __int64 ULONG_PTR, *PULONG_PTR;

    










#line 143 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"
#line 144 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"











typedef __int64 SHANDLE_PTR;
typedef unsigned __int64 HANDLE_PTR;
typedef unsigned int UHALF_PTR, *PUHALF_PTR;
typedef int HALF_PTR, *PHALF_PTR;


__inline
unsigned long
HandleToULong(
    const void *h
    )
{
    return((unsigned long) (ULONG_PTR) h );
}

__inline
long
HandleToLong(
    const void *h
    )
{
    return((long) (LONG_PTR) h );
}

__inline
void *
ULongToHandle(
    const unsigned long h
    )
{
    return((void *) (UINT_PTR) h );
}


__inline
void *
LongToHandle(
    const long h
    )
{
    return((void *) (INT_PTR) h );
}


__inline
unsigned long
PtrToUlong(
    const void  *p
    )
{
    return((unsigned long) (ULONG_PTR) p );
}

__inline
unsigned int
PtrToUint(
    const void  *p
    )
{
    return((unsigned int) (UINT_PTR) p );
}

__inline
unsigned short
PtrToUshort(
    const void  *p
    )
{
    return((unsigned short) (unsigned long) (ULONG_PTR) p );
}

__inline
long
PtrToLong(
    const void  *p
    )
{
    return((long) (LONG_PTR) p );
}

__inline
int
PtrToInt(
    const void  *p
    )
{
    return((int) (INT_PTR) p );
}

__inline
short
PtrToShort(
    const void  *p
    )
{
    return((short) (long) (LONG_PTR) p );
}

__inline
void *
IntToPtr(
    const int i
    )

{
    return( (void *)(INT_PTR)i );
}

__inline
void *
UIntToPtr(
    const unsigned int ui
    )

{
    return( (void *)(UINT_PTR)ui );
}

__inline
void *
LongToPtr(
    const long l
    )

{
    return( (void *)(LONG_PTR)l );
}

__inline
void *
ULongToPtr(
    const unsigned long ul
    )

{
    return( (void *)(ULONG_PTR)ul );
}






__inline
void *
Ptr32ToPtr(
    const void * __ptr32 p
    )
{
    return((void *) (ULONG_PTR) (unsigned long) p);
}

__inline
void *
Handle32ToHandle(
    const void * __ptr32 h
    )
{
    return((void *) (LONG_PTR) (long) h);
}

__inline
void * __ptr32
PtrToPtr32(
    const void *p
    )
{
    return((void * __ptr32) (unsigned long) (ULONG_PTR) p);
}



#line 328 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"




































































#line 397 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"























typedef ULONG_PTR SIZE_T, *PSIZE_T;
typedef LONG_PTR SSIZE_T, *PSSIZE_T;









































#line 464 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"





typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;





typedef __int64 LONG64, *PLONG64;






typedef unsigned __int64 ULONG64, *PULONG64;
typedef unsigned __int64 DWORD64, *PDWORD64;







typedef ULONG_PTR KAFFINITY;
typedef KAFFINITY *PKAFFINITY;








#pragma warning(pop)
#line 503 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"

#line 505 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\\basetsd.h"
#line 201 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 202 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"

#line 204 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"



















#line 224 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"











#line 236 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"





#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"







#pragma once




#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"









#pragma once


#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"







#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))



#line 21 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"




#line 26 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"
    
#line 28 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"


    

#line 33 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"
        
    

#line 37 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"
#line 38 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"














    








#line 62 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"




#line 67 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"

    





#line 75 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"
#line 76 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"






#line 83 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"


    
    
       
    
    __declspec(noinline) __inline unsigned __int64* __cdecl __local_stdio_printf_options(void)
    {
        static unsigned __int64 _OptionsStorage;
        return &_OptionsStorage;
    }

    
    
       
    
    __declspec(noinline) __inline unsigned __int64* __cdecl __local_stdio_scanf_options(void)
    {
        static unsigned __int64 _OptionsStorage;
        return &_OptionsStorage;
    }
#line 105 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"



#line 109 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_stdio_config.h"




















__pragma(pack(pop))

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    
    typedef struct _iobuf
    {
        void* _Placeholder;
    } FILE;
#line 33 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

__declspec(dllimport) FILE* __cdecl __acrt_iob_func(unsigned _Ix);










    
    
    
    
    
    
    __declspec(dllimport) wint_t __cdecl fgetwc(
          FILE* _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl _fgetwchar(void);

    
    __declspec(dllimport) wint_t __cdecl fputwc(
             wchar_t _Character,
          FILE*   _Stream);

    
    __declspec(dllimport) wint_t __cdecl _fputwchar(
          wchar_t _Character
        );

     
    __declspec(dllimport) wint_t __cdecl getwc(
          FILE* _Stream
        );

     
    __declspec(dllimport) wint_t __cdecl getwchar(void);


    
     
    __declspec(dllimport) wchar_t* __cdecl fgetws(
          wchar_t* _Buffer,
                                  int      _BufferCount,
                               FILE*    _Stream
        );

    
    __declspec(dllimport) int __cdecl fputws(
           wchar_t const* _Buffer,
          FILE*          _Stream
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl _getws_s(
          wchar_t* _Buffer,
                                  size_t   _BufferCount
        );

    
#line 103 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __declspec(dllimport) wint_t __cdecl putwc(
             wchar_t _Character,
          FILE*   _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl putwchar(
          wchar_t _Character
        );

    
    __declspec(dllimport) int __cdecl _putws(
          wchar_t const* _Buffer
        );

    
    __declspec(dllimport) wint_t __cdecl ungetwc(
             wint_t _Character,
          FILE*  _Stream
        );

     
    __declspec(dllimport) FILE * __cdecl _wfdopen(
            int            _FileHandle,
          wchar_t const* _Mode
        );

      
    __declspec(dllimport) FILE* __cdecl _wfopen(
          wchar_t const* _FileName,
          wchar_t const* _Mode
        );

    
    __declspec(dllimport) errno_t __cdecl _wfopen_s(
          FILE**         _Stream,
                             wchar_t const* _FileName,
                             wchar_t const* _Mode
        );

     
    
    __declspec(dllimport) FILE* __cdecl _wfreopen(
           wchar_t const* _FileName,
           wchar_t const* _Mode,
          FILE*          _OldStream
        );

    
    __declspec(dllimport) errno_t __cdecl _wfreopen_s(
          FILE**         _Stream,
                             wchar_t const* _FileName,
                             wchar_t const* _Mode,
                            FILE*          _OldStream
        );

     
    __declspec(dllimport) FILE* __cdecl _wfsopen(
          wchar_t const* _FileName,
          wchar_t const* _Mode,
            int            _ShFlag
        );

    __declspec(dllimport) void __cdecl _wperror(
          wchar_t const* _ErrorMessage
        );

    

         
        __declspec(dllimport) FILE* __cdecl _wpopen(
              wchar_t const* _Command,
              wchar_t const* _Mode
            );

    #line 181 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    __declspec(dllimport) int __cdecl _wremove(
          wchar_t const* _FileName
        );

    
    

     
    __declspec(dllimport) __declspec(allocator) wchar_t* __cdecl _wtempnam(
          wchar_t const* _Directory,
          wchar_t const* _FilePrefix
        );

    

     
    
    __declspec(dllimport) errno_t __cdecl _wtmpnam_s(
          wchar_t* _Buffer,
                                  size_t   _BufferCount
        );

    
#line 209 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     __declspec(dllimport)  wchar_t* __cdecl _wtmpnam(  wchar_t *_Buffer);
#line 215 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"



    
    
    
    
    
    
    __declspec(dllimport) wint_t __cdecl _fgetwc_nolock(
          FILE* _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl _fputwc_nolock(
             wchar_t _Character,
          FILE*   _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl _getwc_nolock(
          FILE* _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl _putwc_nolock(
             wchar_t _Character,
          FILE*   _Stream
        );

    
    __declspec(dllimport) wint_t __cdecl _ungetwc_nolock(
             wint_t _Character,
          FILE*  _Stream
        );

    



#line 256 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"



    
    





    
    
    
    
    
    
    __declspec(dllimport) int __cdecl __stdio_common_vfwprintf(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __declspec(dllimport) int __cdecl __stdio_common_vfwprintf_s(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __declspec(dllimport) int __cdecl __stdio_common_vfwprintf_p(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __inline int __cdecl _vfwprintf_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 308 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vfwprintf((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 312 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl vfwprintf(
                                FILE*          const _Stream,
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 322 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 326 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vfwprintf_s_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 337 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vfwprintf_s((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 341 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl vfwprintf_s(
                                    FILE*          const _Stream,
                wchar_t const* const _Format,
                                          va_list              _ArgList
            )
    

#line 353 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vfwprintf_s_l(_Stream, _Format, ((void *)0), _ArgList);
        }
    #line 357 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 359 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vfwprintf_p_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 370 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vfwprintf_p((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 374 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vfwprintf_p(
                                FILE*          const _Stream,
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 384 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_p_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 388 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vwprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 398 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 402 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl vwprintf(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 411 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
    }
    #line 415 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vwprintf_s_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 425 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_s_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 429 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl vwprintf_s(
                wchar_t const* const _Format,
                                          va_list              _ArgList
            )
    

#line 440 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vfwprintf_s_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        }
    #line 444 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 446 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vwprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 456 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_p_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 460 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vwprintf_p(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 469 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwprintf_p_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
    }
    #line 473 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _fwprintf_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 483 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 492 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl fwprintf(
                                FILE*          const _Stream,
            wchar_t const* const _Format,
        ...)
    

#line 501 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwprintf_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 510 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _fwprintf_s_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 520 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_s_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 529 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl fwprintf_s(
                                    FILE*          const _Stream,
                wchar_t const* const _Format,
            ...)
    

#line 540 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfwprintf_s_l(_Stream, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 549 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 551 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _fwprintf_p_l(
                                          FILE*          const _Stream,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 561 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_p_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 570 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _fwprintf_p(
                                FILE*          const _Stream,
            wchar_t const* const _Format,
        ...)
    

#line 579 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwprintf_p_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 588 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _wprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 597 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 606 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl wprintf(
            wchar_t const* const _Format,
        ...)
    

#line 614 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwprintf_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 623 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _wprintf_s_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 632 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_s_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 641 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl wprintf_s(
                wchar_t const* const _Format,
            ...)
    

#line 651 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfwprintf_s_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 660 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 662 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _wprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 671 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwprintf_p_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 680 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _wprintf_p(
            wchar_t const* const _Format,
        ...)
    

#line 688 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwprintf_p_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 697 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"


    
    
    
    
    
    
    __declspec(dllimport) int __cdecl __stdio_common_vfwscanf(
                                            unsigned __int64 _Options,
                                         FILE*            _Stream,
            wchar_t const*   _Format,
                                        _locale_t        _Locale,
                                               va_list          _ArgList
        );

    
    __inline int __cdecl _vfwscanf_l(
          FILE*                                const _Stream,
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 723 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vfwscanf(
            (*__local_stdio_scanf_options ()),
            _Stream, _Format, _Locale, _ArgList);
    }
    #line 729 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl vfwscanf(
          FILE*                                const _Stream,
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 739 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwscanf_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 743 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vfwscanf_s_l(
                                FILE*          const _Stream,
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 754 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vfwscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Stream, _Format, _Locale, _ArgList);
    }
    #line 760 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl vfwscanf_s(
                                    FILE*          const _Stream,
                wchar_t const* const _Format,
                                          va_list              _ArgList
            )
    

#line 772 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vfwscanf_s_l(_Stream, _Format, ((void *)0), _ArgList);
        }
    #line 776 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 778 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    __inline int __cdecl _vwscanf_l(
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 787 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwscanf_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
    }
    #line 791 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl vwscanf(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 800 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwscanf_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
    }
    #line 804 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _vwscanf_s_l(
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 814 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vfwscanf_s_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
    }
    #line 818 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl vwscanf_s(
                wchar_t const* const _Format,
                                          va_list              _ArgList
            )
    

#line 829 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vfwscanf_s_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
        }
    #line 833 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 835 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    __inline int __cdecl _fwscanf_l(
                                         FILE*          const _Stream,
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
        ...)
    

#line 845 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwscanf_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 854 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

      
    __inline int __cdecl fwscanf(
                               FILE*          const _Stream,
            wchar_t const* const _Format,
        ...)
    

#line 863 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwscanf_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 872 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _fwscanf_s_l(
                                           FILE*          const _Stream,
            wchar_t const* const _Format,
                                          _locale_t      const _Locale,
        ...)
    

#line 882 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwscanf_s_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 891 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl fwscanf_s(
                                     FILE*          const _Stream,
                wchar_t const* const _Format,
            ...)
    

#line 902 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfwscanf_s_l(_Stream, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 911 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 913 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    __inline int __cdecl _wscanf_l(
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
        ...)
    

#line 922 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwscanf_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 931 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

      
    __inline int __cdecl wscanf(
            wchar_t const* const _Format,
        ...)
    

#line 939 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfwscanf_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 948 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
    __inline int __cdecl _wscanf_s_l(
            wchar_t const* const _Format,
                                          _locale_t      const _Locale,
        ...)
    

#line 957 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfwscanf_s_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 966 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

        
        __inline int __cdecl wscanf_s(
                wchar_t const* const _Format,
            ...)
    

#line 976 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfwscanf_s_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 985 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 987 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"



    
    
    
    
    
    
        



    

#line 1003 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __declspec(dllimport) int __cdecl __stdio_common_vswprintf(
                                             unsigned __int64 _Options,
                 wchar_t*         _Buffer,
                                             size_t           _BufferCount,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    
    __declspec(dllimport) int __cdecl __stdio_common_vswprintf_s(
                                             unsigned __int64 _Options,
                     wchar_t*         _Buffer,
                                             size_t           _BufferCount,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    
    __declspec(dllimport) int __cdecl __stdio_common_vsnwprintf_s(
                                             unsigned __int64 _Options,
                 wchar_t*         _Buffer,
                                             size_t           _BufferCount,
                                             size_t           _MaxCount,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    
    __declspec(dllimport) int __cdecl __stdio_common_vswprintf_p(
                                             unsigned __int64 _Options,
                     wchar_t*         _Buffer,
                                             size_t           _BufferCount,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
     
    __inline int __cdecl _vsnwprintf_l(
            wchar_t*       const _Buffer,
                                                  size_t         const _BufferCount,
                 wchar_t const* const _Format,
                                              _locale_t      const _Locale,
                                                     va_list              _ArgList
        )
    

#line 1061 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options()) | (1ULL << 0),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1069 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vsnwprintf_s_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                                       size_t         const _MaxCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
                                                          va_list              _ArgList
        )
    

#line 1083 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vsnwprintf_s(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1091 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vsnwprintf_s(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                                       size_t         const _MaxCount,
                                wchar_t const* const _Format,
                                                          va_list              _ArgList
        )
    

#line 1104 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, ((void *)0), _ArgList);
    }
    #line 1108 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     __inline   int __cdecl _snwprintf(    wchar_t *_Buffer,   size_t _BufferCount,     wchar_t const* _Format, ...);  __inline   int __cdecl _vsnwprintf(    wchar_t *_Buffer,   size_t _BufferCount,     wchar_t const* _Format, va_list _Args);
#line 1117 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vsnwprintf(
            wchar_t*       _Buffer,
                                                  size_t         _BufferCount,
                           wchar_t const* _Format,
                                                     va_list        _ArgList
        )
    

#line 1129 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vsnwprintf_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1133 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
#line 1142 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_c_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
                                                          va_list              _ArgList
        )
    

#line 1155 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1163 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_c(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                wchar_t const* const _Format,
                                                          va_list              _ArgList
        )
    

#line 1175 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1179 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
                                                          va_list              _ArgList
        )
    

#line 1192 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
    }
    #line 1196 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl __vswprintf_l(
                  wchar_t*       const _Buffer,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 1208 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 1212 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf(
           wchar_t*       const _Buffer,
               wchar_t const* const _Format,
                                         va_list              _ArgList
        )
    

#line 1223 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_l(_Buffer, (size_t)-1, _Format, ((void *)0), _ArgList);
    }
    #line 1227 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl vswprintf(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                      wchar_t const* const _Format,
                                                          va_list              _ArgList
        )
    

#line 1239 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1243 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_s_l(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                  wchar_t const* const _Format,
                                               _locale_t      const _Locale,
                                                      va_list              _ArgList
        )
    

#line 1256 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf_s(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1264 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

         
        __inline int __cdecl vswprintf_s(
               wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                wchar_t const* const _Format,
                                                          va_list              _ArgList
            )
    

#line 1277 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vswprintf_s_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        }
    #line 1281 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 1283 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
#line 1291 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_p_l(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                  wchar_t const* const _Format,
                                               _locale_t      const _Locale,
                                                      va_list              _ArgList
        )
    

#line 1304 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf_p(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1312 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswprintf_p(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                            wchar_t const* const _Format,
                                                      va_list              _ArgList
        )
    

#line 1324 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswprintf_p_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1328 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vscwprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 1339 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options()) | (1ULL << 1),
            ((void *)0), 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1347 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vscwprintf(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 1357 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vscwprintf_l(_Format, ((void *)0), _ArgList);
    }
    #line 1361 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vscwprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )
    

#line 1372 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int const _Result = __stdio_common_vswprintf_p(
            (*__local_stdio_printf_options()) | (1ULL << 1),
            ((void *)0), 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1380 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vscwprintf_p(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )
    

#line 1390 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vscwprintf_p_l(_Format, ((void *)0), _ArgList);
    }
    #line 1394 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl __swprintf_l(
                  wchar_t*       const _Buffer,
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 1405 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = __vswprintf_l(_Buffer, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1414 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
        ...)
    

#line 1426 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1435 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf(
           wchar_t*       const _Buffer,
               wchar_t const* const _Format,
        ...)
    

#line 1445 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = __vswprintf_l(_Buffer, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1454 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl swprintf(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                wchar_t const* const _Format,
        ...)
    

#line 1465 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1474 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     __inline   int __cdecl __swprintf_l(   wchar_t *_Buffer,     wchar_t const* _Format,   _locale_t _Locale, ...);  __inline   int __cdecl __vswprintf_l(   wchar_t *_Buffer,     wchar_t const* _Format,   _locale_t _Locale, va_list _Args);
#line 1483 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     __inline   int __cdecl _swprintf(   wchar_t *_Buffer,     wchar_t const* _Format, ...);  __inline   int __cdecl _vswprintf(   wchar_t *_Buffer,     wchar_t const* _Format, va_list _Args);
#line 1490 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_s_l(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                  wchar_t const* const _Format,
                                               _locale_t      const _Locale,
        ...)
    

#line 1502 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1511 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

         
        __inline int __cdecl swprintf_s(
               wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                wchar_t const* const _Format,
            ...)
    

#line 1523 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 1532 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 1534 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
#line 1541 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_p_l(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                  wchar_t const* const _Format,
                                               _locale_t      const _Locale,
        ...)
    

#line 1553 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswprintf_p_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1562 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_p(
           wchar_t*       const _Buffer,
                                                   size_t         const _BufferCount,
                            wchar_t const* const _Format,
        ...)
    

#line 1573 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vswprintf_p_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1582 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_c_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
        ...)
    

#line 1594 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1603 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swprintf_c(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                wchar_t const* const _Format,
        ...)
    

#line 1614 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1623 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _snwprintf_l(
            wchar_t*       const _Buffer,
                                                  size_t         const _BufferCount,
                 wchar_t const* const _Format,
                                              _locale_t      const _Locale,
        ...)
    

#line 1635 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = _vsnwprintf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1646 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _snwprintf(
            wchar_t*       _Buffer,
                                                  size_t         _BufferCount,
                           wchar_t const* _Format,
        ...)
    

#line 1657 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = _vsnwprintf_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1668 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _snwprintf_s_l(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                                       size_t         const _MaxCount,
                      wchar_t const* const _Format,
                                                   _locale_t      const _Locale,
        ...)
    

#line 1681 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1690 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _snwprintf_s(
           wchar_t*       const _Buffer,
                                                       size_t         const _BufferCount,
                                                       size_t         const _MaxCount,
                                wchar_t const* const _Format,
        ...)
    

#line 1702 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1711 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
#line 1719 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    __inline int __cdecl _scwprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 1728 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vscwprintf_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1737 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _scwprintf(
            wchar_t const* const _Format,
        ...)
    

#line 1746 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vscwprintf_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1755 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _scwprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)
    

#line 1765 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vscwprintf_p_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1774 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _scwprintf_p(
            wchar_t const* const _Format,
        ...)
    

#line 1783 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vscwprintf_p_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1792 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"


    
        
        
        #pragma warning(push)
        #pragma warning(disable: 4141 6054)

        





















































        #pragma warning(pop)
    #line 1856 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    




#line 1863 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"


    
    
    
    
    
     
    __declspec(dllimport) int __cdecl __stdio_common_vswscanf(
                                            unsigned __int64 _Options,
                  wchar_t const*   _Buffer,
                                            size_t           _BufferCount,
            wchar_t const*   _Format,
                                        _locale_t        _Locale,
                                               va_list          _ArgList
        );

     
    
    __inline int __cdecl _vswscanf_l(
                                 wchar_t const* const _Buffer,
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 1891 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()),
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 1897 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl vswscanf(
                                 wchar_t const* _Buffer,
            wchar_t const* _Format,
                                      va_list        _ArgList
        )
    

#line 1908 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return _vswscanf_l(_Buffer, _Format, ((void *)0), _ArgList);
    }
    #line 1912 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vswscanf_s_l(
                                 wchar_t const* const _Buffer,
            wchar_t const* const _Format,
                               _locale_t      const _Locale,
                                      va_list              _ArgList
        )
    

#line 1924 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 1930 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

         
        
        __inline int __cdecl vswscanf_s(
                                     wchar_t const* const _Buffer,
                wchar_t const* const _Format,
                                          va_list              _ArgList
            )
    

#line 1943 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            return _vswscanf_s_l(_Buffer, _Format, ((void *)0), _ArgList);
        }
    #line 1947 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 1949 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    
#line 1957 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _vsnwscanf_l(
                  wchar_t const* const _Buffer,
                                            size_t         const _BufferCount,
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
                                               va_list              _ArgList
        )
    

#line 1970 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
    }
    #line 1976 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _vsnwscanf_s_l(
                    wchar_t const* const _Buffer,
                                              size_t         const _BufferCount,
            wchar_t const* const _Format,
                                          _locale_t      const _Locale,
                                                 va_list              _ArgList
        )
    

#line 1989 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
    }
    #line 1995 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _swscanf_l(
                                          wchar_t const* const _Buffer,
            wchar_t const* const _Format,
                                        _locale_t            _Locale,
        ...)
    

#line 2006 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswscanf_l(_Buffer, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2015 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
      
    __inline int __cdecl swscanf(
                                wchar_t const* const _Buffer,
            wchar_t const* const _Format,
        ...)
    

#line 2025 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vswscanf_l(_Buffer, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2034 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _swscanf_s_l(
                                            wchar_t const* const _Buffer,
            wchar_t const* const _Format,
                                          _locale_t      const _Locale,
        ...)
    

#line 2045 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vswscanf_s_l(_Buffer, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2054 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    

         
        
        __inline int __cdecl swscanf_s(
                                      wchar_t const* const _Buffer,
                wchar_t const* const _Format,
            ...)
    

#line 2066 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vswscanf_s_l(_Buffer, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 2075 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    #line 2077 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _snwscanf_l(
                  wchar_t const* const _Buffer,
                                            size_t         const _BufferCount,
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
        ...)
    

#line 2089 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = _vsnwscanf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2100 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
     
    __inline int __cdecl _snwscanf(
            wchar_t const* const _Buffer,
                                      size_t         const _BufferCount,
                wchar_t const* const _Format,
        ...)
    

#line 2111 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = _vsnwscanf_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2122 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _snwscanf_s_l(
                    wchar_t const* const _Buffer,
                                              size_t         const _BufferCount,
            wchar_t const* const _Format,
                                          _locale_t      const _Locale,
        ...)
    

#line 2134 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsnwscanf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2143 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

     
    
    __inline int __cdecl _snwscanf_s(
             wchar_t const* const _Buffer,
                                       size_t         const _BufferCount,
               wchar_t const* const _Format,
        ...)
    

#line 2154 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsnwscanf_s_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2163 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

    


#line 2168 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdio.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))































    
#line 53 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"















    
    
#line 71 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"


typedef __int64 fpos_t;





    
    __declspec(dllimport) errno_t __cdecl _get_stream_buffer_pointers(
               FILE*   _Stream,
          char*** _Base,
          char*** _Pointer,
          int**   _Count
        );


    
    
    
    
    
    

        
        __declspec(dllimport) errno_t __cdecl clearerr_s(
              FILE* _Stream
            );

        
         
        __declspec(dllimport) errno_t __cdecl fopen_s(
              FILE**      _Stream,
                                     char const* _FileName,
                                     char const* _Mode
            );

        
         
        __declspec(dllimport) size_t __cdecl fread_s(
                void*  _Buffer,
                                    size_t _BufferSize,
                                                                            size_t _ElementSize,
                                                                            size_t _ElementCount,
                                                                         FILE*  _Stream
            );

        
        __declspec(dllimport) errno_t __cdecl freopen_s(
              FILE**      _Stream,
                                 char const* _FileName,
                                 char const* _Mode,
                                FILE*       _OldStream
            );

         
        __declspec(dllimport) char* __cdecl gets_s(
              char*   _Buffer,
                               rsize_t _Size
            );

        
        __declspec(dllimport) errno_t __cdecl tmpfile_s(
                FILE** _Stream
            );

         
        
        __declspec(dllimport) errno_t __cdecl tmpnam_s(
              char*   _Buffer,
                               rsize_t _Size
            );

    #line 145 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    __declspec(dllimport) void __cdecl clearerr(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl fclose(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _fcloseall(void);

     
    __declspec(dllimport) FILE* __cdecl _fdopen(
            int         _FileHandle,
          char const* _Mode
        );

     
    __declspec(dllimport) int __cdecl feof(
          FILE* _Stream
        );

     
    __declspec(dllimport) int __cdecl ferror(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl fflush(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl fgetc(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _fgetchar(void);

     
    
    __declspec(dllimport) int __cdecl fgetpos(
          FILE*   _Stream,
            fpos_t* _Position
        );

     
    
    __declspec(dllimport) char* __cdecl fgets(
          char* _Buffer,
                               int   _MaxCount,
                            FILE* _Stream
        );

     
    __declspec(dllimport) int __cdecl _fileno(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _flushall(void);

      
    __declspec(dllimport) FILE* __cdecl fopen(
          char const* _FileName,
          char const* _Mode
        );


     
    
    __declspec(dllimport) int __cdecl fputc(
             int   _Character,
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _fputchar(
          int _Character
        );

     
    
    __declspec(dllimport) int __cdecl fputs(
           char const* _Buffer,
          FILE*       _Stream
        );

    
    __declspec(dllimport) size_t __cdecl fread(
          void*  _Buffer,
                                                      size_t _ElementSize,
                                                      size_t _ElementCount,
                                                   FILE*  _Stream
        );

     
      
    __declspec(dllimport) FILE* __cdecl freopen(
           char const* _FileName,
           char const* _Mode,
          FILE*       _Stream
        );

     
    __declspec(dllimport) FILE* __cdecl _fsopen(
          char const* _FileName,
          char const* _Mode,
            int         _ShFlag
        );

     
    
    __declspec(dllimport) int __cdecl fsetpos(
          FILE*         _Stream,
             fpos_t const* _Position
        );

     
    
    __declspec(dllimport) int __cdecl fseek(
          FILE* _Stream,
             long  _Offset,
             int   _Origin
        );

     
    
    __declspec(dllimport) int __cdecl _fseeki64(
          FILE*   _Stream,
             __int64 _Offset,
             int     _Origin
        );

     
     
    __declspec(dllimport) long __cdecl ftell(
          FILE* _Stream
        );

     
     
    __declspec(dllimport) __int64 __cdecl _ftelli64(
          FILE* _Stream
        );

    
    __declspec(dllimport) size_t __cdecl fwrite(
          void const* _Buffer,
                                                    size_t      _ElementSize,
                                                    size_t      _ElementCount,
                                                 FILE*       _Stream
        );

     
     
    __declspec(dllimport) int __cdecl getc(
          FILE* _Stream
        );

     
    __declspec(dllimport) int __cdecl getchar(void);

     
    __declspec(dllimport) int __cdecl _getmaxstdio(void);

    
#line 319 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __declspec(dllimport) int __cdecl _getw(
          FILE* _Stream
        );

    __declspec(dllimport) void __cdecl perror(
          char const* _ErrorMessage
        );

    

         
        
        __declspec(dllimport) int __cdecl _pclose(
              FILE* _Stream
            );

         
        __declspec(dllimport) FILE* __cdecl _popen(
              char const* _Command,
              char const* _Mode
            );

    #line 344 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __declspec(dllimport) int __cdecl putc(
             int   _Character,
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl putchar(
          int _Character
        );

    
    __declspec(dllimport) int __cdecl puts(
          char const* _Buffer
        );

     
    
    __declspec(dllimport) int __cdecl _putw(
             int   _Word,
          FILE* _Stream
        );

    __declspec(dllimport) int __cdecl remove(
          char const* _FileName
        );

     
    __declspec(dllimport) int __cdecl rename(
          char const* _OldFileName,
          char const* _NewFileName
        );

    __declspec(dllimport) int __cdecl _unlink(
          char const* _FileName
        );

    

        
        __declspec(dllimport) int __cdecl unlink(
              char const* _FileName
            );

    #line 391 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    __declspec(dllimport) void __cdecl rewind(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _rmtmp(void);

    
    __declspec(dllimport) void __cdecl setbuf(
                                                      FILE* _Stream,
            char* _Buffer
        );

    
    __declspec(dllimport) int __cdecl _setmaxstdio(
          int _Maximum
        );

     
    
    __declspec(dllimport) int __cdecl setvbuf(
                               FILE*  _Stream,
            char*  _Buffer,
                                  int    _Mode,
                                  size_t _Size
        );

    


#line 423 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __declspec(dllimport) __declspec(allocator) char* __cdecl _tempnam(
          char const* _DirectoryName,
          char const* _FilePrefix
        );

    

#line 433 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

      
    __declspec(dllimport) FILE* __cdecl tmpfile(void);

    
#line 442 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

 __declspec(dllimport)  char* __cdecl tmpnam(  char *_Buffer);
#line 448 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __declspec(dllimport) int __cdecl ungetc(
             int   _Character,
          FILE* _Stream
        );



    
    
    
    
    
    __declspec(dllimport) void __cdecl _lock_file(
          FILE* _Stream
        );

    __declspec(dllimport) void __cdecl _unlock_file(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl _fclose_nolock(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl _fflush_nolock(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl _fgetc_nolock(
          FILE* _Stream
        );

     
    
    __declspec(dllimport) int __cdecl _fputc_nolock(
             int   _Character,
          FILE* _Stream
        );

    
    __declspec(dllimport) size_t __cdecl _fread_nolock(
          void*  _Buffer,
                                                      size_t _ElementSize,
                                                      size_t _ElementCount,
                                                   FILE*  _Stream
        );

    
     
    __declspec(dllimport) size_t __cdecl _fread_nolock_s(
          void*  _Buffer,
                              size_t _BufferSize,
                                                                      size_t _ElementSize,
                                                                      size_t _ElementCount,
                                                                   FILE*  _Stream
        );

    
    __declspec(dllimport) int __cdecl _fseek_nolock(
          FILE* _Stream,
             long  _Offset,
             int   _Origin
        );

    
    __declspec(dllimport) int __cdecl _fseeki64_nolock(
          FILE*   _Stream,
             __int64 _Offset,
             int     _Origin
        );

     
    __declspec(dllimport) long __cdecl _ftell_nolock(
          FILE* _Stream
        );

     
    __declspec(dllimport) __int64 __cdecl _ftelli64_nolock(
          FILE* _Stream
        );

    
    __declspec(dllimport) size_t __cdecl _fwrite_nolock(
          void const* _Buffer,
                                                    size_t      _ElementSize,
                                                    size_t      _ElementCount,
                                                 FILE*       _Stream
        );

    
    __declspec(dllimport) int __cdecl _getc_nolock(
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _putc_nolock(
             int   _Character,
          FILE* _Stream
        );

    
    __declspec(dllimport) int __cdecl _ungetc_nolock(
             int   _Character,
          FILE* _Stream
        );

    
    
    
    



    














#line 586 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"



    __declspec(dllimport) int* __cdecl __p__commode(void);

    


        
    #line 596 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"



    
    

#line 603 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    
    
    
    
    __declspec(dllimport) int __cdecl __stdio_common_vfprintf(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    __declspec(dllimport) int __cdecl __stdio_common_vfprintf_s(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    __declspec(dllimport) int __cdecl __stdio_common_vfprintf_p(
                                             unsigned __int64 _Options,
                                          FILE*            _Stream,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __inline int __cdecl _vfprintf_l(
           FILE*       const _Stream,
            char const* const _Format,
          _locale_t   const _Locale,
                 va_list           _ArgList
        )
    

#line 644 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vfprintf((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 648 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl vfprintf(
                                FILE*       const _Stream,
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 658 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 662 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vfprintf_s_l(
           FILE*       const _Stream,
            char const* const _Format,
          _locale_t   const _Locale,
                 va_list           _ArgList
        )
    

#line 673 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vfprintf_s((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 677 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl vfprintf_s(
                                    FILE*       const _Stream,
                char const* const _Format,
                                          va_list           _ArgList
            )
    

#line 689 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vfprintf_s_l(_Stream, _Format, ((void *)0), _ArgList);
        }
    #line 693 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 695 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vfprintf_p_l(
           FILE*       const _Stream,
            char const* const _Format,
          _locale_t   const _Locale,
                 va_list           _ArgList
        )
    

#line 706 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vfprintf_p((*__local_stdio_printf_options()), _Stream, _Format, _Locale, _ArgList);
    }
    #line 710 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vfprintf_p(
                                FILE*       const _Stream,
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 720 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_p_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 724 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vprintf_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 734 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 738 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl vprintf(
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 747 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
    }
    #line 751 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vprintf_s_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 761 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_s_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 765 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl vprintf_s(
                char const* const _Format,
                                          va_list           _ArgList
            )
    

#line 776 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vfprintf_s_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        }
    #line 780 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 782 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vprintf_p_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 792 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_p_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
    }
    #line 796 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vprintf_p(
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 805 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfprintf_p_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
    }
    #line 809 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _fprintf_l(
                                          FILE*       const _Stream,
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 819 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 828 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl fprintf(
                                FILE*       const _Stream,
            char const* const _Format,
        ...)
    

#line 837 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfprintf_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 846 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    __declspec(dllimport) int __cdecl _set_printf_count_output(
          int _Value
        );

    __declspec(dllimport) int __cdecl _get_printf_count_output(void);

    
    __inline int __cdecl _fprintf_s_l(
                                          FILE*       const _Stream,
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 862 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_s_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 871 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl fprintf_s(
                                    FILE*       const _Stream,
                char const* const _Format,
            ...)
    

#line 882 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfprintf_s_l(_Stream, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 891 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 893 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _fprintf_p_l(
                                          FILE*       const _Stream,
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 903 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_p_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 912 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _fprintf_p(
                                FILE*       const _Stream,
            char const* const _Format,
        ...)
    

#line 921 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfprintf_p_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 930 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _printf_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 939 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 948 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl printf(
            char const* const _Format,
        ...)
    

#line 956 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfprintf_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 965 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _printf_s_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 974 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_s_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 983 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl printf_s(
                char const* const _Format,
            ...)
    

#line 993 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfprintf_s_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 1002 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1004 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _printf_p_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 1013 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfprintf_p_l((__acrt_iob_func(1)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1022 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _printf_p(
            char const* const _Format,
        ...)
    

#line 1030 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfprintf_p_l((__acrt_iob_func(1)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1039 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"


    
    
    
    
    
    __declspec(dllimport) int __cdecl __stdio_common_vfscanf(
                                            unsigned __int64 _Options,
                                         FILE*            _Stream,
            char const*      _Format,
                                        _locale_t        _Locale,
                                               va_list          _Arglist
        );

    
    __inline int __cdecl _vfscanf_l(
                                FILE*       const _Stream,
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 1064 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vfscanf(
            (*__local_stdio_scanf_options ()),
            _Stream, _Format, _Locale, _ArgList);
    }
    #line 1070 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl vfscanf(
                                FILE*       const _Stream,
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 1080 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfscanf_l(_Stream, _Format, ((void *)0), _ArgList);
    }
    #line 1084 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vfscanf_s_l(
                                FILE*       const _Stream,
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 1095 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vfscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Stream, _Format, _Locale, _ArgList);
    }
    #line 1101 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"


    

        
        __inline int __cdecl vfscanf_s(
                                    FILE*       const _Stream,
                char const* const _Format,
                                          va_list           _ArgList
            )
    

#line 1114 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vfscanf_s_l(_Stream, _Format, ((void *)0), _ArgList);
        }
    #line 1118 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1120 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vscanf_l(
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 1130 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfscanf_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
    }
    #line 1134 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl vscanf(
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 1143 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfscanf_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
    }
    #line 1147 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vscanf_s_l(
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 1157 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vfscanf_s_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
    }
    #line 1161 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl vscanf_s(
                char const* const _Format,
                                          va_list           _ArgList
            )
    

#line 1172 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vfscanf_s_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
        }
    #line 1176 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1178 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _fscanf_l(
                                         FILE*       const _Stream,
            char const* const _Format,
                                        _locale_t   const _Locale,
        ...)
    

#line 1188 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfscanf_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1197 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

      
    __inline int __cdecl fscanf(
                               FILE*       const _Stream,
            char const* const _Format,
        ...)
    

#line 1206 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfscanf_l(_Stream, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1215 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _fscanf_s_l(
                                           FILE*       const _Stream,
            char const* const _Format,
                                          _locale_t   const _Locale,
        ...)
    

#line 1225 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfscanf_s_l(_Stream, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1234 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl fscanf_s(
                                     FILE*       const _Stream,
                char const* const _Format,
            ...)
    

#line 1245 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfscanf_s_l(_Stream, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 1254 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1256 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _scanf_l(
            char const* const _Format,
                                        _locale_t   const _Locale,
        ...)
    

#line 1265 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfscanf_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1274 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

      
    __inline int __cdecl scanf(
            char const* const _Format,
        ...)
    

#line 1282 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vfscanf_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1291 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _scanf_s_l(
            char const* const _Format,
                                          _locale_t   const _Locale,
        ...)
    

#line 1300 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vfscanf_s_l((__acrt_iob_func(0)), _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1309 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl scanf_s(
                char const* const _Format,
            ...)
    

#line 1319 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vfscanf_s_l((__acrt_iob_func(0)), _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 1328 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1330 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"



    
    
    
    
    
     
    __declspec(dllimport) int __cdecl __stdio_common_vsprintf(
                                             unsigned __int64 _Options,
                 char*            _Buffer,
                                             size_t           _BufferCount,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    __declspec(dllimport) int __cdecl __stdio_common_vsprintf_s(
                                             unsigned __int64 _Options,
                     char*            _Buffer,
                                             size_t           _BufferCount,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    __declspec(dllimport) int __cdecl __stdio_common_vsnprintf_s(
                                             unsigned __int64 _Options,
                 char*            _Buffer,
                                             size_t           _BufferCount,
                                             size_t           _MaxCount,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
    __declspec(dllimport) int __cdecl __stdio_common_vsprintf_p(
                                             unsigned __int64 _Options,
                     char*            _Buffer,
                                             size_t           _BufferCount,
            char const*      _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

     
     
    __inline int __cdecl _vsnprintf_l(
            char*       const _Buffer,
                                                  size_t      const _BufferCount,
                 char const* const _Format,
                                              _locale_t   const _Locale,
                                                     va_list           _ArgList
        )
    

#line 1391 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options()) | (1ULL << 0),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1399 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsnprintf(
            char*       const _Buffer,
                                                 size_t      const _BufferCount,
                          char const* const _Format,
                                                    va_list           _ArgList
        )
    

#line 1411 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsnprintf_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1415 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    








#line 1426 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl vsnprintf(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                char const* const _Format,
                                                          va_list           _ArgList
        )
    

#line 1438 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options()) | (1ULL << 1),
            _Buffer, _BufferCount, _Format, ((void *)0), _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1446 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
     
    __inline int __cdecl _vsprintf_l(
           char*       const _Buffer,
                                    char const* const _Format,
                                  _locale_t   const _Locale,
                                         va_list           _ArgList
        )
    

#line 1458 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 1462 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
     
    __inline int __cdecl vsprintf(
           char*       const _Buffer,
               char const* const _Format,
                                         va_list           _ArgList
        )
    

#line 1473 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsnprintf_l(_Buffer, (size_t)-1, _Format, ((void *)0), _ArgList);
    }
    #line 1477 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsprintf_s_l(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                  char const* const _Format,
                                               _locale_t   const _Locale,
                                                      va_list           _ArgList
        )
    

#line 1490 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf_s(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1498 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

         
        
        __inline int __cdecl vsprintf_s(
               char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                char const* const _Format,
                                                          va_list           _ArgList
            )
    

#line 1512 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vsprintf_s_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        }
    #line 1516 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        
#line 1524 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1526 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsprintf_p_l(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                  char const* const _Format,
                                               _locale_t   const _Locale,
                                                      va_list           _ArgList
        )
    

#line 1539 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf_p(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1547 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsprintf_p(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                            char const* const _Format,
                                                      va_list           _ArgList
        )
    

#line 1559 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsprintf_p_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1563 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsnprintf_s_l(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                                       size_t      const _MaxCount,
                      char const* const _Format,
                                                   _locale_t   const _Locale,
                                                          va_list          _ArgList
        )
    

#line 1577 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsnprintf_s(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1585 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsnprintf_s(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                                       size_t      const _MaxCount,
                                char const* const _Format,
                                                          va_list           _ArgList
        )
    

#line 1598 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, ((void *)0), _ArgList);
    }
    #line 1602 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
#line 1611 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

         
        
        __inline int __cdecl vsnprintf_s(
               char*       const _Buffer,
                                                           size_t      const _BufferCount,
                                                           size_t      const _MaxCount,
                                    char const* const _Format,
                                                              va_list           _ArgList
            )
    

#line 1626 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, ((void *)0), _ArgList);
        }
    #line 1630 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        
#line 1639 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1641 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vscprintf_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 1651 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options()) | (1ULL << 1),
            ((void *)0), 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1659 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _vscprintf(
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 1668 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vscprintf_l(_Format, ((void *)0), _ArgList);
    }
    #line 1672 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vscprintf_p_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 1682 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf_p(
            (*__local_stdio_printf_options()) | (1ULL << 1),
            ((void *)0), 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1690 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _vscprintf_p(
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 1699 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vscprintf_p_l(_Format, ((void *)0), _ArgList);
    }
    #line 1703 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vsnprintf_c_l(
                   char*       const _Buffer,
                                             size_t      const _BufferCount,
            char const* const _Format,
                                         _locale_t   const _Locale,
                                                va_list           _ArgList
        )
    

#line 1715 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
    #line 1723 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _vsnprintf_c(
          char*       const _Buffer,
                                    size_t      const _BufferCount,
             char const* const _Format,
                                       va_list           _ArgList
        )
    

#line 1735 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
    }
    #line 1739 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
     
    __inline int __cdecl _sprintf_l(
                  char*       const _Buffer,
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 1750 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1761 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl sprintf(
           char*       const _Buffer,
               char const* const _Format,
        ...)
    

#line 1771 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = _vsprintf_l(_Buffer, _Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1782 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

       int __cdecl sprintf(  char *_Buffer,  char const* _Format, ...);    int __cdecl vsprintf(  char *_Buffer,  char const* _Format, va_list _Args);
#line 1789 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _sprintf_s_l(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                  char const* const _Format,
                                               _locale_t   const _Locale,
        ...)
    

#line 1801 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1810 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

         
        
        __inline int __cdecl sprintf_s(
               char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                char const* const _Format,
            ...)
    

#line 1823 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));
            _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 1832 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 1834 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
#line 1841 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _sprintf_p_l(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                  char const* const _Format,
                                               _locale_t   const _Locale,
        ...)
    

#line 1853 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1862 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _sprintf_p(
           char*       const _Buffer,
                                                   size_t      const _BufferCount,
                            char const* const _Format,
        ...)
    

#line 1873 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1882 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
     
    __inline int __cdecl _snprintf_l(
            char*       const _Buffer,
                                                  size_t      const _BufferCount,
                 char const* const _Format,
                                              _locale_t   const _Locale,
        ...)
    

#line 1894 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = _vsnprintf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1905 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    








#line 1916 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl snprintf(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                char const* const _Format,
        ...)
    

#line 1927 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1936 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _snprintf(
            char*       const _Buffer,
                                                  size_t      const _BufferCount,
                           char const* const _Format,
        ...)
    

#line 1947 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1956 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        int __cdecl _snprintf(    char *_Buffer,   size_t _BufferCount,     char const* _Format, ...);     int __cdecl _vsnprintf(    char *_Buffer,   size_t _BufferCount,     char const* _Format, va_list _Args);
#line 1965 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _snprintf_c_l(
                   char*       const _Buffer,
                                             size_t      const _BufferCount,
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 1977 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 1986 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _snprintf_c(
          char*       const _Buffer,
                                    size_t      const _BufferCount,
             char const* const _Format,
        ...)
    

#line 1997 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2006 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _snprintf_s_l(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                                       size_t      const _MaxCount,
                      char const* const _Format,
                                                   _locale_t   const _Locale,
        ...)
    

#line 2019 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2028 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    
    __inline int __cdecl _snprintf_s(
           char*       const _Buffer,
                                                       size_t      const _BufferCount,
                                                       size_t      const _MaxCount,
                                char const* const _Format,
        ...)
    

#line 2040 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2049 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
#line 2057 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _scprintf_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 2066 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vscprintf_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2075 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _scprintf(
            char const* const _Format,
        ...)
    

#line 2083 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vscprintf_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2092 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _scprintf_p_l(
            char const* const _Format,
                                         _locale_t   const _Locale,
        ...)
    

#line 2101 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vscprintf_p_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2110 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _scprintf_p(
            char const* const _Format,
        ...)
    

#line 2118 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vscprintf_p(_Format, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2127 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    
    
    
    
    __declspec(dllimport) int __cdecl __stdio_common_vsscanf(
                                            unsigned __int64 _Options,
                  char const*      _Buffer,
                                            size_t           _BufferCount,
            char const*      _Format,
                                        _locale_t        _Locale,
                                               va_list          _ArgList
        );

    
    __inline int __cdecl _vsscanf_l(
                                 char const* const _Buffer,
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 2152 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()),
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 2158 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl vsscanf(
                                 char const* const _Buffer,
            char const* const _Format,
                                      va_list           _ArgList
        )
    

#line 2168 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return _vsscanf_l(_Buffer, _Format, ((void *)0), _ArgList);
    }
    #line 2172 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _vsscanf_s_l(
                                 char const* const _Buffer,
            char const* const _Format,
                               _locale_t   const _Locale,
                                      va_list           _ArgList
        )
    

#line 2183 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        return __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
    #line 2189 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        #pragma warning(push)
        #pragma warning(disable: 6530) 

        
        __inline int __cdecl vsscanf_s(
                                     char const* const _Buffer,
                char const* const _Format,
                                          va_list           _ArgList
            )
    

#line 2204 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            return _vsscanf_s_l(_Buffer, _Format, ((void *)0), _ArgList);
        }
    #line 2208 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        
#line 2215 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        #pragma warning(pop)

    #line 2219 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _sscanf_l(
                                          char const* const _Buffer,
            char const* const _Format,
                                        _locale_t   const _Locale,
        ...)
    

#line 2229 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsscanf_l(_Buffer, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2238 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

      
    __inline int __cdecl sscanf(
                                char const* const _Buffer,
            char const* const _Format,
        ...)
    

#line 2247 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vsscanf_l(_Buffer, _Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2256 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _sscanf_s_l(
                                            char const* const _Buffer,
            char const* const _Format,
                                          _locale_t   const _Locale,
        ...)
    

#line 2266 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vsscanf_s_l(_Buffer, _Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2275 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    

        
        __inline int __cdecl sscanf_s(
                                      char const* const _Buffer,
                char const* const _Format,
            ...)
    

#line 2286 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
        {
            int _Result;
            va_list _ArgList;
            ((void)(__va_start(&_ArgList, _Format)));

            _Result = vsscanf_s(_Buffer, _Format, _ArgList);

            ((void)(_ArgList = (va_list)0));
            return _Result;
        }
    #line 2297 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #line 2299 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #pragma warning(push)
    #pragma warning(disable: 6530) 

     
    __inline int __cdecl _snscanf_l(
            char const* const _Buffer,
                                            size_t      const _BufferCount,
            char const* const _Format,
                                        _locale_t   const _Locale,
        ...)
    

#line 2313 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2326 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

     
    __inline int __cdecl _snscanf(
            char const* const _Buffer,
                                            size_t      const _BufferCount,
                      char const* const _Format,
        ...)
    

#line 2336 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()),
            _Buffer, _BufferCount, _Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2349 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"


    
    __inline int __cdecl _snscanf_s_l(
              char const* const _Buffer,
                                              size_t      const _BufferCount,
            char const* const _Format,
                                          _locale_t   const _Locale,
        ...)
    

#line 2361 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2374 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    
    __inline int __cdecl _snscanf_s(
            char const* const _Buffer,
                                            size_t      const _BufferCount,
                    char const* const _Format,
        ...)
    

#line 2384 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Buffer, _BufferCount, _Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
    #line 2397 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

    #pragma warning(pop)

    

#line 2403 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"



    
    
    
    
    
    

        

        


#line 2419 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

        
        __declspec(dllimport) char* __cdecl tempnam(
              char const* _Directory,
              char const* _FilePrefix
            );

        

#line 2429 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"

          __declspec(dllimport) int   __cdecl fcloseall(void);
                  __declspec(dllimport) FILE* __cdecl fdopen(  int _FileHandle,   char const* _Format);
           __declspec(dllimport) int   __cdecl fgetchar(void);
                  __declspec(dllimport) int   __cdecl fileno(  FILE* _Stream);
           __declspec(dllimport) int   __cdecl flushall(void);
           __declspec(dllimport) int   __cdecl fputchar(  int _Ch);
                    __declspec(dllimport) int   __cdecl getw(  FILE* _Stream);
               __declspec(dllimport) int   __cdecl putw(  int _Ch,   FILE* _Stream);
                   __declspec(dllimport) int   __cdecl rmtmp(void);

    #line 2441 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
#line 2442 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 2449 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdio.h"
#line 242 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 243 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"







#line 251 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"






#line 258 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"







                

                        




#line 273 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"

#line 275 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#pragma comment(lib,"python310.lib")
#line 277 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 278 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 279 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 280 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"


































#line 315 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"



























#line 343 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 344 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"

#line 346 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
















#line 363 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"












#line 376 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"






















































































































































































#line 559 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"



































































































































#line 691 "C:\\Users\\freez\\Python310\\include\\pyconfig.h"
#line 9 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pymacconfig.h"


     
































































































#line 101 "C:\\Users\\freez\\Python310\\include\\pymacconfig.h"

#line 103 "C:\\Users\\freez\\Python310\\include\\pymacconfig.h"
#line 10 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"







#pragma once




#pragma warning(push)
#pragma warning(disable:   4514 4820 )

__pragma(pack(push, 8))







    
    



#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"
































    
    
        
    

#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"


    
        
    #line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\limits.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 12 "C:\\Users\\freez\\Python310\\include\\Python.h"







#line 20 "C:\\Users\\freez\\Python310\\include\\Python.h"



#line 24 "C:\\Users\\freez\\Python310\\include\\Python.h"






#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"







#pragma once




#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"










#pragma once


#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memcpy_s.h"







#pragma once


#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\errno.h"







#pragma once





#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))




    __declspec(dllimport) int* __cdecl _errno(void);
    

    __declspec(dllimport) errno_t __cdecl _set_errno(  int _Value);
    __declspec(dllimport) errno_t __cdecl _get_errno(  int* _Value);

    __declspec(dllimport) unsigned long* __cdecl __doserrno(void);
    

    __declspec(dllimport) errno_t __cdecl _set_doserrno(  unsigned long _Value);
    __declspec(dllimport) errno_t __cdecl _get_doserrno(  unsigned long * _Value);
#line 35 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\errno.h"










































    
    
    
    
    
#line 83 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\errno.h"






    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
#line 131 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\errno.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 138 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\errno.h"
#line 12 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memcpy_s.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime_string.h"







#pragma once



#pragma warning(push)
#pragma warning(disable:   4514 4820 )



__pragma(pack(push, 8))



  
 void * __cdecl memchr(
      void const* _Buf,
                                 int         _Val,
                                 size_t      _MaxCount
    );

  
int __cdecl memcmp(
      void const* _Buf1,
      void const* _Buf2,
                         size_t      _Size
    );


 

#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime_string.h"
void* __cdecl memcpy(
      void* _Dst,
            void const* _Src,
                               size_t      _Size
    );


 void* __cdecl memmove(
      void*       _Dst,
            void const* _Src,
                                   size_t      _Size
    );

 

#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime_string.h"
void* __cdecl memset(
      void*  _Dst,
                               int    _Val,
                               size_t _Size
    );

  
 char * __cdecl strchr(
      char const* _Str,
        int         _Val
    );

  
 char * __cdecl strrchr(
      char const* _Str,
        int         _Ch
    );

    
 char * __cdecl strstr(
      char const* _Str,
      char const* _SubStr
    );

  

 wchar_t * __cdecl wcschr(
      wchar_t const* _Str,
        wchar_t        _Ch
    );

  
 wchar_t * __cdecl wcsrchr(
      wchar_t const* _Str,
        wchar_t        _Ch
    );

    

 wchar_t * __cdecl wcsstr(
      wchar_t const* _Str,
      wchar_t const* _SubStr
    );



__pragma(pack(pop))

#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\vcruntime_string.h"

#pragma warning(pop) 
#line 13 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memcpy_s.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))


    
#line 23 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memcpy_s.h"














     
    
    static __inline errno_t __cdecl memcpy_s(
          void*       const _Destination,
                                                              rsize_t     const _DestinationSize,
                                 void const* const _Source,
                                                              rsize_t     const _SourceSize
        )
    {
        if (_SourceSize == 0)
        {
            return 0;
        }

        { int _Expr_val=!!(_Destination != ((void *)0)); if (!(_Expr_val)) { (*_errno()) = 22; _invalid_parameter_noinfo(); return 22; } };
        if (_Source == ((void *)0) || _DestinationSize < _SourceSize)
        {
            memset(_Destination, 0, _DestinationSize);

            { int _Expr_val=!!(_Source != ((void *)0)); if (!(_Expr_val)) { (*_errno()) = 22; _invalid_parameter_noinfo(); return 22; } };
            { int _Expr_val=!!(_DestinationSize >= _SourceSize); if (!(_Expr_val)) { (*_errno()) = 34; _invalid_parameter_noinfo(); return 34; } };

            
            return 22;
        }
        memcpy(_Destination, _Source, _SourceSize);
        return 0;
    }

    
    static __inline errno_t __cdecl memmove_s(
          void*       const _Destination,
                                                              rsize_t     const _DestinationSize,
                                 void const* const _Source,
                                                              rsize_t     const _SourceSize
        )
    {
        if (_SourceSize == 0)
        {
            return 0;
        }

        { int _Expr_val=!!(_Destination != ((void *)0)); if (!(_Expr_val)) { (*_errno()) = 22; _invalid_parameter_noinfo(); return 22; } };
        { int _Expr_val=!!(_Source != ((void *)0)); if (!(_Expr_val)) { (*_errno()) = 22; _invalid_parameter_noinfo(); return 22; } };
        { int _Expr_val=!!(_DestinationSize >= _SourceSize); if (!(_Expr_val)) { (*_errno()) = 34; _invalid_parameter_noinfo(); return 34; } };

        memmove(_Destination, _Source, _SourceSize);
        return 0;
    }

#line 88 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memcpy_s.h"




#pragma warning(pop) 
__pragma(pack(pop))
#line 15 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"


#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )




__pragma(pack(push, 8))



 
__declspec(dllimport) int __cdecl _memicmp(
      void const* _Buf1,
      void const* _Buf2,
                             size_t      _Size
    );

 
__declspec(dllimport) int __cdecl _memicmp_l(
      void const* _Buf1,
      void const* _Buf2,
                             size_t      _Size,
                         _locale_t   _Locale
    );





    












#line 60 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"

    












#line 75 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"

#line 77 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"





    
    __declspec(dllimport) void* __cdecl memccpy(
          void*       _Dst,
            void const* _Src,
                                   int         _Val,
                                   size_t      _Size
        );

      
    __declspec(dllimport) int __cdecl memicmp(
          void const* _Buf1,
          void const* _Buf2,
                                 size_t      _Size
        );

#line 98 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"
















#line 115 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"



__pragma(pack(pop))

#line 121 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_memory.h"

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"








#pragma once




#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )




__pragma(pack(push, 8))










    
    __declspec(dllimport) errno_t __cdecl wcscat_s(
          wchar_t* _Destination,
          rsize_t _SizeInWords,
          wchar_t const* _Source
        );

    
    __declspec(dllimport) errno_t __cdecl wcscpy_s(
          wchar_t* _Destination,
          rsize_t _SizeInWords,
          wchar_t const* _Source
        );

    
    __declspec(dllimport) errno_t __cdecl wcsncat_s(
          wchar_t*       _Destination,
                                     rsize_t        _SizeInWords,
               wchar_t const* _Source,
                                     rsize_t        _MaxCount
        );

    
    __declspec(dllimport) errno_t __cdecl wcsncpy_s(
          wchar_t*       _Destination,
                                  rsize_t        _SizeInWords,
            wchar_t const* _Source,
                                  rsize_t        _MaxCount
        );

     
    __declspec(dllimport) wchar_t* __cdecl wcstok_s(
                          wchar_t*       _String,
                                 wchar_t const* _Delimiter,
            wchar_t**      _Context
        );

#line 69 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"











#line 81 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
__declspec(dllimport) __declspec(allocator) wchar_t* __cdecl _wcsdup(
      wchar_t const* _String
    );



#line 90 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"




#line 98 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"


     __declspec(dllimport) wchar_t* __cdecl wcscat( wchar_t *_Destination,  wchar_t const* _Source);
#line 105 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"
#line 106 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
__declspec(dllimport) int __cdecl wcscmp(
      wchar_t const* _String1,
      wchar_t const* _String2
    );


#line 118 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl wcscpy( wchar_t *_Destination,  wchar_t const* _Source);
#line 124 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
__declspec(dllimport) size_t __cdecl wcscspn(
      wchar_t const* _String,
      wchar_t const* _Control
    );

 
__declspec(dllimport) size_t __cdecl wcslen(
      wchar_t const* _String
    );

 

#line 141 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

#line 145 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"
__declspec(dllimport) size_t __cdecl wcsnlen(
      wchar_t const* _Source,
                            size_t         _MaxCount
    );



     
    
#line 157 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"
    
#line 161 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"
    static __inline size_t __cdecl wcsnlen_s(
          wchar_t const* _Source,
                                size_t         _MaxCount
        )
    {
        return (_Source == 0) ? 0 : wcsnlen(_Source, _MaxCount);
    }

#line 170 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"


#line 177 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl wcsncat(  wchar_t *_Destination,   wchar_t const* _Source,   size_t _Count);
#line 185 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
__declspec(dllimport) int __cdecl wcsncmp(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount
    );


#line 199 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl wcsncpy(    wchar_t *_Destination,   wchar_t const* _Source,   size_t _Count);
#line 207 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
__declspec(dllimport) wchar_t * __cdecl wcspbrk(
      wchar_t const* _String,
      wchar_t const* _Control
    );

 
__declspec(dllimport) size_t __cdecl wcsspn(
      wchar_t const* _String,
      wchar_t const* _Control
    );

  
__declspec(dllimport) wchar_t* __cdecl wcstok(
                          wchar_t*       _String,
                                 wchar_t const* _Delimiter,
        wchar_t**      _Context
    );



    

#line 232 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"
        



    #line 237 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

      
    static __inline wchar_t* __cdecl _wcstok(
          wchar_t*       const _String,
                 wchar_t const* const _Delimiter
        )
    {
        return wcstok(_String, _Delimiter, 0);
    }

    

#line 250 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

    








#line 261 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

#line 263 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"



 
  
__declspec(dllimport) wchar_t* __cdecl _wcserror(
      int _ErrorNumber
    );


__declspec(dllimport) errno_t __cdecl _wcserror_s(
      wchar_t* _Buffer,
                                  size_t   _SizeInWords,
                                  int      _ErrorNumber
    );


#line 284 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 
 
  
__declspec(dllimport) wchar_t* __cdecl __wcserror(
      wchar_t const* _String
    );

 __declspec(dllimport) errno_t __cdecl __wcserror_s(
      wchar_t*       _Buffer,
                                  size_t         _SizeInWords,
                                wchar_t const* _ErrorMessage
    );


#line 303 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

  __declspec(dllimport) int __cdecl _wcsicmp(
      wchar_t const* _String1,
      wchar_t const* _String2
    );

  __declspec(dllimport) int __cdecl _wcsicmp_l(
        wchar_t const* _String1,
        wchar_t const* _String2,
      _locale_t      _Locale
    );

  __declspec(dllimport) int __cdecl _wcsnicmp(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount
    );

  __declspec(dllimport) int __cdecl _wcsnicmp_l(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount,
                        _locale_t      _Locale
    );

 __declspec(dllimport) errno_t __cdecl _wcsnset_s(
      wchar_t* _Destination,
                                 size_t   _SizeInWords,
                                 wchar_t  _Value,
                                 size_t   _MaxCount
    );


#line 341 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcsnset(  wchar_t *_String,   wchar_t _Value,   size_t _MaxCount);
#line 349 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

__declspec(dllimport) wchar_t* __cdecl _wcsrev(
      wchar_t* _String
    );

 __declspec(dllimport) errno_t __cdecl _wcsset_s(
      wchar_t* _Destination,
                                 size_t   _SizeInWords,
                                 wchar_t  _Value
    );


#line 365 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcsset(  wchar_t *_String,   wchar_t _Value);
#line 372 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) errno_t __cdecl _wcslwr_s(
      wchar_t* _String,
                                 size_t   _SizeInWords
    );


#line 382 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcslwr( wchar_t *_String);
#line 387 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"


__declspec(dllimport) errno_t __cdecl _wcslwr_s_l(
      wchar_t*  _String,
                                 size_t    _SizeInWords,
                             _locale_t _Locale
    );


#line 400 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcslwr_l(  wchar_t *_String,   _locale_t _Locale);
#line 407 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"


__declspec(dllimport) errno_t __cdecl _wcsupr_s(
      wchar_t* _String,
                          size_t   _Size
    );


#line 418 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcsupr( wchar_t *_String);
#line 423 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"


__declspec(dllimport) errno_t __cdecl _wcsupr_s_l(
      wchar_t*  _String,
                          size_t    _Size,
                      _locale_t _Locale
    );


#line 436 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 __declspec(dllimport) wchar_t* __cdecl _wcsupr_l(  wchar_t *_String,   _locale_t _Locale);
#line 443 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

 

__declspec(dllimport) size_t __cdecl wcsxfrm(
        wchar_t*       _Destination,
                                         wchar_t const* _Source,
                size_t         _MaxCount
    );

 

__declspec(dllimport) size_t __cdecl _wcsxfrm_l(
        wchar_t*       _Destination,
                                         wchar_t const* _Source,
                size_t         _MaxCount,
                                       _locale_t      _Locale
    );

 
__declspec(dllimport) int __cdecl wcscoll(
      wchar_t const* _String1,
      wchar_t const* _String2
    );

 
__declspec(dllimport) int __cdecl _wcscoll_l(
        wchar_t const* _String1,
        wchar_t const* _String2,
      _locale_t      _Locale
    );

 
__declspec(dllimport) int __cdecl _wcsicoll(
      wchar_t const* _String1,
      wchar_t const* _String2
    );

 
__declspec(dllimport) int __cdecl _wcsicoll_l(
        wchar_t const* _String1,
        wchar_t const* _String2,
      _locale_t      _Locale
    );

 
__declspec(dllimport) int __cdecl _wcsncoll(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount
    );

 
__declspec(dllimport) int __cdecl _wcsncoll_l(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount,
                        _locale_t      _Locale
    );

 
__declspec(dllimport) int __cdecl _wcsnicoll(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount
    );

 
__declspec(dllimport) int __cdecl _wcsnicoll_l(
      wchar_t const* _String1,
      wchar_t const* _String2,
                            size_t         _MaxCount,
                        _locale_t      _Locale
    );
















































    


#line 568 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

      
    __declspec(dllimport) wchar_t* __cdecl wcsdup(
          wchar_t const* _String
        );

    

#line 577 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

    
    

      
    __declspec(dllimport) int __cdecl wcsicmp(
          wchar_t const* _String1,
          wchar_t const* _String2
        );

      
    __declspec(dllimport) int __cdecl wcsnicmp(
          wchar_t const* _String1,
          wchar_t const* _String2,
                                size_t         _MaxCount
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl wcsnset(
          wchar_t* _String,
                                  wchar_t  _Value,
                                  size_t   _MaxCount
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl wcsrev(
          wchar_t* _String
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl wcsset(
          wchar_t* _String,
               wchar_t  _Value
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl wcslwr(
          wchar_t* _String
        );

    
     
    __declspec(dllimport) wchar_t* __cdecl wcsupr(
          wchar_t* _String
        );

      
    __declspec(dllimport) int __cdecl wcsicoll(
          wchar_t const* _String1,
          wchar_t const* _String2
        );

#line 634 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"



__pragma(pack(pop))

#line 640 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h"

#pragma warning(pop) 
#line 15 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"




#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    
    __declspec(dllimport) errno_t __cdecl strcpy_s(
          char*       _Destination,
                                  rsize_t     _SizeInBytes,
                                char const* _Source
        );

    
    __declspec(dllimport) errno_t __cdecl strcat_s(
          char*       _Destination,
                                     rsize_t     _SizeInBytes,
                                   char const* _Source
        );

    
    __declspec(dllimport) errno_t __cdecl strerror_s(
          char*  _Buffer,
                                  size_t _SizeInBytes,
                                  int    _ErrorNumber);

    
    __declspec(dllimport) errno_t __cdecl strncat_s(
          char*       _Destination,
                                     rsize_t     _SizeInBytes,
               char const* _Source,
                                     rsize_t     _MaxCount
        );

    
    __declspec(dllimport) errno_t __cdecl strncpy_s(
          char*       _Destination,
                                  rsize_t     _SizeInBytes,
            char const* _Source,
                                  rsize_t     _MaxCount
        );

     
    __declspec(dllimport) char*  __cdecl strtok_s(
                          char*       _String,
                                 char const* _Delimiter,
            char**      _Context
        );

#line 75 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

__declspec(dllimport) void* __cdecl _memccpy(
      void*       _Dst,
                                   void const* _Src,
                                   int         _Val,
                                   size_t      _MaxCount
    );


#line 88 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"



      char* __cdecl strcat( char *_Destination,  char const* _Source);
#line 96 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

#line 98 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
int __cdecl strcmp(
      char const* _Str1,
      char const* _Str2
    );

 
__declspec(dllimport) int __cdecl _strcmpi(
      char const* _String1,
      char const* _String2
    );

 
__declspec(dllimport) int __cdecl strcoll(
      char const* _String1,
      char const* _String2
    );

 
__declspec(dllimport) int __cdecl _strcoll_l(
        char const* _String1,
        char const* _String2,
      _locale_t   _Locale
    );


#line 129 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

  char* __cdecl strcpy( char *_Destination,  char const* _Source);
#line 135 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) size_t __cdecl strcspn(
      char const* _Str,
      char const* _Control
    );




#line 146 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) __declspec(allocator) char* __cdecl _strdup(
      char const* _Source
    );



#line 155 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
 
  
__declspec(dllimport) char*  __cdecl _strerror(
      char const* _ErrorMessage
    );


__declspec(dllimport) errno_t __cdecl _strerror_s(
      char*       _Buffer,
                              size_t      _SizeInBytes,
                        char const* _ErrorMessage
    );


#line 175 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
  
__declspec(dllimport) char* __cdecl strerror(
      int _ErrorMessage
    );


#line 187 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) int __cdecl _stricmp(
      char const* _String1,
      char const* _String2
    );

 
__declspec(dllimport) int __cdecl _stricoll(
      char const* _String1,
      char const* _String2
    );

 
__declspec(dllimport) int __cdecl _stricoll_l(
        char const* _String1,
        char const* _String2,
      _locale_t   _Locale
    );

 
__declspec(dllimport) int __cdecl _stricmp_l(
        char const* _String1,
        char const* _String2,
      _locale_t   _Locale
    );

 
size_t __cdecl strlen(
      char const* _Str
    );


__declspec(dllimport) errno_t __cdecl _strlwr_s(
      char*  _String,
                          size_t _Size
    );


#line 229 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl _strlwr( char *_String);
#line 234 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"


__declspec(dllimport) errno_t __cdecl _strlwr_s_l(
      char*     _String,
                          size_t    _Size,
                      _locale_t _Locale
    );


#line 247 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl _strlwr_l(  char *_String,   _locale_t _Locale);
#line 254 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"


#line 261 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl strncat(  char *_Destination,   char const* _Source,   size_t _Count);
#line 269 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) int __cdecl strncmp(
      char const* _Str1,
      char const* _Str2,
                            size_t      _MaxCount
    );

 
__declspec(dllimport) int __cdecl _strnicmp(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount
    );

 
__declspec(dllimport) int __cdecl _strnicmp_l(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount,
                        _locale_t   _Locale
    );

 
__declspec(dllimport) int __cdecl _strnicoll(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount
    );

 
__declspec(dllimport) int __cdecl _strnicoll_l(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount,
                        _locale_t   _Locale
    );

 
__declspec(dllimport) int __cdecl _strncoll(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount
    );

 
__declspec(dllimport) int __cdecl _strncoll_l(
      char const* _String1,
      char const* _String2,
                            size_t      _MaxCount,
                        _locale_t   _Locale
    );

__declspec(dllimport) size_t __cdecl __strncnt(
      char const* _String,
                         size_t      _Count
    );


#line 333 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl strncpy(    char *_Destination,   char const* _Source,   size_t _Count);
#line 341 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 

#line 347 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

#line 351 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
__declspec(dllimport) size_t __cdecl strnlen(
      char const* _String,
                            size_t      _MaxCount
    );



     
    
#line 363 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
    
#line 367 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
    static __inline size_t __cdecl strnlen_s(
          char const* _String,
                                size_t      _MaxCount
        )
    {
        return _String == 0 ? 0 : strnlen(_String, _MaxCount);
    }

#line 376 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"


__declspec(dllimport) errno_t __cdecl _strnset_s(
      char*  _String,
                                 size_t _SizeInBytes,
                                 int    _Value,
                                 size_t _MaxCount
    );


#line 391 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl _strnset(  char *_Destination,   int _Value,   size_t _Count);
#line 399 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) char * __cdecl strpbrk(
      char const* _Str,
      char const* _Control
    );

__declspec(dllimport) char* __cdecl _strrev(
      char* _Str
    );


__declspec(dllimport) errno_t __cdecl _strset_s(
      char*  _Destination,
                                     size_t _DestinationSize,
                                     int    _Value
    );


#line 422 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

  char* __cdecl _strset( char *_Destination,  int _Value);
#line 428 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 
__declspec(dllimport) size_t __cdecl strspn(
      char const* _Str,
      char const* _Control
    );

  
__declspec(dllimport) char* __cdecl strtok(
      char*       _String,
             char const* _Delimiter
    );


__declspec(dllimport) errno_t __cdecl _strupr_s(
      char*  _String,
                          size_t _Size
    );


#line 451 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl _strupr( char *_String);
#line 456 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"


__declspec(dllimport) errno_t __cdecl _strupr_s_l(
      char*     _String,
                          size_t    _Size,
                      _locale_t _Locale
    );


#line 469 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 __declspec(dllimport) char* __cdecl _strupr_l(  char *_String,   _locale_t _Locale);
#line 476 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"

 

__declspec(dllimport) size_t __cdecl strxfrm(
        char*       _Destination,
                                         char const* _Source,
                 size_t      _MaxCount
    );

 

__declspec(dllimport) size_t __cdecl _strxfrm_l(
        char*       _Destination,
                                         char const* _Source,
                 size_t      _MaxCount,
                                       _locale_t   _Locale
    );




































    
    
      
    __declspec(dllimport) char* __cdecl strdup(
          char const* _String
        );
    

    
      
    __declspec(dllimport) int __cdecl strcmpi(
          char const* _String1,
          char const* _String2
        );

      
    __declspec(dllimport) int __cdecl stricmp(
          char const* _String1,
          char const* _String2
        );

    
    __declspec(dllimport) char* __cdecl strlwr(
          char* _String
        );

      
    __declspec(dllimport) int __cdecl strnicmp(
          char const* _String1,
          char const* _String2,
                                size_t      _MaxCount
        );

    
    __declspec(dllimport) char* __cdecl strnset(
          char*  _String,
                                  int    _Value,
                                  size_t _MaxCount
        );

    
    __declspec(dllimport) char* __cdecl strrev(
          char* _String
        );

    
    char* __cdecl strset(
          char* _String,
               int   _Value);

    
    __declspec(dllimport) char* __cdecl strupr(
          char* _String
        );

#line 585 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 592 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
#line 593 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\string.h"
#line 31 "C:\\Users\\freez\\Python310\\include\\Python.h"


#line 34 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"







#pragma once




#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_malloc.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))





































#line 56 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_malloc.h"

     
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _calloc_base(
      size_t _Count,
      size_t _Size
    );

     
__declspec(dllimport)  __declspec(allocator) __declspec(restrict) 
void* __cdecl calloc(
       size_t _Count,
       size_t _Size
    );

 
__declspec(dllimport) int __cdecl _callnewh(
      size_t _Size
    );

     
__declspec(dllimport) __declspec(allocator) 
void* __cdecl _expand(
                void*  _Block,
       size_t _Size
    );

__declspec(dllimport)
void __cdecl _free_base(
        void* _Block
    );

__declspec(dllimport) 
void __cdecl free(
        void* _Block
    );

     
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _malloc_base(
      size_t _Size
    );

     
__declspec(dllimport) __declspec(allocator)  __declspec(restrict) 
void* __cdecl malloc(
       size_t _Size
    );

 
__declspec(dllimport)
size_t __cdecl _msize_base(
      void* _Block
    );

 
__declspec(dllimport) 
size_t __cdecl _msize(
      void* _Block
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _realloc_base(
         void*  _Block,
                                 size_t _Size
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict) 
void* __cdecl realloc(
        void*  _Block,
              size_t _Size
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _recalloc_base(
        void*  _Block,
                                size_t _Count,
                                size_t _Size
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _recalloc(
        void*  _Block,
              size_t _Count,
              size_t _Size
    );

__declspec(dllimport)
void __cdecl _aligned_free(
        void* _Block
    );

     
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_malloc(
       size_t _Size,
                         size_t _Alignment
    );

     
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_offset_malloc(
       size_t _Size,
                         size_t _Alignment,
                         size_t _Offset
    );

 
__declspec(dllimport)
size_t __cdecl _aligned_msize(
      void*  _Block,
               size_t _Alignment,
               size_t _Offset
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_offset_realloc(
        void*  _Block,
              size_t _Size,
                                size_t _Alignment,
                                size_t _Offset
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_offset_recalloc(
        void*  _Block,
              size_t _Count,
              size_t _Size,
                                size_t _Alignment,
                                size_t _Offset
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_realloc(
        void*  _Block,
              size_t _Size,
                                size_t _Alignment
    );

       
__declspec(dllimport) __declspec(allocator) __declspec(restrict)
void* __cdecl _aligned_recalloc(
        void*  _Block,
              size_t _Count,
              size_t _Size,
                                size_t _Alignment
    );


















#line 229 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_malloc.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"
#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_search.h"










#pragma once


#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stddef.h"







#pragma once





#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))
















    __declspec(dllimport) int* __cdecl _errno(void);
    

    __declspec(dllimport) errno_t __cdecl _set_errno(  int _Value);
    __declspec(dllimport) errno_t __cdecl _get_errno(  int* _Value);

#line 42 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stddef.h"




    


        
    #line 51 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stddef.h"


#line 54 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stddef.h"

__declspec(dllimport) extern unsigned long  __cdecl __threadid(void);

__declspec(dllimport) extern uintptr_t __cdecl __threadhandle(void);



__pragma(pack(pop))

#pragma warning(pop) 
#line 65 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stddef.h"
#line 15 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_search.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))


    typedef int (__cdecl* _CoreCrtSecureSearchSortCompareFunction)(void*, void const*, void const*);
    typedef int (__cdecl* _CoreCrtNonSecureSearchSortCompareFunction)(void const*, void const*);




     
    __declspec(dllimport) void* __cdecl bsearch_s(
                                                        void const* _Key,
          void const* _Base,
                                                        rsize_t     _NumOfElements,
                                                        rsize_t     _SizeOfElements,
                            _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
                                                    void*       _Context
        );

    __declspec(dllimport) void __cdecl qsort_s(
          void*   _Base,
                                                             rsize_t _NumOfElements,
                                                             rsize_t _SizeOfElements,
                             _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
                                                         void*   _Context
        );

#line 48 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_search.h"



 
__declspec(dllimport) void* __cdecl bsearch(
                                                    void const* _Key,
      void const* _Base,
                                                    size_t      _NumOfElements,
                                                    size_t      _SizeOfElements,
                     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );

__declspec(dllimport) void __cdecl qsort(
      void*  _Base,
                                                         size_t _NumOfElements,
                                                         size_t _SizeOfElements,
                     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );

 
__declspec(dllimport) void* __cdecl _lfind_s(
                                                       void const*   _Key,
      void const*   _Base,
                                                    unsigned int* _NumOfElements,
                                                       size_t        _SizeOfElements,
                             _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
                                                       void*         _Context
    );

 
__declspec(dllimport) void* __cdecl _lfind(
                                                       void const*   _Key,
      void const*   _Base,
                                                    unsigned int* _NumOfElements,
                                                       unsigned int  _SizeOfElements,
                          _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );

 
__declspec(dllimport) void* __cdecl _lsearch_s(
                                                             void const*   _Key,
      void*         _Base,
                                                          unsigned int* _NumOfElements,
                                                             size_t        _SizeOfElements,
                                   _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
                                                             void*         _Context
    );

 
__declspec(dllimport) void* __cdecl _lsearch(
                                                             void const*   _Key,
      void*         _Base,
                                                          unsigned int* _NumOfElements,
                                                             unsigned int  _SizeOfElements,
                                _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );




















































































#line 189 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_search.h"





      
    __declspec(dllimport) void* __cdecl lfind(
                                                           void const*   _Key,
          void const*   _Base,
                                                        unsigned int* _NumOfElements,
                                                           unsigned int  _SizeOfElements,
                              _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
        );

      
    __declspec(dllimport) void* __cdecl lsearch(
                                                                void const*   _Key,
          void*         _Base,
                                                             unsigned int* _NumOfElements,
                                                                unsigned int  _SizeOfElements,
                                   _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
        );

#line 213 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_search.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 15 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"
#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))


































     
    
    __declspec(dllimport) errno_t __cdecl _itow_s(
                                  int      _Value,
          wchar_t* _Buffer,
                                  size_t   _BufferCount,
                                  int      _Radix
        );

    
#line 67 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

     __declspec(dllimport) wchar_t* __cdecl _itow( int _Value,   wchar_t *_Buffer,  int _Radix);
#line 74 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

     
    
    __declspec(dllimport) errno_t __cdecl _ltow_s(
                                  long     _Value,
          wchar_t* _Buffer,
                                  size_t   _BufferCount,
                                  int      _Radix
        );

    
#line 90 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

     __declspec(dllimport) wchar_t* __cdecl _ltow( long _Value,   wchar_t *_Buffer,  int _Radix);
#line 97 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

    
    __declspec(dllimport) errno_t __cdecl _ultow_s(
                                  unsigned long _Value,
          wchar_t*      _Buffer,
                                  size_t        _BufferCount,
                                  int           _Radix
        );

    
#line 112 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

     __declspec(dllimport) wchar_t* __cdecl _ultow( unsigned long _Value,   wchar_t *_Buffer,  int _Radix);
#line 119 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

     
    __declspec(dllimport) double __cdecl wcstod(
                            wchar_t const* _String,
            wchar_t**      _EndPtr
        );

     
    __declspec(dllimport) double __cdecl _wcstod_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) long __cdecl wcstol(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) long __cdecl _wcstol_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) long long __cdecl wcstoll(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) long long __cdecl _wcstoll_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) unsigned long __cdecl wcstoul(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) unsigned long __cdecl _wcstoul_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) unsigned long long __cdecl wcstoull(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) unsigned long long __cdecl _wcstoull_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) long double __cdecl wcstold(
                            wchar_t const* _String,
            wchar_t**      _EndPtr
        );

     
    __declspec(dllimport) long double __cdecl _wcstold_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) float __cdecl wcstof(
                            wchar_t const* _String,
            wchar_t**      _EndPtr
        );

     
    __declspec(dllimport) float __cdecl _wcstof_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) double __cdecl _wtof(
          wchar_t const* _String
        );

     
    __declspec(dllimport) double __cdecl _wtof_l(
            wchar_t const* _String,
          _locale_t      _Locale
        );

     
    __declspec(dllimport) int __cdecl _wtoi(
          wchar_t const* _String
        );

     
    __declspec(dllimport) int __cdecl _wtoi_l(
            wchar_t const* _String,
          _locale_t      _Locale
        );

     
    __declspec(dllimport) long __cdecl _wtol(
          wchar_t const* _String
        );

     
    __declspec(dllimport) long __cdecl _wtol_l(
            wchar_t const* _String,
          _locale_t      _Locale
        );

     
    __declspec(dllimport) long long __cdecl _wtoll(
          wchar_t const* _String
        );

     
    __declspec(dllimport) long long __cdecl _wtoll_l(
            wchar_t const* _String,
          _locale_t      _Locale
        );

    
    __declspec(dllimport) errno_t __cdecl _i64tow_s(
                                  __int64  _Value,
          wchar_t* _Buffer,
                                  size_t   _BufferCount,
                                  int      _Radix
        );

    
    __declspec(dllimport) wchar_t* __cdecl _i64tow(
                            __int64  _Value,
            wchar_t* _Buffer,
                            int      _Radix
        );

    
    __declspec(dllimport) errno_t __cdecl _ui64tow_s(
                                  unsigned __int64 _Value,
          wchar_t*         _Buffer,
                                  size_t           _BufferCount,
                                  int              _Radix
        );

    
    __declspec(dllimport) wchar_t* __cdecl _ui64tow(
                            unsigned __int64 _Value,
            wchar_t*         _Buffer,
                            int              _Radix
        );

     
    __declspec(dllimport) __int64 __cdecl _wtoi64(
          wchar_t const* _String
        );

     
    __declspec(dllimport) __int64 __cdecl _wtoi64_l(
            wchar_t const* _String,
          _locale_t      _Locale
        );

     
    __declspec(dllimport) __int64 __cdecl _wcstoi64(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) __int64 __cdecl _wcstoi64_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

     
    __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix
        );

     
    __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64_l(
                            wchar_t const* _String,
            wchar_t**      _EndPtr,
                              int            _Radix,
                          _locale_t      _Locale
        );

    
    

     
     
    __declspec(dllimport) __declspec(allocator) wchar_t* __cdecl _wfullpath(
          wchar_t*       _Buffer,
                                    wchar_t const* _Path,
                                      size_t         _BufferCount
        );

    

    
    __declspec(dllimport) errno_t __cdecl _wmakepath_s(
          wchar_t*       _Buffer,
                                  size_t         _BufferCount,
                            wchar_t const* _Drive,
                            wchar_t const* _Dir,
                            wchar_t const* _Filename,
                            wchar_t const* _Ext
        );

    
#line 365 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

 __declspec(dllimport) void __cdecl _wmakepath(  wchar_t *_Buffer,  wchar_t const* _Drive,  wchar_t const* _Dir,  wchar_t const* _Filename,  wchar_t const* _Ext);
#line 374 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

    __declspec(dllimport) void __cdecl _wperror(
          wchar_t const* _ErrorMessage
        );

    
    __declspec(dllimport) void __cdecl _wsplitpath(
                            wchar_t const* _FullPath,
            wchar_t*       _Drive,
            wchar_t*       _Dir,
            wchar_t*       _Filename,
            wchar_t*       _Ext
        );

    __declspec(dllimport) errno_t __cdecl _wsplitpath_s(
                                      wchar_t const* _FullPath,
             wchar_t*       _Drive,
                                        size_t         _DriveCount,
               wchar_t*       _Dir,
                                        size_t         _DirCount,
          wchar_t*       _Filename,
                                        size_t         _FilenameCount,
               wchar_t*       _Ext,
                                        size_t         _ExtCount
        );

    
#line 404 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

        
        

        
        __declspec(dllimport) errno_t __cdecl _wdupenv_s(
                wchar_t**      _Buffer,
                                                                                size_t*        _BufferCount,
                                                                                   wchar_t const* _VarName
            );

        

          
        __declspec(dllimport) wchar_t* __cdecl _wgetenv(
              wchar_t const* _VarName
            );

         
        
        __declspec(dllimport) errno_t __cdecl _wgetenv_s(
                                         size_t*        _RequiredCount,
              wchar_t*       _Buffer,
                                          size_t         _BufferCount,
                                        wchar_t const* _VarName
            );

        
#line 438 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

         
        __declspec(dllimport) int __cdecl _wputenv(
              wchar_t const* _EnvString
            );

        
        __declspec(dllimport) errno_t __cdecl _wputenv_s(
              wchar_t const* _Name,
              wchar_t const* _Value
            );

        __declspec(dllimport) errno_t __cdecl _wsearchenv_s(
                                    wchar_t const* _Filename,
                                    wchar_t const* _VarName,
              wchar_t*       _Buffer,
                                      size_t         _BufferCount
            );

        
#line 463 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

         __declspec(dllimport) void __cdecl _wsearchenv( wchar_t const* _Filename,  wchar_t const* _VarName,   wchar_t *_ResultPath);
#line 470 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"

        __declspec(dllimport) int __cdecl _wsystem(
              wchar_t const* _Command
            );

#line 476 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstdlib.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 16 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))




    
#line 29 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"









__declspec(dllimport) void __cdecl _swab(
        char* _Buf1,
        char* _Buf2,
                                                                  int   _SizeInBytes
    );













    __declspec(dllimport) __declspec(noreturn) void __cdecl exit(  int _Code);
    __declspec(dllimport) __declspec(noreturn) void __cdecl _exit(  int _Code);
    __declspec(dllimport) __declspec(noreturn) void __cdecl _Exit(  int _Code);
    __declspec(dllimport) __declspec(noreturn) void __cdecl quick_exit(  int _Code);
    __declspec(dllimport) __declspec(noreturn) void __cdecl abort(void);
#line 62 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"





__declspec(dllimport) unsigned int __cdecl _set_abort_behavior(
      unsigned int _Flags,
      unsigned int _Mask
    );




    

    typedef int (__cdecl* _onexit_t)(void);
    


#line 82 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


    
    
#line 87 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

























































    int       __cdecl atexit(void (__cdecl*)(void));
    _onexit_t __cdecl _onexit(  _onexit_t _Func);
#line 147 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

int __cdecl at_quick_exit(void (__cdecl*)(void));









    
    typedef void (__cdecl* _purecall_handler)(void);

    
    typedef void (__cdecl* _invalid_parameter_handler)(
        wchar_t const*,
        wchar_t const*,
        wchar_t const*,
        unsigned int,
        uintptr_t
        );

    
     _purecall_handler __cdecl _set_purecall_handler(
          _purecall_handler _Handler
        );

     _purecall_handler __cdecl _get_purecall_handler(void);

    
    __declspec(dllimport) _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(
          _invalid_parameter_handler _Handler
        );

    __declspec(dllimport) _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(void);

    __declspec(dllimport) _invalid_parameter_handler __cdecl _set_thread_local_invalid_parameter_handler(
          _invalid_parameter_handler _Handler
        );

    __declspec(dllimport) _invalid_parameter_handler __cdecl _get_thread_local_invalid_parameter_handler(void);
#line 190 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"












#line 203 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"









 __declspec(dllimport) int __cdecl _set_error_mode(  int _Mode);




    __declspec(dllimport) int* __cdecl _errno(void);
    

    __declspec(dllimport) errno_t __cdecl _set_errno(  int _Value);
    __declspec(dllimport) errno_t __cdecl _get_errno(  int* _Value);

    __declspec(dllimport) unsigned long* __cdecl __doserrno(void);
    

    __declspec(dllimport) errno_t __cdecl _set_doserrno(  unsigned long _Value);
    __declspec(dllimport) errno_t __cdecl _get_doserrno(  unsigned long * _Value);

    
    __declspec(dllimport)  char** __cdecl __sys_errlist(void);
    

    __declspec(dllimport)  int * __cdecl __sys_nerr(void);
    

    __declspec(dllimport) void __cdecl perror(  char const* _ErrMsg);
#line 238 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"




 __declspec(dllimport) char**    __cdecl __p__pgmptr (void);
 __declspec(dllimport) wchar_t** __cdecl __p__wpgmptr(void);
 __declspec(dllimport) int*      __cdecl __p__fmode  (void);








    
    
    
#line 257 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 
__declspec(dllimport) errno_t __cdecl _get_pgmptr (  char**    _Value);

 
__declspec(dllimport) errno_t __cdecl _get_wpgmptr(  wchar_t** _Value);

__declspec(dllimport) errno_t __cdecl _set_fmode  (               int       _Mode );

__declspec(dllimport) errno_t __cdecl _get_fmode  (              int*      _PMode);








typedef struct _div_t
{
    int quot;
    int rem;
} div_t;

typedef struct _ldiv_t
{
    long quot;
    long rem;
} ldiv_t;

typedef struct _lldiv_t
{
    long long quot;
    long long rem;
} lldiv_t;

  int       __cdecl abs   (  int       _Number);
  long      __cdecl labs  (  long      _Number);
  long long __cdecl llabs (  long long _Number);
  __int64   __cdecl _abs64(  __int64   _Number);

  unsigned short   __cdecl _byteswap_ushort(  unsigned short   _Number);
  unsigned long    __cdecl _byteswap_ulong (  unsigned long    _Number);
  unsigned __int64 __cdecl _byteswap_uint64(  unsigned __int64 _Number);

  __declspec(dllimport) div_t   __cdecl div  (  int       _Numerator,   int       _Denominator);
  __declspec(dllimport) ldiv_t  __cdecl ldiv (  long      _Numerator,   long      _Denominator);
  __declspec(dllimport) lldiv_t __cdecl lldiv(  long long _Numerator,   long long _Denominator);



#pragma warning(push)
#pragma warning(disable: 6540)

unsigned int __cdecl _rotl(
      unsigned int _Value,
      int          _Shift
    );

 
unsigned long __cdecl _lrotl(
      unsigned long _Value,
      int           _Shift
    );

unsigned __int64 __cdecl _rotl64(
      unsigned __int64 _Value,
      int              _Shift
    );

unsigned int __cdecl _rotr(
      unsigned int _Value,
      int          _Shift
    );

 
unsigned long __cdecl _lrotr(
      unsigned long _Value,
      int           _Shift
    );

unsigned __int64 __cdecl _rotr64(
      unsigned __int64 _Value,
      int              _Shift
    );

#pragma warning(pop)






__declspec(dllimport) void __cdecl srand(  unsigned int _Seed);

  __declspec(dllimport) int __cdecl rand(void);



#line 357 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"





































    #pragma pack(push, 4)
    typedef struct
    {
        unsigned char ld[10];
    } _LDOUBLE;
    #pragma pack(pop)

    











#line 414 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

typedef struct
{
    double x;
} _CRT_DOUBLE;

typedef struct
{
    float f;
} _CRT_FLOAT;





typedef struct
{
    long double x;
} _LONGDOUBLE;



#pragma pack(push, 4)
typedef struct
{
    unsigned char ld12[12];
} _LDBL12;
#pragma pack(pop)








                     __declspec(dllimport) double    __cdecl atof   (  char const* _String);
   __declspec(dllimport) int       __cdecl atoi   (  char const* _String);
                     __declspec(dllimport) long      __cdecl atol   (  char const* _String);
                     __declspec(dllimport) long long __cdecl atoll  (  char const* _String);
                     __declspec(dllimport) __int64   __cdecl _atoi64(  char const* _String);

  __declspec(dllimport) double    __cdecl _atof_l  (  char const* _String,   _locale_t _Locale);
  __declspec(dllimport) int       __cdecl _atoi_l  (  char const* _String,   _locale_t _Locale);
  __declspec(dllimport) long      __cdecl _atol_l  (  char const* _String,   _locale_t _Locale);
  __declspec(dllimport) long long __cdecl _atoll_l (  char const* _String,   _locale_t _Locale);
  __declspec(dllimport) __int64   __cdecl _atoi64_l(  char const* _String,   _locale_t _Locale);

  __declspec(dllimport) int __cdecl _atoflt (  _CRT_FLOAT*  _Result,   char const* _String);
  __declspec(dllimport) int __cdecl _atodbl (  _CRT_DOUBLE* _Result,   char*       _String);
  __declspec(dllimport) int __cdecl _atoldbl(  _LDOUBLE*    _Result,   char*       _String);

 
__declspec(dllimport) int __cdecl _atoflt_l(
         _CRT_FLOAT* _Result,
        char const* _String,
      _locale_t   _Locale
    );

 
__declspec(dllimport) int __cdecl _atodbl_l(
         _CRT_DOUBLE* _Result,
        char*        _String,
      _locale_t    _Locale
    );


 
__declspec(dllimport) int __cdecl _atoldbl_l(
         _LDOUBLE* _Result,
        char*     _String,
      _locale_t _Locale
    );

 
__declspec(dllimport) float __cdecl strtof(
                        char const* _String,
        char**      _EndPtr
    );

 
__declspec(dllimport) float __cdecl _strtof_l(
                        char const* _String,
        char**      _EndPtr,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) double __cdecl strtod(
                        char const* _String,
        char**      _EndPtr
    );

 
__declspec(dllimport) double __cdecl _strtod_l(
                        char const* _String,
        char**      _EndPtr,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) long double __cdecl strtold(
                        char const* _String,
        char**      _EndPtr
    );

 
__declspec(dllimport) long double __cdecl _strtold_l(
                        char const* _String,
        char**      _EndPtr,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) long __cdecl strtol(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) long __cdecl _strtol_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) long long __cdecl strtoll(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) long long __cdecl _strtoll_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) unsigned long __cdecl strtoul(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) unsigned long __cdecl _strtoul_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) unsigned long long __cdecl strtoull(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) unsigned long long __cdecl _strtoull_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) __int64 __cdecl _strtoi64(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) __int64 __cdecl _strtoi64_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

 
__declspec(dllimport) unsigned __int64 __cdecl _strtoui64(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

 
__declspec(dllimport) unsigned __int64 __cdecl _strtoui64_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );








 

__declspec(dllimport) errno_t __cdecl _itoa_s(
                              int    _Value,
      char*  _Buffer,
                              size_t _BufferCount,
                              int    _Radix
    );


#line 640 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) char* __cdecl _itoa( int _Value,   char *_Buffer,  int _Radix);
#line 647 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 

__declspec(dllimport) errno_t __cdecl _ltoa_s(
                              long   _Value,
      char*  _Buffer,
                              size_t _BufferCount,
                              int    _Radix
    );


#line 663 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) char* __cdecl _ltoa( long _Value,   char *_Buffer,  int _Radix);
#line 670 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 

__declspec(dllimport) errno_t __cdecl _ultoa_s(
                              unsigned long _Value,
      char*         _Buffer,
                              size_t        _BufferCount,
                              int           _Radix
    );


#line 686 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) char* __cdecl _ultoa( unsigned long _Value,   char *_Buffer,  int _Radix);
#line 693 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 

__declspec(dllimport) errno_t __cdecl _i64toa_s(
                              __int64 _Value,
      char*   _Buffer,
                              size_t  _BufferCount,
                              int     _Radix
    );

 

__declspec(dllimport) char* __cdecl _i64toa(
                        __int64 _Value,
        char*   _Buffer,
                        int     _Radix
    );

 

__declspec(dllimport) errno_t __cdecl _ui64toa_s(
                              unsigned __int64 _Value,
      char*            _Buffer,
                              size_t           _BufferCount,
                              int              _Radix
    );


__declspec(dllimport) char* __cdecl _ui64toa(
                        unsigned __int64 _Value,
        char*            _Buffer,
                        int              _Radix
    );













 

__declspec(dllimport) errno_t __cdecl _ecvt_s(
      char* _Buffer,
       size_t                       _BufferCount,
       double                       _Value,
       int                          _DigitCount,
      int*                         _PtDec,
      int*                         _PtSign
    );


#line 758 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

  
__declspec(dllimport) char* __cdecl _ecvt(
       double _Value,
       int    _DigitCount,
      int*   _PtDec,
      int*   _PtSign
    );

 

__declspec(dllimport) errno_t __cdecl _fcvt_s(
      char*  _Buffer,
                              size_t _BufferCount,
                              double _Value,
                              int    _FractionalDigitCount,
                             int*   _PtDec,
                             int*   _PtSign
    );


#line 787 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 
  
__declspec(dllimport) char* __cdecl _fcvt(
       double _Value,
       int    _FractionalDigitCount,
      int*   _PtDec,
      int*   _PtSign
    );

 
__declspec(dllimport) errno_t __cdecl _gcvt_s(
      char*  _Buffer,
                              size_t _BufferCount,
                              double _Value,
                              int    _DigitCount
    );


#line 812 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


__declspec(dllimport) char* __cdecl _gcvt(
                        double _Value,
                        int    _DigitCount,
        char*  _Buffer
    );











    

#line 833 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"
        
    #line 835 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    


        
    #line 841 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

     
    __declspec(dllimport) int __cdecl ___mb_cur_max_func(void);

     
    __declspec(dllimport) int __cdecl ___mb_cur_max_l_func(_locale_t _Locale);
#line 848 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"



 
__declspec(dllimport) int __cdecl mblen(
        char const* _Ch,
                                             size_t      _MaxCount
    );

 
__declspec(dllimport) int __cdecl _mblen_l(
        char const* _Ch,
                                             size_t      _MaxCount,
                                         _locale_t   _Locale
    );

 
 
__declspec(dllimport) size_t __cdecl _mbstrlen(
      char const* _String
    );

 
 
__declspec(dllimport) size_t __cdecl _mbstrlen_l(
        char const* _String,
      _locale_t   _Locale
    );

 
 
__declspec(dllimport) size_t __cdecl _mbstrnlen(
      char const* _String,
        size_t      _MaxCount
    );

 
 
__declspec(dllimport) size_t __cdecl _mbstrnlen_l(
        char const* _String,
          size_t      _MaxCount,
      _locale_t   _Locale
    );

 
__declspec(dllimport) int __cdecl mbtowc(
                      wchar_t*    _DstCh,
      char const* _SrcCh,
                                      size_t      _SrcSizeInBytes
    );

 
__declspec(dllimport) int __cdecl _mbtowc_l(
                      wchar_t*    _DstCh,
      char const* _SrcCh,
                                      size_t      _SrcSizeInBytes,
                                  _locale_t   _Locale
    );


__declspec(dllimport) errno_t __cdecl mbstowcs_s(
                                                      size_t*     _PtNumOfCharConverted,
      wchar_t*    _DstBuf,
                                                           size_t      _SizeInWords,
                                     char const* _SrcBuf,
                                                           size_t      _MaxCount
    );


#line 923 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) size_t __cdecl mbstowcs( wchar_t *_Dest,  char const* _Source,  size_t _MaxCount);
#line 930 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


__declspec(dllimport) errno_t __cdecl _mbstowcs_s_l(
                                                      size_t*     _PtNumOfCharConverted,
      wchar_t*    _DstBuf,
                                                           size_t      _SizeInWords,
                                     char const* _SrcBuf,
                                                           size_t      _MaxCount,
                                                       _locale_t   _Locale
    );


#line 949 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) size_t __cdecl _mbstowcs_l(  wchar_t *_Dest,   char const* _Source,   size_t _MaxCount,   _locale_t _Locale);
#line 958 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"





__declspec(dllimport) int __cdecl wctomb(
      char*   _MbCh,
                                wchar_t _WCh
    );


__declspec(dllimport) int __cdecl _wctomb_l(
        char*     _MbCh,
                          wchar_t   _WCh,
                      _locale_t _Locale
    );



    
    __declspec(dllimport) errno_t __cdecl wctomb_s(
                                                         int*    _SizeConverted,
          char*   _MbCh,
                                                              rsize_t _SizeInBytes,
                                                              wchar_t _WCh
        );

#line 986 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


__declspec(dllimport) errno_t __cdecl _wctomb_s_l(
                             int*     _SizeConverted,
      char*     _MbCh,
                                  size_t    _SizeInBytes,
                                  wchar_t   _WCh,
                              _locale_t _Locale);


__declspec(dllimport) errno_t __cdecl wcstombs_s(
                                                               size_t*        _PtNumOfCharConverted,
      char*          _Dst,
                                                                    size_t         _DstSizeInBytes,
                                                                  wchar_t const* _Src,
                                                                    size_t         _MaxCountInBytes
    );


#line 1011 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) size_t __cdecl wcstombs( char *_Dest,  wchar_t const* _Source,  size_t _MaxCount);
#line 1018 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


__declspec(dllimport) errno_t __cdecl _wcstombs_s_l(
                                                               size_t*        _PtNumOfCharConverted,
      char*          _Dst,
                                                                    size_t         _DstSizeInBytes,
                                                                  wchar_t const* _Src,
                                                                    size_t         _MaxCountInBytes,
                                                                _locale_t      _Locale
    );


#line 1037 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) size_t __cdecl _wcstombs_l(  char *_Dest,   wchar_t const* _Source,   size_t _MaxCount,   _locale_t _Locale);
#line 1046 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"




















 
 
__declspec(dllimport) __declspec(allocator) char* __cdecl _fullpath(
      char*       _Buffer,
                                char const* _Path,
                                  size_t      _BufferCount
    );




__declspec(dllimport) errno_t __cdecl _makepath_s(
      char*       _Buffer,
                              size_t      _BufferCount,
                        char const* _Drive,
                        char const* _Dir,
                        char const* _Filename,
                        char const* _Ext
    );


#line 1094 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

 __declspec(dllimport) void __cdecl _makepath(  char *_Buffer,  char const* _Drive,  char const* _Dir,  char const* _Filename,  char const* _Ext);
#line 1103 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"


__declspec(dllimport) void __cdecl _splitpath(
                        char const* _FullPath,
        char*       _Drive,
        char*       _Dir,
        char*       _Filename,
        char*       _Ext
    );


__declspec(dllimport) errno_t __cdecl _splitpath_s(
                                  char const* _FullPath,
         char*       _Drive,
                                    size_t      _DriveCount,
           char*       _Dir,
                                    size_t      _DirCount,
      char*       _Filename,
                                    size_t      _FilenameCount,
           char*       _Ext,
                                    size_t      _ExtCount
    );






 
__declspec(dllimport) errno_t __cdecl getenv_s(
                                 size_t*     _RequiredCount,
      char*       _Buffer,
                                  rsize_t     _BufferCount,
                                char const* _VarName
    );

#line 1140 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"




__declspec(dllimport) int*       __cdecl __p___argc (void);
__declspec(dllimport) char***    __cdecl __p___argv (void);
__declspec(dllimport) wchar_t*** __cdecl __p___wargv(void);






    
    
    
#line 1157 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

__declspec(dllimport) char***    __cdecl __p__environ (void);
__declspec(dllimport) wchar_t*** __cdecl __p__wenviron(void);


    
#line 1164 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"







    
    
#line 1174 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"









      
    __declspec(dllimport) char* __cdecl getenv(
          char const* _VarName
        );

    
#line 1194 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    


#line 1199 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    
    __declspec(dllimport) errno_t __cdecl _dupenv_s(
            char**      _Buffer,
                                                                            size_t*     _BufferCount,
                                                                               char const* _VarName
        );

    

#line 1210 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    __declspec(dllimport) int __cdecl system(
          char const* _Command
        );

    
    
    #pragma warning(push)
    #pragma warning(disable: 6540)

     
    __declspec(dllimport) int __cdecl _putenv(
          char const* _EnvString
        );

    
    __declspec(dllimport) errno_t __cdecl _putenv_s(
          char const* _Name,
          char const* _Value
        );

    #pragma warning(pop)

    __declspec(dllimport) errno_t __cdecl _searchenv_s(
                                char const* _Filename,
                                char const* _VarName,
          char*       _Buffer,
                                  size_t      _BufferCount
        );

    
#line 1246 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

     __declspec(dllimport) void __cdecl _searchenv( char const* _Filename,  char const* _VarName,   char *_Buffer);
#line 1253 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    
    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "SetErrorMode" " " "instead. See online help for details."))
    __declspec(dllimport) void __cdecl _seterrormode(
          int _Mode
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "Beep" " " "instead. See online help for details."))
    __declspec(dllimport) void __cdecl _beep(
          unsigned _Frequency,
          unsigned _Duration
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "Sleep" " " "instead. See online help for details."))
    __declspec(dllimport) void __cdecl _sleep(
          unsigned long _Duration
        );

#line 1272 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"









    
        
        
    #line 1285 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"

    
    

    #pragma warning(push)
    #pragma warning(disable: 4141) 

       
    __declspec(dllimport) char* __cdecl ecvt(
           double _Value,
           int    _DigitCount,
          int*   _PtDec,
          int*   _PtSign
        );

       
    __declspec(dllimport) char* __cdecl fcvt(
           double _Value,
           int    _FractionalDigitCount,
          int*   _PtDec,
          int*   _PtSign
        );

     
    __declspec(dllimport) char* __cdecl gcvt(
                            double _Value,
                            int    _DigitCount,
            char*  _DstBuf
        );

     
    __declspec(dllimport) char* __cdecl itoa(
                            int   _Value,
            char* _Buffer,
                            int   _Radix
        );

     
    __declspec(dllimport) char* __cdecl ltoa(
                            long  _Value,
            char* _Buffer,
                            int   _Radix
        );


    
    __declspec(dllimport) void __cdecl swab(
          char* _Buf1,
          char* _Buf2,
                                     int   _SizeInBytes
        );

     
    __declspec(dllimport) char* __cdecl ultoa(
                            unsigned long _Value,
            char*         _Buffer,
                            int           _Radix
        );

    

      
    __declspec(dllimport) int __cdecl putenv(
          char const* _EnvString
        );

    #pragma warning(pop)

    _onexit_t __cdecl onexit(  _onexit_t _Func);

#line 1356 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 1363 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\stdlib.h"
#line 35 "C:\\Users\\freez\\Python310\\include\\Python.h"







#line 43 "C:\\Users\\freez\\Python310\\include\\Python.h"





#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\assert.h"









#line 11 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\assert.h"



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    














#line 42 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\assert.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 49 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\pyport.h"





#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"








#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\stdint.h"







#pragma once






#pragma warning(push)
#pragma warning(disable:   4514 4820 )

typedef signed char        int8_t;
typedef short              int16_t;
typedef int                int32_t;
typedef long long          int64_t;
typedef unsigned char      uint8_t;
typedef unsigned short     uint16_t;
typedef unsigned int       uint32_t;
typedef unsigned long long uint64_t;

typedef signed char        int_least8_t;
typedef short              int_least16_t;
typedef int                int_least32_t;
typedef long long          int_least64_t;
typedef unsigned char      uint_least8_t;
typedef unsigned short     uint_least16_t;
typedef unsigned int       uint_least32_t;
typedef unsigned long long uint_least64_t;

typedef signed char        int_fast8_t;
typedef int                int_fast16_t;
typedef int                int_fast32_t;
typedef long long          int_fast64_t;
typedef unsigned char      uint_fast8_t;
typedef unsigned int       uint_fast16_t;
typedef unsigned int       uint_fast32_t;
typedef unsigned long long uint_fast64_t;

typedef long long          intmax_t;
typedef unsigned long long uintmax_t;










































    
    
    




#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\stdint.h"







































#pragma warning(pop) 

#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\stdint.h"
#line 15 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))








typedef struct
{
    intmax_t quot;
    intmax_t rem;
} _Lldiv_t;

typedef _Lldiv_t imaxdiv_t;








 
__declspec(dllimport) intmax_t __cdecl imaxabs(
      intmax_t _Number
    );

 
__declspec(dllimport) imaxdiv_t __cdecl imaxdiv(
      intmax_t _Numerator,
      intmax_t _Denominator
    );

__declspec(dllimport) intmax_t __cdecl strtoimax(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

__declspec(dllimport) intmax_t __cdecl _strtoimax_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

__declspec(dllimport) uintmax_t __cdecl strtoumax(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix
    );

__declspec(dllimport) uintmax_t __cdecl _strtoumax_l(
                        char const* _String,
        char**      _EndPtr,
                          int         _Radix,
                      _locale_t   _Locale
    );

__declspec(dllimport) intmax_t __cdecl wcstoimax(
                        wchar_t const* _String,
        wchar_t**      _EndPtr,
                          int            _Radix
    );

__declspec(dllimport) intmax_t __cdecl _wcstoimax_l(
                        wchar_t const* _String,
        wchar_t**      _EndPtr,
                          int            _Radix,
                      _locale_t      _Locale
    );

__declspec(dllimport) uintmax_t __cdecl wcstoumax(
                        wchar_t const* _String,
        wchar_t**      _EndPtr,
                          int            _Radix
    );

__declspec(dllimport) uintmax_t __cdecl _wcstoumax_l(
                        wchar_t const* _String,
        wchar_t**      _EndPtr,
                          int            _Radix,
                      _locale_t      _Locale
    );






















    


#line 132 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 151 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 170 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 189 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 208 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 227 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"






















    


#line 253 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 272 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 291 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 310 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"















    


#line 329 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"



__pragma(pack(pop))







#pragma warning(pop) 
#line 342 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\inttypes.h"
#line 7 "C:\\Users\\freez\\Python310\\include\\pyport.h"
















#line 24 "C:\\Users\\freez\\Python310\\include\\pyport.h"


#line 27 "C:\\Users\\freez\\Python310\\include\\pyport.h"





































#line 65 "C:\\Users\\freez\\Python310\\include\\pyport.h"
























#line 90 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 91 "C:\\Users\\freez\\Python310\\include\\pyport.h"






typedef uintptr_t       Py_uintptr_t;
typedef intptr_t        Py_intptr_t;













#line 113 "C:\\Users\\freez\\Python310\\include\\pyport.h"



typedef Py_ssize_t Py_hash_t;


typedef size_t Py_uhash_t;



typedef Py_ssize_t Py_ssize_clean_t;


#line 127 "C:\\Users\\freez\\Python310\\include\\pyport.h"






































#line 166 "C:\\Users\\freez\\Python310\\include\\pyport.h"























#line 190 "C:\\Users\\freez\\Python310\\include\\pyport.h"
   
#pragma warning(disable: 4710)
   





#line 199 "C:\\Users\\freez\\Python310\\include\\pyport.h"











#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\math.h"










#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"







#pragma once





#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))


    
    
    struct _exception
    {
        int    type;   
        char*  name;   
        double arg1;   
        double arg2;   
        double retval; 
    };

    
    
    
        

        struct _complex
        {
            double x, y; 
        };

        
            
            
        #line 46 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"
    #line 47 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"
#line 48 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"










#line 59 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"
    typedef float  float_t;
    typedef double double_t;
#line 62 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"















    
        extern double const _HUGE;
    

#line 82 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"
#line 83 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"


    
#line 87 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"


















































































void __cdecl _fperrraise(  int _Except);

  __declspec(dllimport) short __cdecl _dclass(  double _X);
  __declspec(dllimport) short __cdecl _ldclass(  long double _X);
  __declspec(dllimport) short __cdecl _fdclass(  float _X);

  __declspec(dllimport) int __cdecl _dsign(  double _X);
  __declspec(dllimport) int __cdecl _ldsign(  long double _X);
  __declspec(dllimport) int __cdecl _fdsign(  float _X);

  __declspec(dllimport) int __cdecl _dpcomp(  double _X,   double _Y);
  __declspec(dllimport) int __cdecl _ldpcomp(  long double _X,   long double _Y);
  __declspec(dllimport) int __cdecl _fdpcomp(  float _X,   float _Y);

  __declspec(dllimport) short __cdecl _dtest(  double* _Px);
  __declspec(dllimport) short __cdecl _ldtest(  long double* _Px);
  __declspec(dllimport) short __cdecl _fdtest(  float* _Px);

__declspec(dllimport) short __cdecl _d_int(  double* _Px,   short _Xexp);
__declspec(dllimport) short __cdecl _ld_int(  long double* _Px,   short _Xexp);
__declspec(dllimport) short __cdecl _fd_int(  float* _Px,   short _Xexp);

__declspec(dllimport) short __cdecl _dscale(  double* _Px,   long _Lexp);
__declspec(dllimport) short __cdecl _ldscale(  long double* _Px,   long _Lexp);
__declspec(dllimport) short __cdecl _fdscale(  float* _Px,   long _Lexp);

__declspec(dllimport) short __cdecl _dunscale(  short* _Pex,   double* _Px);
__declspec(dllimport) short __cdecl _ldunscale(  short* _Pex,   long double* _Px);
__declspec(dllimport) short __cdecl _fdunscale(  short* _Pex,   float* _Px);

  __declspec(dllimport) short __cdecl _dexp(  double* _Px,   double _Y,   long _Eoff);
  __declspec(dllimport) short __cdecl _ldexp(  long double* _Px,   long double _Y,   long _Eoff);
  __declspec(dllimport) short __cdecl _fdexp(  float* _Px,   float _Y,   long _Eoff);

  __declspec(dllimport) short __cdecl _dnorm(  unsigned short* _Ps);
  __declspec(dllimport) short __cdecl _fdnorm(  unsigned short* _Ps);

  __declspec(dllimport) double __cdecl _dpoly(  double _X,   double const* _Tab,   int _N);
  __declspec(dllimport) long double __cdecl _ldpoly(  long double _X,   long double const* _Tab,   int _N);
  __declspec(dllimport) float __cdecl _fdpoly(  float _X,   float const* _Tab,   int _N);

  __declspec(dllimport) double __cdecl _dlog(  double _X,   int _Baseflag);
  __declspec(dllimport) long double __cdecl _ldlog(  long double _X,   int _Baseflag);
  __declspec(dllimport) float __cdecl _fdlog(  float _X,   int _Baseflag);

  __declspec(dllimport) double __cdecl _dsin(  double _X,   unsigned int _Qoff);
  __declspec(dllimport) long double __cdecl _ldsin(  long double _X,   unsigned int _Qoff);
  __declspec(dllimport) float __cdecl _fdsin(  float _X,   unsigned int _Qoff);


typedef union
{   
    unsigned short _Sh[4];
    double _Val;
} _double_val;


typedef union
{   
    unsigned short _Sh[2];
    float _Val;
} _float_val;


typedef union
{   
    unsigned short _Sh[4];
    long double _Val;
} _ldouble_val;

typedef union
{   
    unsigned short _Word[4];
    float _Float;
    double _Double;
    long double _Long_double;
} _float_const;

extern const _float_const _Denorm_C,  _Inf_C,  _Nan_C,  _Snan_C, _Hugeval_C;
extern const _float_const _FDenorm_C, _FInf_C, _FNan_C, _FSnan_C;
extern const _float_const _LDenorm_C, _LInf_C, _LNan_C, _LSnan_C;

extern const _float_const _Eps_C,  _Rteps_C;
extern const _float_const _FEps_C, _FRteps_C;
extern const _float_const _LEps_C, _LRteps_C;

extern const double      _Zero_C,  _Xbig_C;
extern const float       _FZero_C, _FXbig_C;
extern const long double _LZero_C, _LXbig_C;







    
    
    

    
    

    
    
    
    
    

    
    
    
    
    
    














































































































































































#line 459 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"





      int       __cdecl abs(  int _X);
      long      __cdecl labs(  long _X);
      long long __cdecl llabs(  long long _X);

      double __cdecl acos(  double _X);
      double __cdecl asin(  double _X);
      double __cdecl atan(  double _X);
      double __cdecl atan2(  double _Y,   double _X);

      double __cdecl cos(  double _X);
      double __cdecl cosh(  double _X);
      double __cdecl exp(  double _X);
       double __cdecl fabs(  double _X);
      double __cdecl fmod(  double _X,   double _Y);
      double __cdecl log(  double _X);
      double __cdecl log10(  double _X);
      double __cdecl pow(  double _X,   double _Y);
      double __cdecl sin(  double _X);
      double __cdecl sinh(  double _X);
       double __cdecl sqrt(  double _X);
      double __cdecl tan(  double _X);
      double __cdecl tanh(  double _X);

      __declspec(dllimport) double    __cdecl acosh(  double _X);
      __declspec(dllimport) double    __cdecl asinh(  double _X);
      __declspec(dllimport) double    __cdecl atanh(  double _X);
      __declspec(dllimport)  double    __cdecl atof(  char const* _String);
      __declspec(dllimport)  double    __cdecl _atof_l(  char const* _String,   _locale_t _Locale);
      __declspec(dllimport) double    __cdecl _cabs(  struct _complex _Complex_value);
      __declspec(dllimport) double    __cdecl cbrt(  double _X);
      __declspec(dllimport) double    __cdecl ceil(  double _X);
      __declspec(dllimport) double    __cdecl _chgsign(  double _X);
      __declspec(dllimport) double    __cdecl copysign(  double _Number,   double _Sign);
      __declspec(dllimport) double    __cdecl _copysign(  double _Number,   double _Sign);
      __declspec(dllimport) double    __cdecl erf(  double _X);
      __declspec(dllimport) double    __cdecl erfc(  double _X);
      __declspec(dllimport) double    __cdecl exp2(  double _X);
      __declspec(dllimport) double    __cdecl expm1(  double _X);
      __declspec(dllimport) double    __cdecl fdim(  double _X,   double _Y);
      __declspec(dllimport) double    __cdecl floor(  double _X);
      __declspec(dllimport) double    __cdecl fma(  double _X,   double _Y,   double _Z);
      __declspec(dllimport) double    __cdecl fmax(  double _X,   double _Y);
      __declspec(dllimport) double    __cdecl fmin(  double _X,   double _Y);
      __declspec(dllimport) double    __cdecl frexp(  double _X,   int* _Y);
      __declspec(dllimport) double    __cdecl hypot(  double _X,   double _Y);
      __declspec(dllimport) double    __cdecl _hypot(  double _X,   double _Y);
      __declspec(dllimport) int       __cdecl ilogb(  double _X);
      __declspec(dllimport) double    __cdecl ldexp(  double _X,   int _Y);
      __declspec(dllimport) double    __cdecl lgamma(  double _X);
      __declspec(dllimport) long long __cdecl llrint(  double _X);
      __declspec(dllimport) long long __cdecl llround(  double _X);
      __declspec(dllimport) double    __cdecl log1p(  double _X);
      __declspec(dllimport) double    __cdecl log2(  double _X);
      __declspec(dllimport) double    __cdecl logb(  double _X);
      __declspec(dllimport) long      __cdecl lrint(  double _X);
      __declspec(dllimport) long      __cdecl lround(  double _X);

    int __cdecl _matherr(  struct _exception* _Except);

      __declspec(dllimport) double __cdecl modf(  double _X,   double* _Y);
      __declspec(dllimport) double __cdecl nan(  char const* _X);
      __declspec(dllimport) double __cdecl nearbyint(  double _X);
      __declspec(dllimport) double __cdecl nextafter(  double _X,   double _Y);
      __declspec(dllimport) double __cdecl nexttoward(  double _X,   long double _Y);
      __declspec(dllimport) double __cdecl remainder(  double _X,   double _Y);
      __declspec(dllimport) double __cdecl remquo(  double _X,   double _Y,   int* _Z);
      __declspec(dllimport) double __cdecl rint(  double _X);
      __declspec(dllimport) double __cdecl round(  double _X);
      __declspec(dllimport) double __cdecl scalbln(  double _X,   long _Y);
      __declspec(dllimport) double __cdecl scalbn(  double _X,   int _Y);
      __declspec(dllimport) double __cdecl tgamma(  double _X);
      __declspec(dllimport) double __cdecl trunc(  double _X);
      __declspec(dllimport) double __cdecl _j0(  double _X );
      __declspec(dllimport) double __cdecl _j1(  double _X );
      __declspec(dllimport) double __cdecl _jn(int _X,   double _Y);
      __declspec(dllimport) double __cdecl _y0(  double _X);
      __declspec(dllimport) double __cdecl _y1(  double _X);
      __declspec(dllimport) double __cdecl _yn(  int _X,   double _Y);

      __declspec(dllimport) float     __cdecl acoshf(  float _X);
      __declspec(dllimport) float     __cdecl asinhf(  float _X);
      __declspec(dllimport) float     __cdecl atanhf(  float _X);
      __declspec(dllimport) float     __cdecl cbrtf(  float _X);
      __declspec(dllimport) float     __cdecl _chgsignf(  float _X);
      __declspec(dllimport) float     __cdecl copysignf(  float _Number,   float _Sign);
      __declspec(dllimport) float     __cdecl _copysignf(  float _Number,   float _Sign);
      __declspec(dllimport) float     __cdecl erff(  float _X);
      __declspec(dllimport) float     __cdecl erfcf(  float _X);
      __declspec(dllimport) float     __cdecl expm1f(  float _X);
      __declspec(dllimport) float     __cdecl exp2f(  float _X);
      __declspec(dllimport) float     __cdecl fdimf(  float _X,   float _Y);
      __declspec(dllimport) float     __cdecl fmaf(  float _X,   float _Y,   float _Z);
      __declspec(dllimport) float     __cdecl fmaxf(  float _X,   float _Y);
      __declspec(dllimport) float     __cdecl fminf(  float _X,   float _Y);
      __declspec(dllimport) float     __cdecl _hypotf(  float _X,   float _Y);
      __declspec(dllimport) int       __cdecl ilogbf(  float _X);
      __declspec(dllimport) float     __cdecl lgammaf(  float _X);
      __declspec(dllimport) long long __cdecl llrintf(  float _X);
      __declspec(dllimport) long long __cdecl llroundf(  float _X);
      __declspec(dllimport) float     __cdecl log1pf(  float _X);
      __declspec(dllimport) float     __cdecl log2f(  float _X);
      __declspec(dllimport) float     __cdecl logbf(  float _X);
      __declspec(dllimport) long      __cdecl lrintf(  float _X);
      __declspec(dllimport) long      __cdecl lroundf(  float _X);
      __declspec(dllimport) float     __cdecl nanf(  char const* _X);
      __declspec(dllimport) float     __cdecl nearbyintf(  float _X);
      __declspec(dllimport) float     __cdecl nextafterf(  float _X,   float _Y);
      __declspec(dllimport) float     __cdecl nexttowardf(  float _X,   long double _Y);
      __declspec(dllimport) float     __cdecl remainderf(  float _X,   float _Y);
      __declspec(dllimport) float     __cdecl remquof(  float _X,   float _Y,   int* _Z);
      __declspec(dllimport) float     __cdecl rintf(  float _X);
      __declspec(dllimport) float     __cdecl roundf(  float _X);
      __declspec(dllimport) float     __cdecl scalblnf(  float _X,   long _Y);
      __declspec(dllimport) float     __cdecl scalbnf(  float _X,   int _Y);
      __declspec(dllimport) float     __cdecl tgammaf(  float _X);
      __declspec(dllimport) float     __cdecl truncf(  float _X);

    



#line 586 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

    

          __declspec(dllimport) float __cdecl _logbf(  float _X);
          __declspec(dllimport) float __cdecl _nextafterf(  float _X,   float _Y);
          __declspec(dllimport) int   __cdecl _finitef(  float _X);
          __declspec(dllimport) int   __cdecl _isnanf(  float _X);
          __declspec(dllimport) int   __cdecl _fpclassf(  float _X);

          __declspec(dllimport) int   __cdecl _set_FMA3_enable(  int _Flag);
          __declspec(dllimport) int   __cdecl _get_FMA3_enable(void);

    




#line 604 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"



    

          __declspec(dllimport) float __cdecl acosf(  float _X);
          __declspec(dllimport) float __cdecl asinf(  float _X);
          __declspec(dllimport) float __cdecl atan2f(  float _Y,   float _X);
          __declspec(dllimport) float __cdecl atanf(  float _X);
          __declspec(dllimport) float __cdecl ceilf(  float _X);
          __declspec(dllimport) float __cdecl cosf(  float _X);
          __declspec(dllimport) float __cdecl coshf(  float _X);
          __declspec(dllimport) float __cdecl expf(  float _X);

    









































#line 661 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

    



#line 667 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

          __inline float __cdecl fabsf(  float _X)
        {
            return (float)fabs(_X);
        }

    #line 674 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

    

          __declspec(dllimport) float __cdecl floorf(  float _X);
          __declspec(dllimport) float __cdecl fmodf(  float _X,   float _Y);

    











#line 693 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

      __inline float __cdecl frexpf(  float _X,   int *_Y)
    {
        return (float)frexp(_X, _Y);
    }

      __inline float __cdecl hypotf(  float _X,   float _Y)
    {
        return _hypotf(_X, _Y);
    }

      __inline float __cdecl ldexpf(  float _X,   int _Y)
    {
        return (float)ldexp(_X, _Y);
    }

    

          __declspec(dllimport) float  __cdecl log10f(  float _X);
          __declspec(dllimport) float  __cdecl logf(  float _X);
          __declspec(dllimport) float  __cdecl modff(  float _X,   float *_Y);
          __declspec(dllimport) float  __cdecl powf(  float _X,   float _Y);
          __declspec(dllimport) float  __cdecl sinf(  float _X);
          __declspec(dllimport) float  __cdecl sinhf(  float _X);
          __declspec(dllimport) float  __cdecl sqrtf(  float _X);
          __declspec(dllimport) float  __cdecl tanf(  float _X);
          __declspec(dllimport) float  __cdecl tanhf(  float _X);

    

















































#line 772 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

      __declspec(dllimport) long double __cdecl acoshl(  long double _X);

      __inline long double __cdecl acosl(  long double _X)
    {
        return acos((double)_X);
    }

      __declspec(dllimport) long double __cdecl asinhl(  long double _X);

      __inline long double __cdecl asinl(  long double _X)
    {
        return asin((double)_X);
    }

      __inline long double __cdecl atan2l(  long double _Y,   long double _X)
    {
        return atan2((double)_Y, (double)_X);
    }

      __declspec(dllimport) long double __cdecl atanhl(  long double _X);

      __inline long double __cdecl atanl(  long double _X)
    {
        return atan((double)_X);
    }

      __declspec(dllimport) long double __cdecl cbrtl(  long double _X);

      __inline long double __cdecl ceill(  long double _X)
    {
        return ceil((double)_X);
    }

      __inline long double __cdecl _chgsignl(  long double _X)
    {
        return _chgsign((double)_X);
    }

      __declspec(dllimport) long double __cdecl copysignl(  long double _Number,   long double _Sign);

      __inline long double __cdecl _copysignl(  long double _Number,   long double _Sign)
    {
        return _copysign((double)_Number, (double)_Sign);
    }

      __inline long double __cdecl coshl(  long double _X)
    {
        return cosh((double)_X);
    }

      __inline long double __cdecl cosl(  long double _X)
    {
        return cos((double)_X);
    }

      __declspec(dllimport) long double __cdecl erfl(  long double _X);
      __declspec(dllimport) long double __cdecl erfcl(  long double _X);

      __inline long double __cdecl expl(  long double _X)
    {
        return exp((double)_X);
    }

      __declspec(dllimport) long double __cdecl exp2l(  long double _X);
      __declspec(dllimport) long double __cdecl expm1l(  long double _X);

      __inline long double __cdecl fabsl(  long double _X)
    {
        return fabs((double)_X);
    }

      __declspec(dllimport) long double __cdecl fdiml(  long double _X,   long double _Y);

      __inline long double __cdecl floorl(  long double _X)
    {
        return floor((double)_X);
    }

      __declspec(dllimport) long double __cdecl fmal(  long double _X,   long double _Y,   long double _Z);
      __declspec(dllimport) long double __cdecl fmaxl(  long double _X,   long double _Y);
      __declspec(dllimport) long double __cdecl fminl(  long double _X,   long double _Y);

      __inline long double __cdecl fmodl(  long double _X,   long double _Y)
    {
        return fmod((double)_X, (double)_Y);
    }

      __inline long double __cdecl frexpl(  long double _X,   int *_Y)
    {
        return frexp((double)_X, _Y);
    }

      __declspec(dllimport) int __cdecl ilogbl(  long double _X);

      __inline long double __cdecl _hypotl(  long double _X,   long double _Y)
    {
        return _hypot((double)_X, (double)_Y);
    }

      __inline long double __cdecl hypotl(  long double _X,   long double _Y)
    {
        return _hypot((double)_X, (double)_Y);
    }

      __inline long double __cdecl ldexpl(  long double _X,   int _Y)
    {
        return ldexp((double)_X, _Y);
    }

      __declspec(dllimport) long double __cdecl lgammal(  long double _X);
      __declspec(dllimport) long long __cdecl llrintl(  long double _X);
      __declspec(dllimport) long long __cdecl llroundl(  long double _X);

      __inline long double __cdecl logl(  long double _X)
    {
        return log((double)_X);
    }

      __inline long double __cdecl log10l(  long double _X)
    {
        return log10((double)_X);
    }

      __declspec(dllimport) long double __cdecl log1pl(  long double _X);
      __declspec(dllimport) long double __cdecl log2l(  long double _X);
      __declspec(dllimport) long double __cdecl logbl(  long double _X);
      __declspec(dllimport) long __cdecl lrintl(  long double _X);
      __declspec(dllimport) long __cdecl lroundl(  long double _X);

      __inline long double __cdecl modfl(  long double _X,   long double* _Y)
    {
        double _F, _I;
        _F = modf((double)_X, &_I);
        *_Y = _I;
        return _F;
    }

      __declspec(dllimport) long double __cdecl nanl(  char const* _X);
      __declspec(dllimport) long double __cdecl nearbyintl(  long double _X);
      __declspec(dllimport) long double __cdecl nextafterl(  long double _X,   long double _Y);
      __declspec(dllimport) long double __cdecl nexttowardl(  long double _X,   long double _Y);

      __inline long double __cdecl powl(  long double _X,   long double _Y)
    {
        return pow((double)_X, (double)_Y);
    }

      __declspec(dllimport) long double __cdecl remainderl(  long double _X,   long double _Y);
      __declspec(dllimport) long double __cdecl remquol(  long double _X,   long double _Y,   int* _Z);
      __declspec(dllimport) long double __cdecl rintl(  long double _X);
      __declspec(dllimport) long double __cdecl roundl(  long double _X);
      __declspec(dllimport) long double __cdecl scalblnl(  long double _X,   long _Y);
      __declspec(dllimport) long double __cdecl scalbnl(  long double _X,   int _Y);

      __inline long double __cdecl sinhl(  long double _X)
    {
        return sinh((double)_X);
    }

      __inline long double __cdecl sinl(  long double _X)
    {
        return sin((double)_X);
    }

      __inline long double __cdecl sqrtl(  long double _X)
    {
        return sqrt((double)_X);
    }

      __inline long double __cdecl tanhl(  long double _X)
    {
        return tanh((double)_X);
    }

      __inline long double __cdecl tanl(  long double _X)
    {
        return tan((double)_X);
    }

      __declspec(dllimport) long double __cdecl tgammal(  long double _X);
      __declspec(dllimport) long double __cdecl truncl(  long double _X);

    
        
    #line 958 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

#line 960 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"



    
    
    
    
    
    

    

    
        
            extern double HUGE;
        

#line 978 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

           __declspec(dllimport) double __cdecl j0(  double _X);
           __declspec(dllimport) double __cdecl j1(  double _X);
           __declspec(dllimport) double __cdecl jn(  int _X,   double _Y);
           __declspec(dllimport) double __cdecl y0(  double _X);
           __declspec(dllimport) double __cdecl y1(  double _X);
           __declspec(dllimport) double __cdecl yn(  int _X,   double _Y);
    #line 986 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

#line 988 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 993 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_math.h"
#line 12 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\math.h"




#line 211 "C:\\Users\\freez\\Python310\\include\\pyport.h"












#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"







#pragma once




#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))








struct tm
{
    int tm_sec;   
    int tm_min;   
    int tm_hour;  
    int tm_mday;  
    int tm_mon;   
    int tm_year;  
    int tm_wday;  
    int tm_yday;  
    int tm_isdst; 
};







  
 
 
__declspec(dllimport) wchar_t* __cdecl _wasctime(
      struct tm const* _Tm
    );

 

__declspec(dllimport) errno_t __cdecl _wasctime_s(
        wchar_t*         _Buffer,
                                          size_t           _SizeInWords,
                                                       struct tm const* _Tm
    );


#line 66 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"

 

__declspec(dllimport) size_t __cdecl wcsftime(
       wchar_t*         _Buffer,
                               size_t           _SizeInWords,
                             wchar_t const*   _Format,
                               struct tm const* _Tm
    );

 

__declspec(dllimport) size_t __cdecl _wcsftime_l(
       wchar_t*         _Buffer,
                               size_t           _SizeInWords,
                             wchar_t const*   _Format,
                               struct tm const* _Tm,
                           _locale_t        _Locale
    );

 
  
__declspec(dllimport) wchar_t* __cdecl _wctime32(
      __time32_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _wctime32_s(
        wchar_t*          _Buffer,
                                      size_t            _SizeInWords,
                                                       __time32_t const* _Time
    );


#line 104 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"

 
 
  
__declspec(dllimport) wchar_t* __cdecl _wctime64(
      __time64_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _wctime64_s(
        wchar_t*          _Buffer,
                                      size_t            _SizeInWords,
                                                       __time64_t const* _Time);


#line 123 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"


__declspec(dllimport) errno_t __cdecl _wstrdate_s(
       wchar_t* _Buffer,
                                                                                size_t   _SizeInWords
    );


#line 134 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"

 __declspec(dllimport)  wchar_t* __cdecl _wstrdate( wchar_t *_Buffer);
#line 139 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"


__declspec(dllimport) errno_t __cdecl _wstrtime_s(
       wchar_t* _Buffer,
                                                                                size_t   _SizeInWords
    );


#line 150 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"

 __declspec(dllimport)  wchar_t* __cdecl _wstrtime( wchar_t *_Buffer);
#line 155 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"









    




















         
        static __inline wchar_t * __cdecl _wctime(
              time_t const* const _Time)
        {
            return _wctime64(_Time);
        }

        
        static __inline errno_t __cdecl _wctime_s(
                  wchar_t*      const _Buffer,
                                                             size_t        const _SizeInWords,
                                                             time_t const* const _Time
            )
        {
            return _wctime64_s(_Buffer, _SizeInWords, _Time);
        }

    #line 203 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"
#line 204 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wtime.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))








typedef long clock_t;

struct _timespec32
{
    __time32_t tv_sec;
    long       tv_nsec;
};

struct _timespec64
{
    __time64_t tv_sec;
    long       tv_nsec;
};


    struct timespec
    {
        time_t tv_sec;  
        long   tv_nsec; 
    };
#line 49 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"
















  
__declspec(dllimport) int* __cdecl __daylight(void);




  
__declspec(dllimport) long* __cdecl __dstbias(void);




  
__declspec(dllimport) long* __cdecl __timezone(void);




    
__declspec(dllimport) char** __cdecl __tzname(void);



  
__declspec(dllimport) errno_t __cdecl _get_daylight(
      int* _Daylight
    );

 
__declspec(dllimport) errno_t __cdecl _get_dstbias(
      long* _DaylightSavingsBias
    );

  
__declspec(dllimport) errno_t __cdecl _get_timezone(
      long* _TimeZone
    );

 
__declspec(dllimport) errno_t __cdecl _get_tzname(
                             size_t* _ReturnValue,
      char*   _Buffer,
                              size_t  _SizeInBytes,
                              int     _Index
    );








 
 
  
__declspec(dllimport) char* __cdecl asctime(
      struct tm const* _Tm
    );


     
    
    __declspec(dllimport) errno_t __cdecl asctime_s(
            char*            _Buffer,
                                            size_t           _SizeInBytes,
                                                         struct tm const* _Tm
        );
#line 134 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"


#line 140 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

 
__declspec(dllimport) clock_t __cdecl clock(void);

 
 
  
__declspec(dllimport) char* __cdecl _ctime32(
      __time32_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _ctime32_s(
        char*             _Buffer,
                                        size_t            _SizeInBytes,
                                                     __time32_t const* _Time
    );


#line 163 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

 
 
  
__declspec(dllimport) char* __cdecl _ctime64(
      __time64_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _ctime64_s(
        char*             _Buffer,
                                          size_t            _SizeInBytes,
                                                       __time64_t const* _Time
    );


#line 183 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

 
__declspec(dllimport) double __cdecl _difftime32(
      __time32_t _Time1,
      __time32_t _Time2
    );

 
__declspec(dllimport) double __cdecl _difftime64(
      __time64_t _Time1,
      __time64_t _Time2
    );

 
  
__declspec(dllimport) struct tm* __cdecl _gmtime32(
      __time32_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _gmtime32_s(
      struct tm*        _Tm,
       __time32_t const* _Time
    );

 
  
__declspec(dllimport) struct tm* __cdecl _gmtime64(
      __time64_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _gmtime64_s(
      struct tm*        _Tm,
       __time64_t const* _Time
    );

 
  
__declspec(dllimport) struct tm* __cdecl _localtime32(
      __time32_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _localtime32_s(
      struct tm*        _Tm,
       __time32_t const* _Time
    );

 
  
__declspec(dllimport) struct tm* __cdecl _localtime64(
      __time64_t const* _Time
    );


__declspec(dllimport) errno_t __cdecl _localtime64_s(
      struct tm*        _Tm,
       __time64_t const* _Time
    );

 
__declspec(dllimport) __time32_t __cdecl _mkgmtime32(
      struct tm* _Tm
    );

 
__declspec(dllimport) __time64_t __cdecl _mkgmtime64(
      struct tm* _Tm
    );


__declspec(dllimport) __time32_t __cdecl _mktime32(
      struct tm* _Tm
    );


__declspec(dllimport) __time64_t __cdecl _mktime64(
      struct tm* _Tm
    );

 

__declspec(dllimport) size_t __cdecl strftime(
       char*            _Buffer,
                               size_t           _SizeInBytes,
        char const*      _Format,
                               struct tm const* _Tm
    );

 

__declspec(dllimport) size_t __cdecl _strftime_l(
           char*            _Buffer,
                               size_t           _MaxSize,
        char const*      _Format,
                               struct tm const* _Tm,
                           _locale_t        _Locale
    );


__declspec(dllimport) errno_t __cdecl _strdate_s(
       char*  _Buffer,
                                                                              size_t _SizeInBytes
    );


#line 293 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

 __declspec(dllimport)  char* __cdecl _strdate( char *_Buffer);
#line 298 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"


__declspec(dllimport) errno_t __cdecl _strtime_s(
       char*  _Buffer,
                                                                              size_t _SizeInBytes
    );


#line 309 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

 __declspec(dllimport) char* __cdecl _strtime( char *_Buffer);
#line 314 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

__declspec(dllimport) __time32_t __cdecl _time32(
      __time32_t* _Time
    );

__declspec(dllimport) __time64_t __cdecl _time64(
      __time64_t* _Time
    );

 
 
__declspec(dllimport) int __cdecl _timespec32_get(
      struct _timespec32* _Ts,
       int                 _Base
    );

 
 
__declspec(dllimport) int __cdecl _timespec64_get(
      struct _timespec64* _Ts,
       int                 _Base
    );










    __declspec(dllimport) void __cdecl _tzset(void);

    
    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "GetLocalTime" " " "instead. See online help for details."))
    __declspec(dllimport) unsigned __cdecl _getsystime(
          struct tm* _Tm
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "SetLocalTime" " " "instead. See online help for details."))
    __declspec(dllimport) unsigned __cdecl _setsystime(
          struct tm* _Tm,
          unsigned   _Milliseconds
        );

#line 361 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"










    


































































































          
        static __inline char* __cdecl ctime(
              time_t const* const _Time
            )
        {
            return _ctime64(_Time);
        }

         
        static __inline double __cdecl difftime(
              time_t const _Time1,
              time_t const _Time2
            )
        {
            return _difftime64(_Time1, _Time2);
        }

          
        static __inline struct tm* __cdecl gmtime(
              time_t const* const _Time)
        {
            return _gmtime64(_Time);
        }

        
        static __inline struct tm* __cdecl localtime(
              time_t const* const _Time
            )
        {
            return _localtime64(_Time);
        }

         
        static __inline time_t __cdecl _mkgmtime(
              struct tm* const _Tm
            )
        {
            return _mkgmtime64(_Tm);
        }

        
        static __inline time_t __cdecl mktime(
              struct tm* const _Tm
            )
        {
            return _mktime64(_Tm);
        }

        static __inline time_t __cdecl time(
              time_t* const _Time
            )
        {
            return _time64(_Time);
        }

         
        static __inline int __cdecl timespec_get(
              struct timespec* const _Ts,
               int              const _Base
            )
        {
            return _timespec64_get((struct _timespec64*)_Ts, _Base);
        }

        
            
            static __inline errno_t __cdecl ctime_s(
                    char*         const _Buffer,
                                                    size_t        const _SizeInBytes,
                                                                 time_t const* const _Time
                )
            {
                return _ctime64_s(_Buffer, _SizeInBytes, _Time);
            }

            
            static __inline errno_t __cdecl gmtime_s(
                  struct tm*    const _Tm,
                   time_t const* const _Time
                )
            {
                return _gmtime64_s(_Tm, _Time);
            }

            
            static __inline errno_t __cdecl localtime_s(
                  struct tm*    const _Tm,
                   time_t const* const _Time
                )
            {
                return _localtime64_s(_Tm, _Time);
            }
        #line 563 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

    #line 565 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

#line 567 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"










    

    
         __declspec(dllimport) void __cdecl tzset(void);
    #line 582 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"

#line 584 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 591 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\time.h"
#line 224 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 225 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 226 "C:\\Users\\freez\\Python310\\include\\pyport.h"

















#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"







#pragma once


#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"







#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )



    

    typedef unsigned short _ino_t; 

    
        typedef _ino_t ino_t;
    #line 24 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"
#line 25 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"




    

    typedef unsigned int _dev_t; 

    
        typedef _dev_t dev_t;
    #line 36 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"
#line 37 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"




    

    typedef long _off_t; 

    
        typedef _off_t off_t;
    #line 48 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"
#line 49 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/types.h"


#pragma warning(pop) 
#line 12 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))






struct _stat32
{
    _dev_t         st_dev;
    _ino_t         st_ino;
    unsigned short st_mode;
    short          st_nlink;
    short          st_uid;
    short          st_gid;
    _dev_t         st_rdev;
    _off_t         st_size;
    __time32_t     st_atime;
    __time32_t     st_mtime;
    __time32_t     st_ctime;
};

struct _stat32i64
{
    _dev_t         st_dev;
    _ino_t         st_ino;
    unsigned short st_mode;
    short          st_nlink;
    short          st_uid;
    short          st_gid;
    _dev_t         st_rdev;
    __int64        st_size;
    __time32_t     st_atime;
    __time32_t     st_mtime;
    __time32_t     st_ctime;
};

struct _stat64i32
{
    _dev_t         st_dev;
    _ino_t         st_ino;
    unsigned short st_mode;
    short          st_nlink;
    short          st_uid;
    short          st_gid;
    _dev_t         st_rdev;
    _off_t         st_size;
    __time64_t     st_atime;
    __time64_t     st_mtime;
    __time64_t     st_ctime;
};

struct _stat64
{
    _dev_t         st_dev;
    _ino_t         st_ino;
    unsigned short st_mode;
    short          st_nlink;
    short          st_uid;
    short          st_gid;
    _dev_t         st_rdev;
    __int64        st_size;
    __time64_t     st_atime;
    __time64_t     st_mtime;
    __time64_t     st_ctime;
};




    struct stat
    {
        _dev_t         st_dev;
        _ino_t         st_ino;
        unsigned short st_mode;
        short          st_nlink;
        short          st_uid;
        short          st_gid;
        _dev_t         st_rdev;
        _off_t         st_size;
        time_t         st_atime;
        time_t         st_mtime;
        time_t         st_ctime;
    };
#line 102 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"


















    
    
    
    
    
    
    
#line 128 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"
















    
    
    
    
    
    
#line 151 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"



__declspec(dllimport) int __cdecl _fstat32(
       int             _FileHandle,
      struct _stat32* _Stat
    );

__declspec(dllimport) int __cdecl _fstat32i64(
       int                _FileHandle,
      struct _stat32i64* _Stat
    );

__declspec(dllimport) int __cdecl _fstat64i32(
       int                _FileHandle,
      struct _stat64i32* _Stat
    );

__declspec(dllimport) int __cdecl _fstat64(
       int             _FileHandle,
      struct _stat64* _Stat
    );

__declspec(dllimport) int __cdecl _stat32(
      char const*     _FileName,
       struct _stat32* _Stat
    );

__declspec(dllimport) int __cdecl _stat32i64(
      char const*        _FileName,
       struct _stat32i64* _Stat
    );

__declspec(dllimport) int __cdecl _stat64i32(
      char const*        _FileName,
       struct _stat64i32* _Stat
    );

__declspec(dllimport) int __cdecl _stat64(
      char const*     _FileName,
       struct _stat64* _Stat
    );

__declspec(dllimport) int __cdecl _wstat32(
      wchar_t const*  _FileName,
       struct _stat32* _Stat
    );

__declspec(dllimport) int __cdecl _wstat32i64(
      wchar_t const*     _FileName,
       struct _stat32i64* _Stat
    );

__declspec(dllimport) int __cdecl _wstat64i32(
      wchar_t const*     _FileName,
       struct _stat64i32* _Stat
    );

__declspec(dllimport) int __cdecl _wstat64(
      wchar_t const*  _FileName,
       struct _stat64* _Stat
    );




    















        static __inline int __cdecl fstat(int const _FileHandle, struct stat* const _Stat)
        {
            typedef char __static_assert_t[(sizeof(struct stat) == sizeof(struct _stat64i32)) != 0];
            return _fstat64i32(_FileHandle, (struct _stat64i32*)_Stat);
        }
        static __inline int __cdecl stat(char const* const _FileName, struct stat* const _Stat)
        {
            typedef char __static_assert_t[(sizeof(struct stat) == sizeof(struct _stat64i32)) != 0];
            return _stat64i32(_FileName, (struct _stat64i32*)_Stat);
        }

    #line 245 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"
#line 246 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\sys/stat.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 244 "C:\\Users\\freez\\Python310\\include\\pyport.h"


#line 247 "C:\\Users\\freez\\Python310\\include\\pyport.h"










#line 258 "C:\\Users\\freez\\Python310\\include\\pyport.h"



#line 262 "C:\\Users\\freez\\Python310\\include\\pyport.h"



#line 266 "C:\\Users\\freez\\Python310\\include\\pyport.h"



#line 270 "C:\\Users\\freez\\Python310\\include\\pyport.h"































#line 302 "C:\\Users\\freez\\Python310\\include\\pyport.h"



















#line 322 "C:\\Users\\freez\\Python310\\include\\pyport.h"












#line 335 "C:\\Users\\freez\\Python310\\include\\pyport.h"

#line 337 "C:\\Users\\freez\\Python310\\include\\pyport.h"
















































































































#line 450 "C:\\Users\\freez\\Python310\\include\\pyport.h"

























#line 476 "C:\\Users\\freez\\Python310\\include\\pyport.h"















#line 494 "C:\\Users\\freez\\Python310\\include\\pyport.h"






#line 501 "C:\\Users\\freez\\Python310\\include\\pyport.h"












#line 515 "C:\\Users\\freez\\Python310\\include\\pyport.h"




#line 520 "C:\\Users\\freez\\Python310\\include\\pyport.h"






#line 527 "C:\\Users\\freez\\Python310\\include\\pyport.h"




#line 533 "C:\\Users\\freez\\Python310\\include\\pyport.h"







#line 541 "C:\\Users\\freez\\Python310\\include\\pyport.h"


















#line 561 "C:\\Users\\freez\\Python310\\include\\pyport.h"

#line 563 "C:\\Users\\freez\\Python310\\include\\pyport.h"














#line 578 "C:\\Users\\freez\\Python310\\include\\pyport.h"
























#line 603 "C:\\Users\\freez\\Python310\\include\\pyport.h"











#line 615 "C:\\Users\\freez\\Python310\\include\\pyport.h"

















































#line 665 "C:\\Users\\freez\\Python310\\include\\pyport.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\exports.h"




    
    
    




















#line 29 "C:\\Users\\freez\\Python310\\include\\exports.h"

#line 31 "C:\\Users\\freez\\Python310\\include\\exports.h"
#line 667 "C:\\Users\\freez\\Python310\\include\\pyport.h"














#line 682 "C:\\Users\\freez\\Python310\\include\\pyport.h"
        
        
        
        
        


#line 690 "C:\\Users\\freez\\Python310\\include\\pyport.h"

        


#line 695 "C:\\Users\\freez\\Python310\\include\\pyport.h"

#line 697 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 698 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 699 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 700 "C:\\Users\\freez\\Python310\\include\\pyport.h"















































#line 748 "C:\\Users\\freez\\Python310\\include\\pyport.h"












#line 762 "C:\\Users\\freez\\Python310\\include\\pyport.h"






#line 769 "C:\\Users\\freez\\Python310\\include\\pyport.h"

#line 771 "C:\\Users\\freez\\Python310\\include\\pyport.h"










#line 782 "C:\\Users\\freez\\Python310\\include\\pyport.h"



#line 786 "C:\\Users\\freez\\Python310\\include\\pyport.h"















#line 802 "C:\\Users\\freez\\Python310\\include\\pyport.h"










































#line 845 "C:\\Users\\freez\\Python310\\include\\pyport.h"






#line 852 "C:\\Users\\freez\\Python310\\include\\pyport.h"






#line 859 "C:\\Users\\freez\\Python310\\include\\pyport.h"








#line 871 "C:\\Users\\freez\\Python310\\include\\pyport.h"



#line 875 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 876 "C:\\Users\\freez\\Python310\\include\\pyport.h"










#line 887 "C:\\Users\\freez\\Python310\\include\\pyport.h"


#line 890 "C:\\Users\\freez\\Python310\\include\\pyport.h"
#line 51 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pymacro.h"





























































#line 64 "C:\\Users\\freez\\Python310\\include\\pymacro.h"


#line 67 "C:\\Users\\freez\\Python310\\include\\pymacro.h"









#line 77 "C:\\Users\\freez\\Python310\\include\\pymacro.h"






















#line 100 "C:\\Users\\freez\\Python310\\include\\pymacro.h"

#line 102 "C:\\Users\\freez\\Python310\\include\\pymacro.h"













#line 116 "C:\\Users\\freez\\Python310\\include\\pymacro.h"





#line 122 "C:\\Users\\freez\\Python310\\include\\pymacro.h"

#line 124 "C:\\Users\\freez\\Python310\\include\\pymacro.h"

#line 126 "C:\\Users\\freez\\Python310\\include\\pymacro.h"




#line 131 "C:\\Users\\freez\\Python310\\include\\pymacro.h"

#line 133 "C:\\Users\\freez\\Python310\\include\\pymacro.h"
#line 52 "C:\\Users\\freez\\Python310\\include\\Python.h"













#line 66 "C:\\Users\\freez\\Python310\\include\\Python.h"



#line 70 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\pymath.h"












































#line 46 "C:\\Users\\freez\\Python310\\include\\pymath.h"


#line 49 "C:\\Users\\freez\\Python310\\include\\pymath.h"



#line 53 "C:\\Users\\freez\\Python310\\include\\pymath.h"



#line 57 "C:\\Users\\freez\\Python310\\include\\pymath.h"




#line 62 "C:\\Users\\freez\\Python310\\include\\pymath.h"















#line 78 "C:\\Users\\freez\\Python310\\include\\pymath.h"
#line 79 "C:\\Users\\freez\\Python310\\include\\pymath.h"
#line 80 "C:\\Users\\freez\\Python310\\include\\pymath.h"






#line 87 "C:\\Users\\freez\\Python310\\include\\pymath.h"
































































#line 152 "C:\\Users\\freez\\Python310\\include\\pymath.h"








    




















#line 182 "C:\\Users\\freez\\Python310\\include\\pymath.h"
#line 183 "C:\\Users\\freez\\Python310\\include\\pymath.h"





























#line 213 "C:\\Users\\freez\\Python310\\include\\pymath.h"



#line 217 "C:\\Users\\freez\\Python310\\include\\pymath.h"













#line 231 "C:\\Users\\freez\\Python310\\include\\pymath.h"
#line 72 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pymem.h"



















































__declspec(dllimport) void * PyMem_Malloc(size_t size);
__declspec(dllimport) void * PyMem_Calloc(size_t nelem, size_t elsize);
__declspec(dllimport) void * PyMem_Realloc(void *ptr, size_t new_size);
__declspec(dllimport) void PyMem_Free(void *ptr);








































#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pymem.h"




__declspec(dllimport) void * PyMem_RawMalloc(size_t size);
__declspec(dllimport) void * PyMem_RawCalloc(size_t nelem, size_t elsize);
__declspec(dllimport) void * PyMem_RawRealloc(void *ptr, size_t new_size);
__declspec(dllimport) void PyMem_RawFree(void *ptr);


__declspec(dllimport) const char* _PyMem_GetCurrentAllocatorName(void);


__declspec(dllimport) char * _PyMem_RawStrdup(const char *str);


__declspec(dllimport) char * _PyMem_Strdup(const char *str);


__declspec(dllimport) wchar_t* _PyMem_RawWcsdup(const wchar_t *str);


typedef enum {
    
    PYMEM_DOMAIN_RAW,

    
    PYMEM_DOMAIN_MEM,

    
    PYMEM_DOMAIN_OBJ
} PyMemAllocatorDomain;

typedef enum {
    PYMEM_ALLOCATOR_NOT_SET = 0,
    PYMEM_ALLOCATOR_DEFAULT = 1,
    PYMEM_ALLOCATOR_DEBUG = 2,
    PYMEM_ALLOCATOR_MALLOC = 3,
    PYMEM_ALLOCATOR_MALLOC_DEBUG = 4,

    PYMEM_ALLOCATOR_PYMALLOC = 5,
    PYMEM_ALLOCATOR_PYMALLOC_DEBUG = 6,
#line 44 "C:\\Users\\freez\\Python310\\include\\cpython/pymem.h"
} PyMemAllocatorName;


typedef struct {
    
    void *ctx;

    
    void* (*malloc) (void *ctx, size_t size);

    
    void* (*calloc) (void *ctx, size_t nelem, size_t elsize);

    
    void* (*realloc) (void *ctx, void *ptr, size_t new_size);

    
    void (*free) (void *ctx, void *ptr);
} PyMemAllocatorEx;


__declspec(dllimport) void PyMem_GetAllocator(PyMemAllocatorDomain domain,
                                    PyMemAllocatorEx *allocator);












__declspec(dllimport) void PyMem_SetAllocator(PyMemAllocatorDomain domain,
                                    PyMemAllocatorEx *allocator);

















__declspec(dllimport) void PyMem_SetupDebugHooks(void);
#line 97 "C:\\Users\\freez\\Python310\\include\\pymem.h"

#line 99 "C:\\Users\\freez\\Python310\\include\\pymem.h"





#line 105 "C:\\Users\\freez\\Python310\\include\\pymem.h"
#line 73 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\object.h"

























































#line 59 "C:\\Users\\freez\\Python310\\include\\object.h"



#line 63 "C:\\Users\\freez\\Python310\\include\\object.h"



typedef struct _typeobject PyTypeObject;












#line 80 "C:\\Users\\freez\\Python310\\include\\object.h"

























typedef struct _object {
    
    Py_ssize_t ob_refcnt;
    PyTypeObject *ob_type;
} PyObject;





typedef struct {
    PyObject ob_base;
    Py_ssize_t ob_size; 
} PyVarObject;







__declspec(dllimport) int Py_Is(PyObject *x, PyObject *y);



static inline Py_ssize_t _Py_REFCNT(const PyObject *ob) {
    return ob->ob_refcnt;
}










static inline int _Py_IS_TYPE(const PyObject *ob, const PyTypeObject *type) {
    
    
    return ob->ob_type == type;
}



static inline void _Py_SET_REFCNT(PyObject *ob, Py_ssize_t refcnt) {
    ob->ob_refcnt = refcnt;
}



static inline void _Py_SET_TYPE(PyObject *ob, PyTypeObject *type) {
    ob->ob_type = type;
}



static inline void _Py_SET_SIZE(PyVarObject *ob, Py_ssize_t size) {
    ob->ob_size = size;
}


















typedef PyObject * (*unaryfunc)(PyObject *);
typedef PyObject * (*binaryfunc)(PyObject *, PyObject *);
typedef PyObject * (*ternaryfunc)(PyObject *, PyObject *, PyObject *);
typedef int (*inquiry)(PyObject *);
typedef Py_ssize_t (*lenfunc)(PyObject *);
typedef PyObject *(*ssizeargfunc)(PyObject *, Py_ssize_t);
typedef PyObject *(*ssizessizeargfunc)(PyObject *, Py_ssize_t, Py_ssize_t);
typedef int(*ssizeobjargproc)(PyObject *, Py_ssize_t, PyObject *);
typedef int(*ssizessizeobjargproc)(PyObject *, Py_ssize_t, Py_ssize_t, PyObject *);
typedef int(*objobjargproc)(PyObject *, PyObject *, PyObject *);

typedef int (*objobjproc)(PyObject *, PyObject *);
typedef int (*visitproc)(PyObject *, void *);
typedef int (*traverseproc)(PyObject *, visitproc, void *);


typedef void (*freefunc)(void *);
typedef void (*destructor)(PyObject *);
typedef PyObject *(*getattrfunc)(PyObject *, char *);
typedef PyObject *(*getattrofunc)(PyObject *, PyObject *);
typedef int (*setattrfunc)(PyObject *, char *, PyObject *);
typedef int (*setattrofunc)(PyObject *, PyObject *, PyObject *);
typedef PyObject *(*reprfunc)(PyObject *);
typedef Py_hash_t (*hashfunc)(PyObject *);
typedef PyObject *(*richcmpfunc) (PyObject *, PyObject *, int);
typedef PyObject *(*getiterfunc) (PyObject *);
typedef PyObject *(*iternextfunc) (PyObject *);
typedef PyObject *(*descrgetfunc) (PyObject *, PyObject *, PyObject *);
typedef int (*descrsetfunc) (PyObject *, PyObject *, PyObject *);
typedef int (*initproc)(PyObject *, PyObject *, PyObject *);
typedef PyObject *(*newfunc)(PyTypeObject *, PyObject *, PyObject *);
typedef PyObject *(*allocfunc)(PyTypeObject *, Py_ssize_t);

typedef struct{
    int slot;    
    void *pfunc; 
} PyType_Slot;

typedef struct{
    const char* name;
    int basicsize;
    int itemsize;
    unsigned int flags;
    PyType_Slot *slots; 
} PyType_Spec;

__declspec(dllimport) PyObject* PyType_FromSpec(PyType_Spec*);

__declspec(dllimport) PyObject* PyType_FromSpecWithBases(PyType_Spec*, PyObject*);
#line 234 "C:\\Users\\freez\\Python310\\include\\object.h"

__declspec(dllimport) void* PyType_GetSlot(PyTypeObject*, int);
#line 237 "C:\\Users\\freez\\Python310\\include\\object.h"

__declspec(dllimport) PyObject* PyType_FromModuleAndSpec(PyObject *, PyType_Spec *, PyObject *);
__declspec(dllimport) PyObject * PyType_GetModule(struct _typeobject *);
__declspec(dllimport) void * PyType_GetModuleState(struct _typeobject *);
#line 242 "C:\\Users\\freez\\Python310\\include\\object.h"


__declspec(dllimport) int PyType_IsSubtype(PyTypeObject *, PyTypeObject *);

static inline int _PyObject_TypeCheck(PyObject *ob, PyTypeObject *type) {
    return _Py_IS_TYPE(((const PyObject*)(ob)), type) || PyType_IsSubtype((((PyObject*)(ob))->ob_type), type);
}


extern __declspec(dllimport) PyTypeObject PyType_Type; 
extern __declspec(dllimport) PyTypeObject PyBaseObject_Type; 
extern __declspec(dllimport) PyTypeObject PySuper_Type; 

__declspec(dllimport) unsigned long PyType_GetFlags(PyTypeObject*);

__declspec(dllimport) int PyType_Ready(PyTypeObject *);
__declspec(dllimport) PyObject * PyType_GenericAlloc(PyTypeObject *, Py_ssize_t);
__declspec(dllimport) PyObject * PyType_GenericNew(PyTypeObject *,
                                               PyObject *, PyObject *);
__declspec(dllimport) unsigned int PyType_ClearCache(void);
__declspec(dllimport) void PyType_Modified(PyTypeObject *);


__declspec(dllimport) PyObject * PyObject_Repr(PyObject *);
__declspec(dllimport) PyObject * PyObject_Str(PyObject *);
__declspec(dllimport) PyObject * PyObject_ASCII(PyObject *);
__declspec(dllimport) PyObject * PyObject_Bytes(PyObject *);
__declspec(dllimport) PyObject * PyObject_RichCompare(PyObject *, PyObject *, int);
__declspec(dllimport) int PyObject_RichCompareBool(PyObject *, PyObject *, int);
__declspec(dllimport) PyObject * PyObject_GetAttrString(PyObject *, const char *);
__declspec(dllimport) int PyObject_SetAttrString(PyObject *, const char *, PyObject *);
__declspec(dllimport) int PyObject_HasAttrString(PyObject *, const char *);
__declspec(dllimport) PyObject * PyObject_GetAttr(PyObject *, PyObject *);
__declspec(dllimport) int PyObject_SetAttr(PyObject *, PyObject *, PyObject *);
__declspec(dllimport) int PyObject_HasAttr(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyObject_SelfIter(PyObject *);
__declspec(dllimport) PyObject * PyObject_GenericGetAttr(PyObject *, PyObject *);
__declspec(dllimport) int PyObject_GenericSetAttr(PyObject *, PyObject *, PyObject *);

__declspec(dllimport) int PyObject_GenericSetDict(PyObject *, PyObject *, void *);
#line 283 "C:\\Users\\freez\\Python310\\include\\object.h"
__declspec(dllimport) Py_hash_t PyObject_Hash(PyObject *);
__declspec(dllimport) Py_hash_t PyObject_HashNotImplemented(PyObject *);
__declspec(dllimport) int PyObject_IsTrue(PyObject *);
__declspec(dllimport) int PyObject_Not(PyObject *);
__declspec(dllimport) int PyCallable_Check(PyObject *);
__declspec(dllimport) void PyObject_ClearWeakRefs(PyObject *);






__declspec(dllimport) PyObject * PyObject_Dir(PyObject *);



__declspec(dllimport) int Py_ReprEnter(PyObject *);
__declspec(dllimport) void Py_ReprLeave(PyObject *);





























#line 331 "C:\\Users\\freez\\Python310\\include\\object.h"



















#line 351 "C:\\Users\\freez\\Python310\\include\\object.h"















#line 367 "C:\\Users\\freez\\Python310\\include\\object.h"
















































































__declspec(dllimport) void _Py_Dealloc(PyObject *);





__declspec(dllimport) void Py_IncRef(PyObject *);
__declspec(dllimport) void Py_DecRef(PyObject *);



__declspec(dllimport) void _Py_IncRef(PyObject *);
__declspec(dllimport) void _Py_DecRef(PyObject *);

static inline void _Py_INCREF(PyObject *op)
{



#line 467 "C:\\Users\\freez\\Python310\\include\\object.h"
    
    



    op->ob_refcnt++;
#line 474 "C:\\Users\\freez\\Python310\\include\\object.h"
}


static inline void _Py_DECREF(


#line 481 "C:\\Users\\freez\\Python310\\include\\object.h"
    PyObject *op)
{



#line 487 "C:\\Users\\freez\\Python310\\include\\object.h"
    
    



    if (--op->ob_refcnt != 0) {





    }
    else {
        _Py_Dealloc(op);
    }
#line 503 "C:\\Users\\freez\\Python310\\include\\object.h"
}


#line 507 "C:\\Users\\freez\\Python310\\include\\object.h"

#line 509 "C:\\Users\\freez\\Python310\\include\\object.h"














































static inline void _Py_XINCREF(PyObject *op)
{
    if (op != ((void *)0)) {
        _Py_INCREF(((PyObject*)(op)));
    }
}



static inline void _Py_XDECREF(PyObject *op)
{
    if (op != ((void *)0)) {
        _Py_DECREF(((PyObject*)(op)));
    }
}





__declspec(dllimport) PyObject* Py_NewRef(PyObject *obj);


__declspec(dllimport) PyObject* Py_XNewRef(PyObject *obj);

static inline PyObject* _Py_NewRef(PyObject *obj)
{
    _Py_INCREF(((PyObject*)(obj)));
    return obj;
}

static inline PyObject* _Py_XNewRef(PyObject *obj)
{
    _Py_XINCREF(((PyObject*)(obj)));
    return obj;
}














extern __declspec(dllimport) PyObject _Py_NoneStruct; 



__declspec(dllimport) int Py_IsNone(PyObject *x);









extern __declspec(dllimport) PyObject _Py_NotImplementedStruct; 















typedef enum {
    PYGEN_RETURN = 0,
    PYGEN_ERROR = -1,
    PYGEN_NEXT = 1,
} PySendResult;
#line 641 "C:\\Users\\freez\\Python310\\include\\object.h"











































































#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/object.h"




__declspec(dllimport) void _Py_NewReference(PyObject *op);































typedef struct _Py_Identifier {
    const char* string;
    
    
    Py_ssize_t index;
} _Py_Identifier;






typedef struct bufferinfo {
    void *buf;
    PyObject *obj;        
    Py_ssize_t len;
    Py_ssize_t itemsize;  

    int readonly;
    int ndim;
    char *format;
    Py_ssize_t *shape;
    Py_ssize_t *strides;
    Py_ssize_t *suboffsets;
    void *internal;
} Py_buffer;

typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
typedef void (*releasebufferproc)(PyObject *, Py_buffer *);

typedef PyObject *(*vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                    size_t nargsf, PyObject *kwnames);



































typedef struct {
    



    binaryfunc nb_add;
    binaryfunc nb_subtract;
    binaryfunc nb_multiply;
    binaryfunc nb_remainder;
    binaryfunc nb_divmod;
    ternaryfunc nb_power;
    unaryfunc nb_negative;
    unaryfunc nb_positive;
    unaryfunc nb_absolute;
    inquiry nb_bool;
    unaryfunc nb_invert;
    binaryfunc nb_lshift;
    binaryfunc nb_rshift;
    binaryfunc nb_and;
    binaryfunc nb_xor;
    binaryfunc nb_or;
    unaryfunc nb_int;
    void *nb_reserved;  
    unaryfunc nb_float;

    binaryfunc nb_inplace_add;
    binaryfunc nb_inplace_subtract;
    binaryfunc nb_inplace_multiply;
    binaryfunc nb_inplace_remainder;
    ternaryfunc nb_inplace_power;
    binaryfunc nb_inplace_lshift;
    binaryfunc nb_inplace_rshift;
    binaryfunc nb_inplace_and;
    binaryfunc nb_inplace_xor;
    binaryfunc nb_inplace_or;

    binaryfunc nb_floor_divide;
    binaryfunc nb_true_divide;
    binaryfunc nb_inplace_floor_divide;
    binaryfunc nb_inplace_true_divide;

    unaryfunc nb_index;

    binaryfunc nb_matrix_multiply;
    binaryfunc nb_inplace_matrix_multiply;
} PyNumberMethods;

typedef struct {
    lenfunc sq_length;
    binaryfunc sq_concat;
    ssizeargfunc sq_repeat;
    ssizeargfunc sq_item;
    void *was_sq_slice;
    ssizeobjargproc sq_ass_item;
    void *was_sq_ass_slice;
    objobjproc sq_contains;

    binaryfunc sq_inplace_concat;
    ssizeargfunc sq_inplace_repeat;
} PySequenceMethods;

typedef struct {
    lenfunc mp_length;
    binaryfunc mp_subscript;
    objobjargproc mp_ass_subscript;
} PyMappingMethods;

typedef PySendResult (*sendfunc)(PyObject *iter, PyObject *value, PyObject **result);

typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
    sendfunc am_send;
} PyAsyncMethods;

typedef struct {
     getbufferproc bf_getbuffer;
     releasebufferproc bf_releasebuffer;
} PyBufferProcs;



typedef Py_ssize_t printfunc;



struct _typeobject {
    PyVarObject ob_base;
    const char *tp_name; 
    Py_ssize_t tp_basicsize, tp_itemsize; 

    

    destructor tp_dealloc;
    Py_ssize_t tp_vectorcall_offset;
    getattrfunc tp_getattr;
    setattrfunc tp_setattr;
    PyAsyncMethods *tp_as_async; 

    reprfunc tp_repr;

    

    PyNumberMethods *tp_as_number;
    PySequenceMethods *tp_as_sequence;
    PyMappingMethods *tp_as_mapping;

    

    hashfunc tp_hash;
    ternaryfunc tp_call;
    reprfunc tp_str;
    getattrofunc tp_getattro;
    setattrofunc tp_setattro;

    
    PyBufferProcs *tp_as_buffer;

    
    unsigned long tp_flags;

    const char *tp_doc; 

    
    
    traverseproc tp_traverse;

    
    inquiry tp_clear;

    
    
    richcmpfunc tp_richcompare;

    
    Py_ssize_t tp_weaklistoffset;

    
    getiterfunc tp_iter;
    iternextfunc tp_iternext;

    
    struct PyMethodDef *tp_methods;
    struct PyMemberDef *tp_members;
    struct PyGetSetDef *tp_getset;
    
    struct _typeobject *tp_base;
    PyObject *tp_dict;
    descrgetfunc tp_descr_get;
    descrsetfunc tp_descr_set;
    Py_ssize_t tp_dictoffset;
    initproc tp_init;
    allocfunc tp_alloc;
    newfunc tp_new;
    freefunc tp_free; 
    inquiry tp_is_gc; 
    PyObject *tp_bases;
    PyObject *tp_mro; 
    PyObject *tp_cache;
    PyObject *tp_subclasses;
    PyObject *tp_weaklist;
    destructor tp_del;

    
    unsigned int tp_version_tag;

    destructor tp_finalize;
    vectorcallfunc tp_vectorcall;
};


typedef struct _heaptypeobject {
    

    PyTypeObject ht_type;
    PyAsyncMethods as_async;
    PyNumberMethods as_number;
    PyMappingMethods as_mapping;
    PySequenceMethods as_sequence; 




    PyBufferProcs as_buffer;
    PyObject *ht_name, *ht_slots, *ht_qualname;
    struct _dictkeysobject *ht_cached_keys;
    PyObject *ht_module;
    
} PyHeapTypeObject;





__declspec(dllimport) const char * _PyType_Name(PyTypeObject *);
__declspec(dllimport) PyObject * _PyType_Lookup(PyTypeObject *, PyObject *);
__declspec(dllimport) PyObject * _PyType_LookupId(PyTypeObject *, _Py_Identifier *);
__declspec(dllimport) PyObject * _PyObject_LookupSpecial(PyObject *, _Py_Identifier *);
__declspec(dllimport) PyTypeObject * _PyType_CalculateMetaclass(PyTypeObject *, PyObject *);
__declspec(dllimport) PyObject * _PyType_GetDocFromInternalDoc(const char *, const char *);
__declspec(dllimport) PyObject * _PyType_GetTextSignatureFromInternalDoc(const char *, const char *);
struct PyModuleDef;
__declspec(dllimport) PyObject * _PyType_GetModuleByDef(PyTypeObject *, struct PyModuleDef *);

struct _Py_Identifier;
__declspec(dllimport) int PyObject_Print(PyObject *, FILE *, int);
__declspec(dllimport) void _Py_BreakPoint(void);
__declspec(dllimport) void _PyObject_Dump(PyObject *);
__declspec(dllimport) int _PyObject_IsFreed(PyObject *);

__declspec(dllimport) int _PyObject_IsAbstract(PyObject *);
__declspec(dllimport) PyObject * _PyObject_GetAttrId(PyObject *, struct _Py_Identifier *);
__declspec(dllimport) int _PyObject_SetAttrId(PyObject *, struct _Py_Identifier *, PyObject *);









__declspec(dllimport) int _PyObject_LookupAttr(PyObject *, PyObject *, PyObject **);
__declspec(dllimport) int _PyObject_LookupAttrId(PyObject *, struct _Py_Identifier *, PyObject **);

__declspec(dllimport) int _PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

__declspec(dllimport) PyObject ** _PyObject_GetDictPtr(PyObject *);
__declspec(dllimport) PyObject * _PyObject_NextNotImplemented(PyObject *);
__declspec(dllimport) void PyObject_CallFinalizer(PyObject *);
__declspec(dllimport) int PyObject_CallFinalizerFromDealloc(PyObject *);



__declspec(dllimport) PyObject *
_PyObject_GenericGetAttrWithDict(PyObject *, PyObject *, PyObject *, int);
__declspec(dllimport) int
_PyObject_GenericSetAttrWithDict(PyObject *, PyObject *,
                                 PyObject *, PyObject *);

__declspec(dllimport) PyObject * _PyObject_FunctionStr(PyObject *);



































extern __declspec(dllimport) PyTypeObject _PyNone_Type;
extern __declspec(dllimport) PyTypeObject _PyNotImplemented_Type;




extern __declspec(dllimport) int _Py_SwappedOp[];

__declspec(dllimport) void
_PyDebugAllocatorStats(FILE *out, const char *block_name, int num_blocks,
                       size_t sizeof_block);
__declspec(dllimport) void
_PyObject_DebugTypeStats(FILE *out);
















   









#line 421 "C:\\Users\\freez\\Python310\\include\\cpython/object.h"














__declspec(dllimport) void __declspec(noreturn) _PyObject_AssertFailed(
    PyObject *obj,
    const char *expr,
    const char *msg,
    const char *file,
    int line,
    const char *function);












__declspec(dllimport) int _PyObject_CheckConsistency(
    PyObject *op,
    int check_content);



















































__declspec(dllimport) void _PyTrash_deposit_object(PyObject*);
__declspec(dllimport) void _PyTrash_destroy_chain(void);



__declspec(dllimport) void _PyTrash_thread_deposit_object(PyObject*);
__declspec(dllimport) void _PyTrash_thread_destroy_chain(void);


struct _ts;


__declspec(dllimport) int _PyTrash_begin(struct _ts *tstate, PyObject *op);
__declspec(dllimport) void _PyTrash_end(struct _ts *tstate);

__declspec(dllimport) int _PyTrash_cond(PyObject *op, destructor dealloc);














        














#line 717 "C:\\Users\\freez\\Python310\\include\\object.h"

#line 719 "C:\\Users\\freez\\Python310\\include\\object.h"


static inline int
PyType_HasFeature(PyTypeObject *type, unsigned long feature)
{
    unsigned long flags;




    flags = type->tp_flags;
#line 731 "C:\\Users\\freez\\Python310\\include\\object.h"
    return ((flags & feature) != 0);
}



static inline int _PyType_Check(PyObject *op) {
    return PyType_HasFeature((((PyObject*)(op))->ob_type), (1UL << 31));
}


static inline int _PyType_CheckExact(PyObject *op) {
    return _Py_IS_TYPE(((const PyObject*)(op)), &PyType_Type);
}





#line 750 "C:\\Users\\freez\\Python310\\include\\object.h"
#line 75 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\objimpl.h"
































































































__declspec(dllimport) void * PyObject_Malloc(size_t size);

__declspec(dllimport) void * PyObject_Calloc(size_t nelem, size_t elsize);
#line 101 "C:\\Users\\freez\\Python310\\include\\objimpl.h"
__declspec(dllimport) void * PyObject_Realloc(void *ptr, size_t new_size);
__declspec(dllimport) void PyObject_Free(void *ptr);


















__declspec(dllimport) PyObject * PyObject_Init(PyObject *, PyTypeObject *);
__declspec(dllimport) PyVarObject * PyObject_InitVar(PyVarObject *,
                                           PyTypeObject *, Py_ssize_t);







__declspec(dllimport) PyObject * _PyObject_New(PyTypeObject *);
__declspec(dllimport) PyVarObject * _PyObject_NewVar(PyTypeObject *, Py_ssize_t);





















__declspec(dllimport) Py_ssize_t PyGC_Collect(void);

__declspec(dllimport) int PyGC_Enable(void);
__declspec(dllimport) int PyGC_Disable(void);
__declspec(dllimport) int PyGC_IsEnabled(void);




__declspec(dllimport) PyVarObject * _PyObject_GC_Resize(PyVarObject *, Py_ssize_t);





__declspec(dllimport) PyObject * _PyObject_GC_New(PyTypeObject *);
__declspec(dllimport) PyVarObject * _PyObject_GC_NewVar(PyTypeObject *, Py_ssize_t);




__declspec(dllimport) void PyObject_GC_Track(void *);




__declspec(dllimport) void PyObject_GC_UnTrack(void *);

__declspec(dllimport) void PyObject_GC_Del(void *);






__declspec(dllimport) int PyObject_GC_IsTracked(PyObject *);
__declspec(dllimport) int PyObject_GC_IsFinalized(PyObject *);

















#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/objimpl.h"


















#line 20 "C:\\Users\\freez\\Python310\\include\\cpython/objimpl.h"




































__declspec(dllimport) Py_ssize_t _Py_GetAllocatedBlocks(void);



__declspec(dllimport) int _PyObject_DebugMallocStats(FILE *out);
#line 62 "C:\\Users\\freez\\Python310\\include\\cpython/objimpl.h"


typedef struct {
    
    void *ctx;

    
    void* (*alloc) (void *ctx, size_t size);

    
    void (*free) (void *ctx, void *ptr, size_t size);
} PyObjectArenaAllocator;


__declspec(dllimport) void PyObject_GetArenaAllocator(PyObjectArenaAllocator *allocator);


__declspec(dllimport) void PyObject_SetArenaAllocator(PyObjectArenaAllocator *allocator);



__declspec(dllimport) int PyObject_IS_GC(PyObject *obj);





   

#line 92 "C:\\Users\\freez\\Python310\\include\\cpython/objimpl.h"

__declspec(dllimport) PyObject * _PyObject_GC_Malloc(size_t size);
__declspec(dllimport) PyObject * _PyObject_GC_Calloc(size_t size);





__declspec(dllimport) PyObject ** PyObject_GET_WEAKREFS_LISTPTR(PyObject *op);
#line 209 "C:\\Users\\freez\\Python310\\include\\objimpl.h"

#line 211 "C:\\Users\\freez\\Python310\\include\\objimpl.h"




#line 216 "C:\\Users\\freez\\Python310\\include\\objimpl.h"
#line 76 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\typeslots.h"





#line 7 "C:\\Users\\freez\\Python310\\include\\typeslots.h"


#line 10 "C:\\Users\\freez\\Python310\\include\\typeslots.h"
















































































#line 91 "C:\\Users\\freez\\Python310\\include\\typeslots.h"



#line 95 "C:\\Users\\freez\\Python310\\include\\typeslots.h"
#line 77 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pyhash.h"









__declspec(dllimport) Py_hash_t _Py_HashDouble(PyObject *, double);
__declspec(dllimport) Py_hash_t _Py_HashPointer(const void*);

__declspec(dllimport) Py_hash_t _Py_HashPointerRaw(const void*);
__declspec(dllimport) Py_hash_t _Py_HashBytes(const void*, Py_ssize_t);
#line 16 "C:\\Users\\freez\\Python310\\include\\pyhash.h"












#line 29 "C:\\Users\\freez\\Python310\\include\\pyhash.h"


























typedef union {
    
    unsigned char uc[24];
    
    struct {
        Py_hash_t prefix;
        Py_hash_t suffix;
    } fnv;
    
    struct {
        uint64_t k0;
        uint64_t k1;
    } siphash;
    
    struct {
        unsigned char padding[16];
        Py_hash_t suffix;
    } djbx33a;
    struct {
        unsigned char padding[16];
        Py_hash_t hashsalt;
    } expat;
} _Py_HashSecret_t;
extern __declspec(dllimport) _Py_HashSecret_t _Py_HashSecret;







typedef struct {
    Py_hash_t (*const hash)(const void *, Py_ssize_t);
    const char *name;
    const int hash_bits;
    const int seed_bits;
} PyHash_FuncDef;

__declspec(dllimport) PyHash_FuncDef* PyHash_GetFuncDef(void);
#line 95 "C:\\Users\\freez\\Python310\\include\\pyhash.h"

















#line 113 "C:\\Users\\freez\\Python310\\include\\pyhash.h"
























#line 138 "C:\\Users\\freez\\Python310\\include\\pyhash.h"
#line 139 "C:\\Users\\freez\\Python310\\include\\pyhash.h"





#line 145 "C:\\Users\\freez\\Python310\\include\\pyhash.h"
#line 78 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pydebug.h"







extern __declspec(dllimport) int Py_DebugFlag;
extern __declspec(dllimport) int Py_VerboseFlag;
extern __declspec(dllimport) int Py_QuietFlag;
extern __declspec(dllimport) int Py_InteractiveFlag;
extern __declspec(dllimport) int Py_InspectFlag;
extern __declspec(dllimport) int Py_OptimizeFlag;
extern __declspec(dllimport) int Py_NoSiteFlag;
extern __declspec(dllimport) int Py_BytesWarningFlag;
extern __declspec(dllimport) int Py_FrozenFlag;
extern __declspec(dllimport) int Py_IgnoreEnvironmentFlag;
extern __declspec(dllimport) int Py_DontWriteBytecodeFlag;
extern __declspec(dllimport) int Py_NoUserSiteDirectory;
extern __declspec(dllimport) int Py_UnbufferedStdioFlag;
extern __declspec(dllimport) int Py_HashRandomizationFlag;
extern __declspec(dllimport) int Py_IsolatedFlag;


extern __declspec(dllimport) int Py_LegacyWindowsFSEncodingFlag;
extern __declspec(dllimport) int Py_LegacyWindowsStdioFlag;
#line 28 "C:\\Users\\freez\\Python310\\include\\cpython/pydebug.h"









#line 38 "C:\\Users\\freez\\Python310\\include\\cpython/pydebug.h"
#line 39 "C:\\Users\\freez\\Python310\\include\\cpython/pydebug.h"
#line 80 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\bytearrayobject.h"








#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.31.31103\\include\\stdarg.h"







#pragma once




#pragma warning(push)
#pragma warning(disable:   4514 4820 )

__pragma(pack(push, 8))










__pragma(pack(pop))

#pragma warning(pop) 
#line 10 "C:\\Users\\freez\\Python310\\include\\bytearrayobject.h"












extern __declspec(dllimport) PyTypeObject PyByteArray_Type;
extern __declspec(dllimport) PyTypeObject PyByteArrayIter_Type;






__declspec(dllimport) PyObject * PyByteArray_FromObject(PyObject *);
__declspec(dllimport) PyObject * PyByteArray_Concat(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyByteArray_FromStringAndSize(const char *, Py_ssize_t);
__declspec(dllimport) Py_ssize_t PyByteArray_Size(PyObject *);
__declspec(dllimport) char * PyByteArray_AsString(PyObject *);
__declspec(dllimport) int PyByteArray_Resize(PyObject *, Py_ssize_t);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/bytearrayobject.h"





typedef struct {
    PyVarObject ob_base;
    Py_ssize_t ob_alloc;   
    char *ob_bytes;        
    char *ob_start;        
    Py_ssize_t ob_exports; 
} PyByteArrayObject;







extern __declspec(dllimport) char _PyByteArray_empty_string[];
#line 40 "C:\\Users\\freez\\Python310\\include\\bytearrayobject.h"

#line 42 "C:\\Users\\freez\\Python310\\include\\bytearrayobject.h"




#line 47 "C:\\Users\\freez\\Python310\\include\\bytearrayobject.h"
#line 82 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\bytesobject.h"


























extern __declspec(dllimport) PyTypeObject PyBytes_Type;
extern __declspec(dllimport) PyTypeObject PyBytesIter_Type;





__declspec(dllimport) PyObject * PyBytes_FromStringAndSize(const char *, Py_ssize_t);
__declspec(dllimport) PyObject * PyBytes_FromString(const char *);
__declspec(dllimport) PyObject * PyBytes_FromObject(PyObject *);
__declspec(dllimport) PyObject * PyBytes_FromFormatV(const char*, va_list)
                                ;
__declspec(dllimport) PyObject * PyBytes_FromFormat(const char*, ...)
                                ;
__declspec(dllimport) Py_ssize_t PyBytes_Size(PyObject *);
__declspec(dllimport) char * PyBytes_AsString(PyObject *);
__declspec(dllimport) PyObject * PyBytes_Repr(PyObject *, int);
__declspec(dllimport) void PyBytes_Concat(PyObject **, PyObject *);
__declspec(dllimport) void PyBytes_ConcatAndDel(PyObject **, PyObject *);
__declspec(dllimport) PyObject * PyBytes_DecodeEscape(const char *, Py_ssize_t,
                                            const char *, Py_ssize_t,
                                            const char *);





__declspec(dllimport) int PyBytes_AsStringAndSize(
    PyObject *obj,      
    char **s,           
    Py_ssize_t *len     
    );



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/bytesobject.h"




typedef struct {
    PyVarObject ob_base;
    Py_hash_t ob_shash;
    char ob_sval[1];

    




} PyBytesObject;

__declspec(dllimport) int _PyBytes_Resize(PyObject **, Py_ssize_t);
__declspec(dllimport) PyObject* _PyBytes_FormatEx(
    const char *format,
    Py_ssize_t format_len,
    PyObject *args,
    int use_bytearray);
__declspec(dllimport) PyObject* _PyBytes_FromHex(
    PyObject *string,
    int use_bytearray);


__declspec(dllimport) PyObject * _PyBytes_DecodeEscape(const char *, Py_ssize_t,
                                             const char *, const char **);








__declspec(dllimport) PyObject * _PyBytes_Join(PyObject *sep, PyObject *x);





typedef struct {
    
    PyObject *buffer;

    
    Py_ssize_t allocated;

    

    Py_ssize_t min_size;

    
    int use_bytearray;

    

    int overallocate;

    
    int use_small_buffer;
    char small_buffer[512];
} _PyBytesWriter;





__declspec(dllimport) void _PyBytesWriter_Init(_PyBytesWriter *writer);




__declspec(dllimport) PyObject * _PyBytesWriter_Finish(_PyBytesWriter *writer,
    void *str);


__declspec(dllimport) void _PyBytesWriter_Dealloc(_PyBytesWriter *writer);




__declspec(dllimport) void* _PyBytesWriter_Alloc(_PyBytesWriter *writer,
    Py_ssize_t size);







__declspec(dllimport) void* _PyBytesWriter_Prepare(_PyBytesWriter *writer,
    void *str,
    Py_ssize_t size);












__declspec(dllimport) void* _PyBytesWriter_Resize(_PyBytesWriter *writer,
    void *str,
    Py_ssize_t size);



__declspec(dllimport) void* _PyBytesWriter_WriteBytes(_PyBytesWriter *writer,
    void *str,
    const void *bytes,
    Py_ssize_t size);
#line 63 "C:\\Users\\freez\\Python310\\include\\bytesobject.h"

#line 65 "C:\\Users\\freez\\Python310\\include\\bytesobject.h"




#line 70 "C:\\Users\\freez\\Python310\\include\\bytesobject.h"
#line 83 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

























































#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"







#pragma once




#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))











    

#line 32 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"
        
    #line 34 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"

    __declspec(dllimport) const unsigned short* __cdecl __pctype_func(void);
    __declspec(dllimport) const wctype_t*       __cdecl __pwctype_func(void);

    



        
        
    #line 45 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"
#line 46 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"





















  __declspec(dllimport) int __cdecl iswalnum  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswalpha  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswascii  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswblank  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswcntrl  (  wint_t _C);


  __declspec(dllimport) int __cdecl iswdigit  (  wint_t _C);

  __declspec(dllimport) int __cdecl iswgraph  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswlower  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswprint  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswpunct  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswspace  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswupper  (  wint_t _C);
  __declspec(dllimport) int __cdecl iswxdigit (  wint_t _C);
  __declspec(dllimport) int __cdecl __iswcsymf(  wint_t _C);
  __declspec(dllimport) int __cdecl __iswcsym (  wint_t _C);

  __declspec(dllimport) int __cdecl _iswalnum_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswalpha_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswblank_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswcntrl_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswdigit_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswgraph_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswlower_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswprint_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswpunct_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswspace_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswupper_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswxdigit_l(  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswcsymf_l (  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl _iswcsym_l  (  wint_t _C,   _locale_t _Locale);


  __declspec(dllimport) wint_t __cdecl towupper(  wint_t _C);
  __declspec(dllimport) wint_t __cdecl towlower(  wint_t _C);
  __declspec(dllimport) int    __cdecl iswctype(  wint_t _C,   wctype_t _Type);

  __declspec(dllimport) wint_t __cdecl _towupper_l(  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) wint_t __cdecl _towlower_l(  wint_t _C,   _locale_t _Locale);
  __declspec(dllimport) int    __cdecl _iswctype_l(  wint_t _C,   wctype_t _Type,   _locale_t _Locale);



      __declspec(dllimport) int __cdecl isleadbyte(  int _C);
      __declspec(dllimport) int __cdecl _isleadbyte_l(  int _C,   _locale_t _Locale);

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "iswctype" " " "instead. See online help for details.")) __declspec(dllimport) int __cdecl is_wctype(  wint_t _C,   wctype_t _Type);
#line 117 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"









    

        
        
        
        
        
        
        
        
        
        
        
        
        

        
        
        
        
        
        
        
        
        
        
        
        

        
            
        #line 158 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"

    #line 160 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"







































#line 200 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wctype.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 14 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"

#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))









  __declspec(dllimport) int __cdecl _isctype(  int _C,   int _Type);
  __declspec(dllimport) int __cdecl _isctype_l(  int _C,   int _Type,   _locale_t _Locale);
   __declspec(dllimport) int __cdecl isalpha(  int _C);
  __declspec(dllimport) int __cdecl _isalpha_l(  int _C,   _locale_t _Locale);
   __declspec(dllimport) int __cdecl isupper(  int _C);
  __declspec(dllimport) int __cdecl _isupper_l(  int _C,   _locale_t _Locale);
   __declspec(dllimport) int __cdecl islower(  int _C);
  __declspec(dllimport) int __cdecl _islower_l(  int _C,   _locale_t _Locale);


   __declspec(dllimport) int __cdecl isdigit(  int _C);

  __declspec(dllimport) int __cdecl _isdigit_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl isxdigit(  int _C);
  __declspec(dllimport) int __cdecl _isxdigit_l(  int _C,   _locale_t _Locale);


   __declspec(dllimport) int __cdecl isspace(  int _C);

  __declspec(dllimport) int __cdecl _isspace_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl ispunct(  int _C);
  __declspec(dllimport) int __cdecl _ispunct_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl isblank(  int _C);
  __declspec(dllimport) int __cdecl _isblank_l(  int _C,   _locale_t _Locale);
   __declspec(dllimport) int __cdecl isalnum(  int _C);
  __declspec(dllimport) int __cdecl _isalnum_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl isprint(  int _C);
  __declspec(dllimport) int __cdecl _isprint_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl isgraph(  int _C);
  __declspec(dllimport) int __cdecl _isgraph_l(  int _C,   _locale_t _Locale);
  __declspec(dllimport) int __cdecl iscntrl(  int _C);
  __declspec(dllimport) int __cdecl _iscntrl_l(  int _C,   _locale_t _Locale);


   __declspec(dllimport) int __cdecl toupper(  int _C);


   __declspec(dllimport) int __cdecl tolower(  int _C);

   __declspec(dllimport) int __cdecl _tolower(  int _C);
  __declspec(dllimport) int __cdecl _tolower_l(  int _C,   _locale_t _Locale);
   __declspec(dllimport) int __cdecl _toupper(  int _C);
  __declspec(dllimport) int __cdecl _toupper_l(  int _C,   _locale_t _Locale);

  __declspec(dllimport) int __cdecl __isascii(  int _C);
  __declspec(dllimport) int __cdecl __toascii(  int _C);
  __declspec(dllimport) int __cdecl __iscsymf(  int _C);
  __declspec(dllimport) int __cdecl __iscsym(  int _C);








__inline int __cdecl __acrt_locale_get_ctype_array_value(
      unsigned short const * const _Locale_pctype_array,
              int                    const _Char_value,
                             int                    const _Mask
    )
{
    
    
    
    
    if (_Char_value >= -1 && _Char_value <= 255)
    {
        return _Locale_pctype_array[_Char_value] & _Mask;
    }

    return 0;
}



    
    
    




















    
    
    




        
    #line 137 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"



    
    

    







        __forceinline int __cdecl __ascii_tolower(int const _C)
        {
            if (_C >= 'A' && _C <= 'Z')
            {
                return _C - ('A' - 'a');
            }
            return _C;
        }

        __forceinline int __cdecl __ascii_toupper(int const _C)
        {
            if (_C >= 'a' && _C <= 'z')
            {
                return _C - ('a' - 'A');
            }
            return _C;
        }

        __forceinline int __cdecl __ascii_iswalpha(int const _C)
        {
            return (_C >= 'A' && _C <= 'Z') || (_C >= 'a' && _C <= 'z');
        }

        __forceinline int __cdecl __ascii_iswdigit(int const _C)
        {
            return _C >= '0' && _C <= '9';
        }

        __forceinline int __cdecl __ascii_towlower(int const _C)
        {
            return __ascii_tolower(_C);
        }

        __forceinline int __cdecl __ascii_towupper(int const _C)
        {
            return __ascii_toupper(_C);
        }
    #line 189 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"



    












#line 206 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"

    __inline __crt_locale_data_public* __cdecl __acrt_get_locale_data_prefix(void const volatile* const _LocalePointers)
    {
        _locale_t const _TypedLocalePointers = (_locale_t)_LocalePointers;
        return (__crt_locale_data_public*)_TypedLocalePointers->locinfo;
    }

    



    __inline int __cdecl _chvalidchk_l(
              int       const _C,
              int       const _Mask,
          _locale_t const _Locale
        )
    {
        


        if (_Locale)
        {
            return __acrt_locale_get_ctype_array_value(__acrt_get_locale_data_prefix(_Locale)->_locale_pctype, _C, _Mask);
        }

        return (__acrt_locale_get_ctype_array_value(__pctype_func(), (_C), (_Mask)));
        #line 233 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"
    }

    
    

    __inline int __cdecl _ischartype_l(
              int       const _C,
              int       const _Mask,
          _locale_t const _Locale
        )
    {
        if (_Locale) {
            if (_C >= -1 && _C <= 255)
            {
                return __acrt_get_locale_data_prefix(_Locale)->_locale_pctype[_C] & _Mask;
            }

            if (__acrt_get_locale_data_prefix(_Locale)->_locale_mb_cur_max > 1)
            {
                return _isctype_l(_C, _Mask, _Locale);
            }

            return 0; 
        }

        return _chvalidchk_l(_C, _Mask, 0);
    }

    
    
    
    
    
    
    
    
    
    
    
    

    
    

    
    


    
    
    
    
    

    
    
    
    

#line 293 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"



    
    
    
    
#line 301 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"



#line 305 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"
__pragma(pack(pop))

#pragma warning(pop) 
#line 309 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\ctype.h"
#line 59 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"




















#line 80 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

















#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"









#pragma once





#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"








#pragma once




#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))







    
     
    __declspec(dllimport) errno_t __cdecl _cgetws_s(
          wchar_t* _Buffer,
                                               size_t   _BufferCount,
                                              size_t*  _SizeRead
        );

    
#line 40 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __declspec(dllimport) int __cdecl _cputws(
          wchar_t const* _Buffer
        );

          __declspec(dllimport) wint_t __cdecl _getwch  (void);
          __declspec(dllimport) wint_t __cdecl _getwche (void);
     __declspec(dllimport) wint_t __cdecl _putwch  (  wchar_t _Character);
     __declspec(dllimport) wint_t __cdecl _ungetwch(  wint_t  _Character);

          __declspec(dllimport) wint_t __cdecl _getwch_nolock  (void);
          __declspec(dllimport) wint_t __cdecl _getwche_nolock (void);
     __declspec(dllimport) wint_t __cdecl _putwch_nolock  (  wchar_t _Character);
     __declspec(dllimport) wint_t __cdecl _ungetwch_nolock(  wint_t  _Character);



    
    
    
    
    
    
    __declspec(dllimport) int __cdecl __conio_common_vcwprintf(
                                             unsigned __int64 _Options,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __declspec(dllimport) int __cdecl __conio_common_vcwprintf_s(
                                             unsigned __int64 _Options,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __declspec(dllimport) int __cdecl __conio_common_vcwprintf_p(
                                             unsigned __int64 _Options,
            wchar_t const*   _Format,
                                         _locale_t        _Locale,
                                                va_list          _ArgList
        );

    
    __inline int __cdecl _vcwprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )


#line 96 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return __conio_common_vcwprintf((*__local_stdio_printf_options()), _Format, _Locale, _ArgList);
    }
#line 100 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwprintf(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )


#line 109 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return _vcwprintf_l(_Format, ((void *)0), _ArgList);
    }
#line 113 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwprintf_s_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )


#line 123 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return __conio_common_vcwprintf_s((*__local_stdio_printf_options()), _Format, _Locale, _ArgList);
    }
#line 127 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwprintf_s(
            wchar_t const* const _Format,
                                      va_list              _ArgList
        )


#line 136 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return _vcwprintf_s_l(_Format, ((void *)0), _ArgList);
    }
#line 140 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
                                                va_list              _ArgList
        )


#line 150 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return __conio_common_vcwprintf_p((*__local_stdio_printf_options()), _Format, _Locale, _ArgList);
    }
#line 154 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwprintf_p(
            const wchar_t* const _Format,
                                      va_list              _ArgList
        )


#line 163 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return _vcwprintf_p_l(_Format, ((void *)0), _ArgList);
    }
#line 167 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)


#line 176 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vcwprintf_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 185 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf(
            wchar_t const* const _Format,
        ...)


#line 193 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vcwprintf_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 202 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf_s_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)


#line 211 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vcwprintf_s_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 220 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf_s(
            wchar_t const* const _Format,
        ...)


#line 228 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vcwprintf_s_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 237 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf_p_l(
            wchar_t const* const _Format,
                                         _locale_t      const _Locale,
        ...)


#line 246 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vcwprintf_p_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 255 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwprintf_p(
            wchar_t const* const _Format,
        ...)


#line 263 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vcwprintf_p_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 272 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"



    
    
    
    
    
    
    __declspec(dllimport) int __cdecl __conio_common_vcwscanf(
                                            unsigned __int64 _Options,
            wchar_t const*   _Format,
                                        _locale_t        _Locale,
                                               va_list          _ArgList
        );

     
    __inline int __cdecl _vcwscanf_l(
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
                                               va_list              _ArgList
        )


#line 297 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return __conio_common_vcwscanf(
            (*__local_stdio_scanf_options ()),
            _Format, _Locale, _ArgList);
    }
#line 303 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

     
    __inline int __cdecl _vcwscanf(
            wchar_t const* const _Format,
                                               va_list              _ArgList
        )


#line 312 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return _vcwscanf_l(_Format, ((void *)0), _ArgList);
    }
#line 316 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwscanf_s_l(
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
                                               va_list              _ArgList
        )


#line 326 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return __conio_common_vcwscanf(
            (*__local_stdio_scanf_options ()) | (1ULL << 0),
            _Format, _Locale, _ArgList);
    }
#line 332 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _vcwscanf_s(
            wchar_t const* const _Format,
                                               va_list              _ArgList
        )


#line 341 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        return _vcwscanf_s_l(_Format, ((void *)0), _ArgList);
    }
#line 345 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

     
    __inline int __cdecl _cwscanf_l(
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
        ...)


#line 354 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));

        _Result = _vcwscanf_l(_Format, _Locale, _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 365 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

     
    __inline int __cdecl _cwscanf(
            wchar_t const* const _Format,
        ...)


#line 373 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));

        _Result = _vcwscanf_l(_Format, ((void *)0), _ArgList);

        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 384 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwscanf_s_l(
            wchar_t const* const _Format,
                                        _locale_t      const _Locale,
        ...)


#line 393 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Locale)));
        _Result = _vcwscanf_s_l(_Format, _Locale, _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 402 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

    
    __inline int __cdecl _cwscanf_s(
            wchar_t const* const _Format,
        ...)


#line 410 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"
    {
        int _Result;
        va_list _ArgList;
        ((void)(__va_start(&_ArgList, _Format)));
        _Result = _vcwscanf_s_l(_Format, ((void *)0), _ArgList);
        ((void)(_ArgList = (va_list)0));
        return _Result;
    }
#line 419 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

#line 421 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wconio.h"

__pragma(pack(pop))

#pragma warning(pop) 
#line 17 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wdirect.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))






 
   
__declspec(dllimport) __declspec(allocator) wchar_t* __cdecl _wgetcwd(
      wchar_t* _DstBuf,
                                  int      _SizeInWords
    );

 
   
__declspec(dllimport) __declspec(allocator) wchar_t* __cdecl _wgetdcwd(
                                  int      _Drive,
      wchar_t* _DstBuf,
                                  int      _SizeInWords
    );






 
__declspec(dllimport) int __cdecl _wchdir(
      wchar_t const* _Path
    );

 
__declspec(dllimport) int __cdecl _wmkdir(
      wchar_t const* _Path
    );

 
__declspec(dllimport) int __cdecl _wrmdir(
      wchar_t const* _Path
    );



__pragma(pack(pop))

#pragma warning(pop) 
#line 19 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

#line 1 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wprocess.h"








#pragma once



#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))




    

        __declspec(dllimport) intptr_t __cdecl _wexecl(
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wexecle(
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wexeclp(
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wexeclpe(
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wexecv(
              wchar_t const*        _FileName,
              wchar_t const* const* _ArgList
            );

        __declspec(dllimport) intptr_t __cdecl _wexecve(
                  wchar_t const*        _FileName,
                  wchar_t const* const* _ArgList,
              wchar_t const* const* _Env
            );

        __declspec(dllimport) intptr_t __cdecl _wexecvp(
              wchar_t const*        _FileName,
              wchar_t const* const* _ArgList
            );

        __declspec(dllimport) intptr_t __cdecl _wexecvpe(
                  wchar_t const*        _FileName,
                  wchar_t const* const* _ArgList,
              wchar_t const* const* _Env
            );

        __declspec(dllimport) intptr_t __cdecl _wspawnl(
                int            _Mode,
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wspawnle(
                int            _Mode,
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wspawnlp(
                int            _Mode,
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wspawnlpe(
                int            _Mode,
              wchar_t const* _FileName,
              wchar_t const* _ArgList,
            ...);

        __declspec(dllimport) intptr_t __cdecl _wspawnv(
                int                   _Mode,
              wchar_t const*        _FileName,
              wchar_t const* const* _ArgList
            );

        __declspec(dllimport) intptr_t __cdecl _wspawnve(
                    int                   _Mode,
                  wchar_t const*        _FileName,
                  wchar_t const* const* _ArgList,
              wchar_t const* const* _Env
            );

        __declspec(dllimport) intptr_t __cdecl _wspawnvp(
                int                   _Mode,
              wchar_t const*        _FileName,
              wchar_t const* const* _ArgList
            );

        __declspec(dllimport) intptr_t __cdecl _wspawnvpe(
                    int                   _Mode,
                  wchar_t const*        _FileName,
                  wchar_t const* const* _ArgList,
              wchar_t const* const* _Env
            );

        __declspec(dllimport) int __cdecl _wsystem(
              wchar_t const* _Command
            );

    #line 121 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wprocess.h"
#line 122 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wprocess.h"



__pragma(pack(pop))

#pragma warning(pop) 
#line 21 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"








#pragma warning(push)
#pragma warning(disable: 4324  4514 4574 4710 4793 4820 4995 4996 28719 28726 28727 )


__pragma(pack(push, 8))








typedef wchar_t _Wint_t;





        
    __declspec(dllimport) wchar_t* __cdecl _wsetlocale(
                int            _Category,
          wchar_t const* _Locale
        );

    
    __declspec(dllimport) _locale_t __cdecl _wcreate_locale(
            int            _Category,
          wchar_t const* _Locale
        );



    __declspec(dllimport) wint_t __cdecl btowc(
          int _Ch
        );

    __declspec(dllimport) size_t __cdecl mbrlen(
            char const* _Ch,
                                                    size_t      _SizeInBytes,
                                                 mbstate_t*  _State
        );

    __declspec(dllimport) size_t __cdecl mbrtowc(
                                  wchar_t*    _DstCh,
            char const* _SrcCh,
                                                    size_t      _SizeInBytes,
                                                 mbstate_t*  _State
        );

     
    __declspec(dllimport) errno_t __cdecl mbsrtowcs_s(
                                  size_t*      _Retval,
                  wchar_t*     _Dst,
                                       size_t       _Size,
                          char const** _PSrc,
                                       size_t       _N,
                                    mbstate_t*   _State
        );

    
#line 98 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

      __declspec(dllimport) size_t __cdecl mbsrtowcs( wchar_t *_Dest,  char const** _PSrc,  size_t _Count,  mbstate_t* _State);
#line 106 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

     
    __declspec(dllimport) errno_t __cdecl wcrtomb_s(
                                 size_t*    _Retval,
          char*      _Dst,
                                      size_t     _SizeInBytes,
                                      wchar_t    _Ch,
                               mbstate_t* _State
        );

    
#line 124 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

     __declspec(dllimport) size_t __cdecl wcrtomb(  char *_Dest,  wchar_t _Source,  mbstate_t* _State);
#line 131 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

     
    __declspec(dllimport) errno_t __cdecl wcsrtombs_s(
                                                  size_t*         _Retval,
          char*           _Dst,
                                                       size_t          _SizeInBytes,
                                    wchar_t const** _Src,
                                                       size_t          _Size,
                                                mbstate_t*      _State
        );

    
#line 151 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

     __declspec(dllimport) size_t __cdecl wcsrtombs(  char *_Dest,  wchar_t const** _PSource,  size_t _Count,  mbstate_t* _State);
#line 159 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

    __declspec(dllimport) int __cdecl wctob(
          wint_t _WCh
        );

    

         
        errno_t __cdecl wmemcpy_s(
              wchar_t*       _S1,
                                      rsize_t        _N1,
                        wchar_t const* _S2,
                                      rsize_t        _N
            );

         
        errno_t __cdecl wmemmove_s(
              wchar_t*       _S1,
                                      rsize_t        _N1,
                        wchar_t const* _S2,
                                      rsize_t        _N
            );

    #line 183 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"

    __inline int __cdecl fwide(
          FILE* _F,
              int   _M
        )
    {
        (void)_F;
        return (_M);
    }

    __inline int __cdecl mbsinit(
          mbstate_t const* _P
        )
    {
        return _P == ((void *)0) || _P->_Wchar == 0;
    }

    __inline wchar_t * __cdecl wmemchr(
          wchar_t const* _S,
                    wchar_t        _C,
                    size_t         _N
        )
    {
        for (; 0 < _N; ++_S, --_N)
            if (*_S == _C)
                return (wchar_t *)_S;

        return 0;
    }

    __inline int __cdecl wmemcmp(
          wchar_t const* _S1,
          wchar_t const* _S2,
                    size_t         _N
        )
    {
        for (; 0 < _N; ++_S1, ++_S2, --_N)
            if (*_S1 != *_S2)
                return *_S1 < *_S2 ? -1 : 1;

        return 0;
    }

     
    
    __inline 
    wchar_t* __cdecl wmemcpy(
          wchar_t*       _S1,
                wchar_t const* _S2,
                          size_t         _N
        )
    {
        #pragma warning(suppress: 6386) 
        return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));
    }

    __inline 
    wchar_t* __cdecl wmemmove(
          wchar_t*       _S1,
                wchar_t const* _S2,
                              size_t         _N
        )
    {
        #pragma warning(suppress: 6386) 
        return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));
    }

     
    
    __inline wchar_t* __cdecl wmemset(
          wchar_t* _S,
                          wchar_t  _C,
                          size_t   _N
        )
    {
        wchar_t *_Su = _S;
        for (; 0 < _N; ++_Su, --_N)
        {
            *_Su = _C;
        }
        return _S;
    }

    













#line 281 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"


__pragma(pack(pop))

#pragma warning(pop) 
#line 287 "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\wchar.h"
#line 98 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"
#line 99 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"



typedef uint32_t Py_UCS4;
typedef uint16_t Py_UCS2;
typedef uint8_t Py_UCS1;






extern __declspec(dllimport) PyTypeObject PyUnicode_Type;
extern __declspec(dllimport) PyTypeObject PyUnicodeIter_Type;

















__declspec(dllimport) PyObject* PyUnicode_FromStringAndSize(
    const char *u,             
    Py_ssize_t size            
    );



__declspec(dllimport) PyObject* PyUnicode_FromString(
    const char *u              
    );


__declspec(dllimport) PyObject* PyUnicode_Substring(
    PyObject *str,
    Py_ssize_t start,
    Py_ssize_t end);
#line 147 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"







__declspec(dllimport) Py_UCS4* PyUnicode_AsUCS4(
    PyObject *unicode,
    Py_UCS4* buffer,
    Py_ssize_t buflen,
    int copy_null);




__declspec(dllimport) Py_UCS4* PyUnicode_AsUCS4Copy(PyObject *unicode);
#line 165 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"




__declspec(dllimport) Py_ssize_t PyUnicode_GetLength(
    PyObject *unicode
);
#line 173 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"




__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) Py_ssize_t PyUnicode_GetSize(
    PyObject *unicode           
    );




__declspec(dllimport) Py_UCS4 PyUnicode_ReadChar(
    PyObject *unicode,
    Py_ssize_t index
    );






__declspec(dllimport) int PyUnicode_WriteChar(
    PyObject *unicode,
    Py_ssize_t index,
    Py_UCS4 character
    );
#line 200 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

















__declspec(dllimport) int PyUnicode_Resize(
    PyObject **unicode,         
    Py_ssize_t length           
    );














__declspec(dllimport) PyObject* PyUnicode_FromEncodedObject(
    PyObject *obj,              
    const char *encoding,       
    const char *errors          
    );










__declspec(dllimport) PyObject* PyUnicode_FromObject(
    PyObject *obj      
    );

__declspec(dllimport) PyObject * PyUnicode_FromFormatV(
    const char *format,   
    va_list vargs
    );
__declspec(dllimport) PyObject * PyUnicode_FromFormat(
    const char *format,   
    ...
    );

__declspec(dllimport) void PyUnicode_InternInPlace(PyObject **);
__declspec(dllimport) PyObject * PyUnicode_InternFromString(
    const char *u              
    );



__declspec(deprecated( "deprecated in " "3.10")) __declspec(dllimport) void PyUnicode_InternImmortal(PyObject **);














__declspec(dllimport) PyObject* PyUnicode_FromWideChar(
    const wchar_t *w,           
    Py_ssize_t size             
    );













__declspec(dllimport) Py_ssize_t PyUnicode_AsWideChar(
    PyObject *unicode,          
    wchar_t *w,                 
    Py_ssize_t size             
    );









__declspec(dllimport) wchar_t* PyUnicode_AsWideCharString(
    PyObject *unicode,          
    Py_ssize_t *size            
    );

#line 322 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"










__declspec(dllimport) PyObject* PyUnicode_FromOrdinal(int ordinal);






















__declspec(dllimport) const char* PyUnicode_GetDefaultEncoding(void);






__declspec(dllimport) PyObject* PyUnicode_Decode(
    const char *s,              
    Py_ssize_t size,            
    const char *encoding,       
    const char *errors          
    );








__declspec(deprecated( "deprecated in " "3.6")) __declspec(dllimport) PyObject* PyUnicode_AsDecodedObject(
    PyObject *unicode,          
    const char *encoding,       
    const char *errors          
    );








__declspec(deprecated( "deprecated in " "3.6")) __declspec(dllimport) PyObject* PyUnicode_AsDecodedUnicode(
    PyObject *unicode,          
    const char *encoding,       
    const char *errors          
    );









__declspec(deprecated( "deprecated in " "3.6")) __declspec(dllimport) PyObject* PyUnicode_AsEncodedObject(
    PyObject *unicode,          
    const char *encoding,       
    const char *errors          
    );




__declspec(dllimport) PyObject* PyUnicode_AsEncodedString(
    PyObject *unicode,          
    const char *encoding,       
    const char *errors          
    );








__declspec(deprecated( "deprecated in " "3.6")) __declspec(dllimport) PyObject* PyUnicode_AsEncodedUnicode(
    PyObject *unicode,          
    const char *encoding,       
    const char *errors          
    );



__declspec(dllimport) PyObject* PyUnicode_BuildEncodingMap(
    PyObject* string            
   );



__declspec(dllimport) PyObject* PyUnicode_DecodeUTF7(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_DecodeUTF7Stateful(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    Py_ssize_t *consumed        
    );



__declspec(dllimport) PyObject* PyUnicode_DecodeUTF8(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_DecodeUTF8Stateful(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    Py_ssize_t *consumed        
    );

__declspec(dllimport) PyObject* PyUnicode_AsUTF8String(
    PyObject *unicode           
    );













__declspec(dllimport) const char * PyUnicode_AsUTF8AndSize(
    PyObject *unicode,
    Py_ssize_t *size);
#line 487 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"


























__declspec(dllimport) PyObject* PyUnicode_DecodeUTF32(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    int *byteorder              


    );

__declspec(dllimport) PyObject* PyUnicode_DecodeUTF32Stateful(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    int *byteorder,             


    Py_ssize_t *consumed        
    );




__declspec(dllimport) PyObject* PyUnicode_AsUTF32String(
    PyObject *unicode           
    );










































__declspec(dllimport) PyObject* PyUnicode_DecodeUTF16(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    int *byteorder              


    );

__declspec(dllimport) PyObject* PyUnicode_DecodeUTF16Stateful(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    int *byteorder,             


    Py_ssize_t *consumed        
    );




__declspec(dllimport) PyObject* PyUnicode_AsUTF16String(
    PyObject *unicode           
    );



__declspec(dllimport) PyObject* PyUnicode_DecodeUnicodeEscape(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_AsUnicodeEscapeString(
    PyObject *unicode           
    );



__declspec(dllimport) PyObject* PyUnicode_DecodeRawUnicodeEscape(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_AsRawUnicodeEscapeString(
    PyObject *unicode           
    );





__declspec(dllimport) PyObject* PyUnicode_DecodeLatin1(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_AsLatin1String(
    PyObject *unicode           
    );







__declspec(dllimport) PyObject* PyUnicode_DecodeASCII(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_AsASCIIString(
    PyObject *unicode           
    );


















__declspec(dllimport) PyObject* PyUnicode_DecodeCharmap(
    const char *string,         
    Py_ssize_t length,          
    PyObject *mapping,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_AsCharmapString(
    PyObject *unicode,          
    PyObject *mapping           
    );




__declspec(dllimport) PyObject* PyUnicode_DecodeMBCS(
    const char *string,         
    Py_ssize_t length,          
    const char *errors          
    );

__declspec(dllimport) PyObject* PyUnicode_DecodeMBCSStateful(
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    Py_ssize_t *consumed        
    );


__declspec(dllimport) PyObject* PyUnicode_DecodeCodePageStateful(
    int code_page,              
    const char *string,         
    Py_ssize_t length,          
    const char *errors,         
    Py_ssize_t *consumed        
    );
#line 714 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

__declspec(dllimport) PyObject* PyUnicode_AsMBCSString(
    PyObject *unicode           
    );


__declspec(dllimport) PyObject* PyUnicode_EncodeCodePage(
    int code_page,              
    PyObject *unicode,          
    const char *errors          
    );
#line 726 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

#line 728 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"












__declspec(dllimport) PyObject* PyUnicode_DecodeLocaleAndSize(
    const char *str,
    Py_ssize_t len,
    const char *errors);




__declspec(dllimport) PyObject* PyUnicode_DecodeLocale(
    const char *str,
    const char *errors);






__declspec(dllimport) PyObject* PyUnicode_EncodeLocale(
    PyObject *unicode,
    const char *errors
    );
#line 762 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"






__declspec(dllimport) int PyUnicode_FSConverter(PyObject*, void*);




__declspec(dllimport) int PyUnicode_FSDecoder(PyObject*, void*);










__declspec(dllimport) PyObject* PyUnicode_DecodeFSDefault(
    const char *s               
    );








__declspec(dllimport) PyObject* PyUnicode_DecodeFSDefaultAndSize(
    const char *s,               
    Py_ssize_t size              
    );








__declspec(dllimport) PyObject* PyUnicode_EncodeFSDefault(
    PyObject *unicode
    );









__declspec(dllimport) PyObject* PyUnicode_Concat(
    PyObject *left,             
    PyObject *right             
    );




__declspec(dllimport) void PyUnicode_Append(
    PyObject **pleft,           
    PyObject *right             
    );




__declspec(dllimport) void PyUnicode_AppendAndDel(
    PyObject **pleft,           
    PyObject *right             
    );












__declspec(dllimport) PyObject* PyUnicode_Split(
    PyObject *s,                
    PyObject *sep,              
    Py_ssize_t maxsplit         
    );






__declspec(dllimport) PyObject* PyUnicode_Splitlines(
    PyObject *s,                
    int keepends                
    );



__declspec(dllimport) PyObject* PyUnicode_Partition(
    PyObject *s,                
    PyObject *sep               
    );




__declspec(dllimport) PyObject* PyUnicode_RPartition(
    PyObject *s,                
    PyObject *sep               
    );














__declspec(dllimport) PyObject* PyUnicode_RSplit(
    PyObject *s,                
    PyObject *sep,              
    Py_ssize_t maxsplit         
    );













__declspec(dllimport) PyObject * PyUnicode_Translate(
    PyObject *str,              
    PyObject *table,            
    const char *errors          
    );




__declspec(dllimport) PyObject* PyUnicode_Join(
    PyObject *separator,        
    PyObject *seq               
    );




__declspec(dllimport) Py_ssize_t PyUnicode_Tailmatch(
    PyObject *str,              
    PyObject *substr,           
    Py_ssize_t start,           
    Py_ssize_t end,             
    int direction               
    );





__declspec(dllimport) Py_ssize_t PyUnicode_Find(
    PyObject *str,              
    PyObject *substr,           
    Py_ssize_t start,           
    Py_ssize_t end,             
    int direction               
    );



__declspec(dllimport) Py_ssize_t PyUnicode_FindChar(
    PyObject *str,
    Py_UCS4 ch,
    Py_ssize_t start,
    Py_ssize_t end,
    int direction
    );
#line 960 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"



__declspec(dllimport) Py_ssize_t PyUnicode_Count(
    PyObject *str,              
    PyObject *substr,           
    Py_ssize_t start,           
    Py_ssize_t end              
    );




__declspec(dllimport) PyObject * PyUnicode_Replace(
    PyObject *str,              
    PyObject *substr,           
    PyObject *replstr,          
    Py_ssize_t maxcount         

    );





__declspec(dllimport) int PyUnicode_Compare(
    PyObject *left,             
    PyObject *right             
    );







__declspec(dllimport) int PyUnicode_CompareWithASCIIString(
    PyObject *left,
    const char *right           
    );













__declspec(dllimport) PyObject * PyUnicode_RichCompare(
    PyObject *left,             
    PyObject *right,            
    int op                      
    );




__declspec(dllimport) PyObject * PyUnicode_Format(
    PyObject *format,           
    PyObject *args              
    );







__declspec(dllimport) int PyUnicode_Contains(
    PyObject *container,        
    PyObject *element           
    );



__declspec(dllimport) int PyUnicode_IsIdentifier(PyObject *s);





#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/unicodeobject.h"









 typedef wchar_t Py_UNICODE;





#line 17 "C:\\Users\\freez\\Python310\\include\\cpython/unicodeobject.h"




































__declspec(deprecated( "deprecated in " "3.3")) static inline void
Py_UNICODE_COPY(Py_UNICODE *target, const Py_UNICODE *source, Py_ssize_t length) {
    memcpy(target, source, (size_t)(length) * sizeof(Py_UNICODE));
}

__declspec(deprecated( "deprecated in " "3.3")) static inline void
Py_UNICODE_FILL(Py_UNICODE *target, Py_UNICODE value, Py_ssize_t length) {
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        target[i] = value;
    }
}




















typedef struct {
    








































































    PyObject ob_base;
    Py_ssize_t length;          
    Py_hash_t hash;             
    struct {
        







        unsigned int interned:2;
        


























        unsigned int kind:3;
        



        unsigned int compact:1;
        


        unsigned int ascii:1;
        



        unsigned int ready:1;
        

        unsigned int :24;
    } state;
    wchar_t *wstr;              
} PyASCIIObject;




typedef struct {
    PyASCIIObject _base;
    Py_ssize_t utf8_length;     

    char *utf8;                 
    Py_ssize_t wstr_length;     

} PyCompactUnicodeObject;




typedef struct {
    PyCompactUnicodeObject _base;
    union {
        void *any;
        Py_UCS1 *latin1;
        Py_UCS2 *ucs2;
        Py_UCS4 *ucs4;
    } data;                     
} PyUnicodeObject;

__declspec(dllimport) int _PyUnicode_CheckConsistency(
    PyObject *op,
    int check_content);
































































enum PyUnicode_Kind {



    PyUnicode_WCHAR_KIND = 0,

    PyUnicode_1BYTE_KIND = 1,
    PyUnicode_2BYTE_KIND = 2,
    PyUnicode_4BYTE_KIND = 4
};


























































































































__declspec(deprecated( "deprecated in " "3.3"))
static inline Py_ssize_t _PyUnicode_get_wstr_length(PyObject *op) {
    return (((PyASCIIObject*)op)->state.ascii && (((PyASCIIObject*)(op))->state.compact)) ?
            ((PyASCIIObject*)op)->length :
            ((PyCompactUnicodeObject*)op)->wstr_length;
}









__declspec(dllimport) PyObject* PyUnicode_New(
    Py_ssize_t size,            
    Py_UCS4 maxchar             
    );








__declspec(dllimport) int _PyUnicode_Ready(
    PyObject *unicode           
    );


__declspec(dllimport) PyObject* _PyUnicode_Copy(
    PyObject *unicode
    );



















__declspec(dllimport) Py_ssize_t PyUnicode_CopyCharacters(
    PyObject *to,
    Py_ssize_t to_start,
    PyObject *from,
    Py_ssize_t from_start,
    Py_ssize_t how_many
    );




__declspec(dllimport) void _PyUnicode_FastCopyCharacters(
    PyObject *to,
    Py_ssize_t to_start,
    PyObject *from,
    Py_ssize_t from_start,
    Py_ssize_t how_many
    );









__declspec(dllimport) Py_ssize_t PyUnicode_Fill(
    PyObject *unicode,
    Py_ssize_t start,
    Py_ssize_t length,
    Py_UCS4 fill_char
    );



__declspec(dllimport) void _PyUnicode_FastFill(
    PyObject *unicode,
    Py_ssize_t start,
    Py_ssize_t length,
    Py_UCS4 fill_char
    );










__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_FromUnicode(
    const Py_UNICODE *u,        
    Py_ssize_t size             
    );



__declspec(dllimport) PyObject* PyUnicode_FromKindAndData(
    int kind,
    const void *buffer,
    Py_ssize_t size);



__declspec(dllimport) PyObject* _PyUnicode_FromASCII(
    const char *buffer,
    Py_ssize_t size);



__declspec(dllimport) Py_UCS4 _PyUnicode_FindMaxChar (
    PyObject *unicode,
    Py_ssize_t start,
    Py_ssize_t end);





__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) Py_UNICODE * PyUnicode_AsUnicode(
    PyObject *unicode           
    );



__declspec(dllimport) const Py_UNICODE * _PyUnicode_AsUnicode(
    PyObject *unicode           
    );






__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) Py_UNICODE * PyUnicode_AsUnicodeAndSize(
    PyObject *unicode,          
    Py_ssize_t *size            
    );




typedef struct {
    PyObject *buffer;
    void *data;
    enum PyUnicode_Kind kind;
    Py_UCS4 maxchar;
    Py_ssize_t size;
    Py_ssize_t pos;

    
    Py_ssize_t min_length;

    
    Py_UCS4 min_char;

    
    unsigned char overallocate;

    

    unsigned char readonly;
} _PyUnicodeWriter ;






__declspec(dllimport) void
_PyUnicodeWriter_Init(_PyUnicodeWriter *writer);















__declspec(dllimport) int
_PyUnicodeWriter_PrepareInternal(_PyUnicodeWriter *writer,
                                 Py_ssize_t length, Py_UCS4 maxchar);














__declspec(dllimport) int
_PyUnicodeWriter_PrepareKindInternal(_PyUnicodeWriter *writer,
                                     enum PyUnicode_Kind kind);



__declspec(dllimport) int
_PyUnicodeWriter_WriteChar(_PyUnicodeWriter *writer,
    Py_UCS4 ch
    );



__declspec(dllimport) int
_PyUnicodeWriter_WriteStr(_PyUnicodeWriter *writer,
    PyObject *str               
    );



__declspec(dllimport) int
_PyUnicodeWriter_WriteSubstring(_PyUnicodeWriter *writer,
    PyObject *str,              
    Py_ssize_t start,
    Py_ssize_t end
    );



__declspec(dllimport) int
_PyUnicodeWriter_WriteASCIIString(_PyUnicodeWriter *writer,
    const char *str,           
    Py_ssize_t len             
    );



__declspec(dllimport) int
_PyUnicodeWriter_WriteLatin1String(_PyUnicodeWriter *writer,
    const char *str,           
    Py_ssize_t len             
    );




__declspec(dllimport) PyObject *
_PyUnicodeWriter_Finish(_PyUnicodeWriter *writer);


__declspec(dllimport) void
_PyUnicodeWriter_Dealloc(_PyUnicodeWriter *writer);




__declspec(dllimport) int _PyUnicode_FormatAdvancedWriter(
    _PyUnicodeWriter *writer,
    PyObject *obj,
    PyObject *format_spec,
    Py_ssize_t start,
    Py_ssize_t end);
















__declspec(dllimport) const char * PyUnicode_AsUTF8(PyObject *unicode);







__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_Encode(
    const Py_UNICODE *s,        
    Py_ssize_t size,            
    const char *encoding,       
    const char *errors          
    );



__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeUTF7(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    int base64SetO,             
    int base64WhiteSpace,       
    const char *errors          
    );

__declspec(dllimport) PyObject* _PyUnicode_EncodeUTF7(
    PyObject *unicode,          
    int base64SetO,             
    int base64WhiteSpace,       
    const char *errors          
    );



__declspec(dllimport) PyObject* _PyUnicode_AsUTF8String(
    PyObject *unicode,
    const char *errors);

__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeUTF8(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors          
    );



__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeUTF32(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors,         
    int byteorder               
    );

__declspec(dllimport) PyObject* _PyUnicode_EncodeUTF32(
    PyObject *object,           
    const char *errors,         
    int byteorder               
    );






















__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeUTF16(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors,         
    int byteorder               
    );

__declspec(dllimport) PyObject* _PyUnicode_EncodeUTF16(
    PyObject* unicode,          
    const char *errors,         
    int byteorder               
    );




__declspec(dllimport) PyObject* _PyUnicode_DecodeUnicodeEscapeStateful(
        const char *string,     
        Py_ssize_t length,      
        const char *errors,     
        Py_ssize_t *consumed    
);



__declspec(dllimport) PyObject* _PyUnicode_DecodeUnicodeEscapeInternal(
        const char *string,     
        Py_ssize_t length,      
        const char *errors,     
        Py_ssize_t *consumed,   
        const char **first_invalid_escape  


);

__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeUnicodeEscape(
    const Py_UNICODE *data,     
    Py_ssize_t length           
    );



__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeRawUnicodeEscape(
    const Py_UNICODE *data,     
    Py_ssize_t length           
    );


__declspec(dllimport) PyObject* _PyUnicode_DecodeRawUnicodeEscapeStateful(
        const char *string,     
        Py_ssize_t length,      
        const char *errors,     
        Py_ssize_t *consumed    
);



__declspec(dllimport) PyObject* _PyUnicode_AsLatin1String(
    PyObject* unicode,
    const char* errors);

__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeLatin1(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors          
    );



__declspec(dllimport) PyObject* _PyUnicode_AsASCIIString(
    PyObject* unicode,
    const char* errors);

__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeASCII(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors          
    );



__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeCharmap(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    PyObject *mapping,          
    const char *errors          
    );

__declspec(dllimport) PyObject* _PyUnicode_EncodeCharmap(
    PyObject *unicode,          
    PyObject *mapping,          
    const char *errors          
    );













__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject * PyUnicode_TranslateCharmap(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    PyObject *table,            
    const char *errors          
    );




__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject* PyUnicode_EncodeMBCS(
    const Py_UNICODE *data,     
    Py_ssize_t length,          
    const char *errors          
    );
#line 944 "C:\\Users\\freez\\Python310\\include\\cpython/unicodeobject.h"

























__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) int PyUnicode_EncodeDecimal(
    Py_UNICODE *s,              
    Py_ssize_t length,          
    char *output,               
    const char *errors          
    );







__declspec(deprecated( "deprecated in " "3.3"))
__declspec(dllimport) PyObject* PyUnicode_TransformDecimalToASCII(
    Py_UNICODE *s,              
    Py_ssize_t length           
    );








__declspec(dllimport) PyObject* _PyUnicode_TransformDecimalAndSpaceToASCII(
    PyObject *unicode           
    );



__declspec(dllimport) PyObject * _PyUnicode_JoinArray(
    PyObject *separator,
    PyObject *const *items,
    Py_ssize_t seqlen
    );




__declspec(dllimport) int _PyUnicode_EqualToASCIIId(
    PyObject *left,             
    _Py_Identifier *right       
    );




__declspec(dllimport) int _PyUnicode_EqualToASCIIString(
    PyObject *left,
    const char *right           
    );


__declspec(dllimport) PyObject * _PyUnicode_XStrip(
    PyObject *self,
    int striptype,
    PyObject *sepobj
    );




__declspec(dllimport) Py_ssize_t _PyUnicode_InsertThousandsGrouping(
    _PyUnicodeWriter *writer,
    Py_ssize_t n_buffer,
    PyObject *digits,
    Py_ssize_t d_pos,
    Py_ssize_t n_digits,
    Py_ssize_t min_width,
    const char *grouping,
    PyObject *thousands_sep,
    Py_UCS4 *maxchar);





extern __declspec(dllimport) const unsigned char _Py_ascii_whitespace[];








__declspec(dllimport) int _PyUnicode_IsLowercase(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsUppercase(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsTitlecase(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsXidStart(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsXidContinue(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsWhitespace(
    const Py_UCS4 ch         
    );

__declspec(dllimport) int _PyUnicode_IsLinebreak(
    const Py_UCS4 ch         
    );

 __declspec(dllimport) Py_UCS4 _PyUnicode_ToLowercase(
    Py_UCS4 ch       
    );

 __declspec(dllimport) Py_UCS4 _PyUnicode_ToUppercase(
    Py_UCS4 ch       
    );

__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) Py_UCS4 _PyUnicode_ToTitlecase(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_ToLowerFull(
    Py_UCS4 ch,       
    Py_UCS4 *res
    );

__declspec(dllimport) int _PyUnicode_ToTitleFull(
    Py_UCS4 ch,       
    Py_UCS4 *res
    );

__declspec(dllimport) int _PyUnicode_ToUpperFull(
    Py_UCS4 ch,       
    Py_UCS4 *res
    );

__declspec(dllimport) int _PyUnicode_ToFoldedFull(
    Py_UCS4 ch,       
    Py_UCS4 *res
    );

__declspec(dllimport) int _PyUnicode_IsCaseIgnorable(
    Py_UCS4 ch         
    );

__declspec(dllimport) int _PyUnicode_IsCased(
    Py_UCS4 ch         
    );

__declspec(dllimport) int _PyUnicode_ToDecimalDigit(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_ToDigit(
    Py_UCS4 ch       
    );

__declspec(dllimport) double _PyUnicode_ToNumeric(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsDecimalDigit(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsDigit(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsNumeric(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsPrintable(
    Py_UCS4 ch       
    );

__declspec(dllimport) int _PyUnicode_IsAlpha(
    Py_UCS4 ch       
    );

__declspec(dllimport) PyObject* _PyUnicode_FormatLong(PyObject *, int, int, int);


__declspec(dllimport) PyObject* _PyUnicode_FromId(_Py_Identifier*);



__declspec(dllimport) int _PyUnicode_EQ(PyObject *, PyObject *);

__declspec(dllimport) int _PyUnicode_WideCharString_Converter(PyObject *, void *);
__declspec(dllimport) int _PyUnicode_WideCharString_Opt_Converter(PyObject *, void *);

__declspec(dllimport) Py_ssize_t _PyUnicode_ScanIdentifier(PyObject *);
#line 1047 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"

#line 1049 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"




#line 1054 "C:\\Users\\freez\\Python310\\include\\unicodeobject.h"
#line 84 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\longobject.h"









typedef struct _longobject PyLongObject; 

extern __declspec(dllimport) PyTypeObject PyLong_Type;





__declspec(dllimport) PyObject * PyLong_FromLong(long);
__declspec(dllimport) PyObject * PyLong_FromUnsignedLong(unsigned long);
__declspec(dllimport) PyObject * PyLong_FromSize_t(size_t);
__declspec(dllimport) PyObject * PyLong_FromSsize_t(Py_ssize_t);
__declspec(dllimport) PyObject * PyLong_FromDouble(double);
__declspec(dllimport) long PyLong_AsLong(PyObject *);
__declspec(dllimport) long PyLong_AsLongAndOverflow(PyObject *, int *);
__declspec(dllimport) Py_ssize_t PyLong_AsSsize_t(PyObject *);
__declspec(dllimport) size_t PyLong_AsSize_t(PyObject *);
__declspec(dllimport) unsigned long PyLong_AsUnsignedLong(PyObject *);
__declspec(dllimport) unsigned long PyLong_AsUnsignedLongMask(PyObject *);

__declspec(dllimport) int _PyLong_AsInt(PyObject *);
#line 32 "C:\\Users\\freez\\Python310\\include\\longobject.h"
__declspec(dllimport) PyObject * PyLong_GetInfo(void);




















#line 54 "C:\\Users\\freez\\Python310\\include\\longobject.h"




#line 59 "C:\\Users\\freez\\Python310\\include\\longobject.h"


#line 62 "C:\\Users\\freez\\Python310\\include\\longobject.h"




#line 67 "C:\\Users\\freez\\Python310\\include\\longobject.h"


__declspec(dllimport) int _PyLong_UnsignedShort_Converter(PyObject *, void *);
__declspec(dllimport) int _PyLong_UnsignedInt_Converter(PyObject *, void *);
__declspec(dllimport) int _PyLong_UnsignedLong_Converter(PyObject *, void *);
__declspec(dllimport) int _PyLong_UnsignedLongLong_Converter(PyObject *, void *);
__declspec(dllimport) int _PyLong_Size_t_Converter(PyObject *, void *);
#line 75 "C:\\Users\\freez\\Python310\\include\\longobject.h"




extern __declspec(dllimport) unsigned char _PyLong_DigitValue[256];
#line 81 "C:\\Users\\freez\\Python310\\include\\longobject.h"








__declspec(dllimport) double _PyLong_Frexp(PyLongObject *a, Py_ssize_t *e);
#line 91 "C:\\Users\\freez\\Python310\\include\\longobject.h"

__declspec(dllimport) double PyLong_AsDouble(PyObject *);
__declspec(dllimport) PyObject * PyLong_FromVoidPtr(void *);
__declspec(dllimport) void * PyLong_AsVoidPtr(PyObject *);

__declspec(dllimport) PyObject * PyLong_FromLongLong(long long);
__declspec(dllimport) PyObject * PyLong_FromUnsignedLongLong(unsigned long long);
__declspec(dllimport) long long PyLong_AsLongLong(PyObject *);
__declspec(dllimport) unsigned long long PyLong_AsUnsignedLongLong(PyObject *);
__declspec(dllimport) unsigned long long PyLong_AsUnsignedLongLongMask(PyObject *);
__declspec(dllimport) long long PyLong_AsLongLongAndOverflow(PyObject *, int *);

__declspec(dllimport) PyObject * PyLong_FromString(const char *, char **, int);

__declspec(dllimport) PyObject * PyLong_FromUnicodeObject(PyObject *u, int base);
__declspec(dllimport) PyObject * _PyLong_FromBytes(const char *, Py_ssize_t, int);
#line 108 "C:\\Users\\freez\\Python310\\include\\longobject.h"






__declspec(dllimport) int _PyLong_Sign(PyObject *v);









__declspec(dllimport) size_t _PyLong_NumBits(PyObject *v);







__declspec(dllimport) PyObject * _PyLong_DivmodNear(PyObject *, PyObject *);














__declspec(dllimport) PyObject * _PyLong_FromByteArray(
    const unsigned char* bytes, size_t n,
    int little_endian, int is_signed);




















__declspec(dllimport) int _PyLong_AsByteArray(PyLongObject* v,
    unsigned char* bytes, size_t n,
    int little_endian, int is_signed);



__declspec(dllimport) PyObject * _PyLong_Format(PyObject *obj, int base);

__declspec(dllimport) int _PyLong_FormatWriter(
    _PyUnicodeWriter *writer,
    PyObject *obj,
    int base,
    int alternate);

__declspec(dllimport) char* _PyLong_FormatBytesWriter(
    _PyBytesWriter *writer,
    char *str,
    PyObject *obj,
    int base,
    int alternate);



__declspec(dllimport) int _PyLong_FormatAdvancedWriter(
    _PyUnicodeWriter *writer,
    PyObject *obj,
    PyObject *format_spec,
    Py_ssize_t start,
    Py_ssize_t end);
#line 200 "C:\\Users\\freez\\Python310\\include\\longobject.h"




__declspec(dllimport) unsigned long PyOS_strtoul(const char *, char **, int);
__declspec(dllimport) long PyOS_strtol(const char *, char **, int);



__declspec(dllimport) PyObject * _PyLong_GCD(PyObject *, PyObject *);
#line 211 "C:\\Users\\freez\\Python310\\include\\longobject.h"


__declspec(dllimport) PyObject * _PyLong_Rshift(PyObject *, size_t);
__declspec(dllimport) PyObject * _PyLong_Lshift(PyObject *, size_t);
#line 216 "C:\\Users\\freez\\Python310\\include\\longobject.h"




#line 221 "C:\\Users\\freez\\Python310\\include\\longobject.h"
#line 85 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\longintrepr.h"












































typedef uint32_t digit;
typedef int32_t sdigit; 
typedef uint64_t twodigits;
typedef int64_t stwodigits; 













#line 63 "C:\\Users\\freez\\Python310\\include\\longintrepr.h"





#line 69 "C:\\Users\\freez\\Python310\\include\\longintrepr.h"
















struct _longobject {
    PyVarObject ob_base;
    digit ob_digit[1];
};

__declspec(dllimport) PyLongObject * _PyLong_New(Py_ssize_t);


__declspec(dllimport) PyObject * _PyLong_Copy(PyLongObject *src);




#line 99 "C:\\Users\\freez\\Python310\\include\\longintrepr.h"
#line 100 "C:\\Users\\freez\\Python310\\include\\longintrepr.h"
#line 86 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\boolobject.h"









extern __declspec(dllimport) PyTypeObject PyBool_Type;







extern __declspec(dllimport) struct _longobject _Py_FalseStruct;
extern __declspec(dllimport) struct _longobject _Py_TrueStruct;






__declspec(dllimport) int Py_IsTrue(PyObject *x);



__declspec(dllimport) int Py_IsFalse(PyObject *x);







__declspec(dllimport) PyObject * PyBool_FromLong(long);




#line 44 "C:\\Users\\freez\\Python310\\include\\boolobject.h"
#line 87 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\floatobject.h"














typedef struct {
    PyObject ob_base;
    double ob_fval;
} PyFloatObject;
#line 20 "C:\\Users\\freez\\Python310\\include\\floatobject.h"

extern __declspec(dllimport) PyTypeObject PyFloat_Type;






#line 29 "C:\\Users\\freez\\Python310\\include\\floatobject.h"








__declspec(dllimport) double PyFloat_GetMax(void);
__declspec(dllimport) double PyFloat_GetMin(void);
__declspec(dllimport) PyObject * PyFloat_GetInfo(void);


__declspec(dllimport) PyObject * PyFloat_FromString(PyObject*);


__declspec(dllimport) PyObject * PyFloat_FromDouble(double);



__declspec(dllimport) double PyFloat_AsDouble(PyObject *);


#line 53 "C:\\Users\\freez\\Python310\\include\\floatobject.h"


































__declspec(dllimport) int _PyFloat_Pack2(double x, unsigned char *p, int le);
__declspec(dllimport) int _PyFloat_Pack4(double x, unsigned char *p, int le);
__declspec(dllimport) int _PyFloat_Pack8(double x, unsigned char *p, int le);









__declspec(dllimport) double _PyFloat_Unpack2(const unsigned char *p, int le);
__declspec(dllimport) double _PyFloat_Unpack4(const unsigned char *p, int le);
__declspec(dllimport) double _PyFloat_Unpack8(const unsigned char *p, int le);

__declspec(dllimport) void _PyFloat_DebugMallocStats(FILE* out);



__declspec(dllimport) int _PyFloat_FormatAdvancedWriter(
    _PyUnicodeWriter *writer,
    PyObject *obj,
    PyObject *format_spec,
    Py_ssize_t start,
    Py_ssize_t end);
#line 114 "C:\\Users\\freez\\Python310\\include\\floatobject.h"




#line 119 "C:\\Users\\freez\\Python310\\include\\floatobject.h"
#line 88 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\complexobject.h"









typedef struct {
    double real;
    double imag;
} Py_complex;



__declspec(dllimport) Py_complex _Py_c_sum(Py_complex, Py_complex);
__declspec(dllimport) Py_complex _Py_c_diff(Py_complex, Py_complex);
__declspec(dllimport) Py_complex _Py_c_neg(Py_complex);
__declspec(dllimport) Py_complex _Py_c_prod(Py_complex, Py_complex);
__declspec(dllimport) Py_complex _Py_c_quot(Py_complex, Py_complex);
__declspec(dllimport) Py_complex _Py_c_pow(Py_complex, Py_complex);
__declspec(dllimport) double _Py_c_abs(Py_complex);
#line 25 "C:\\Users\\freez\\Python310\\include\\complexobject.h"








typedef struct {
    PyObject ob_base;
    Py_complex cval;
} PyComplexObject;
#line 38 "C:\\Users\\freez\\Python310\\include\\complexobject.h"

extern __declspec(dllimport) PyTypeObject PyComplex_Type;





__declspec(dllimport) PyObject * PyComplex_FromCComplex(Py_complex);
#line 47 "C:\\Users\\freez\\Python310\\include\\complexobject.h"
__declspec(dllimport) PyObject * PyComplex_FromDoubles(double real, double imag);

__declspec(dllimport) double PyComplex_RealAsDouble(PyObject *op);
__declspec(dllimport) double PyComplex_ImagAsDouble(PyObject *op);

__declspec(dllimport) Py_complex PyComplex_AsCComplex(PyObject *op);
#line 54 "C:\\Users\\freez\\Python310\\include\\complexobject.h"




__declspec(dllimport) int _PyComplex_FormatAdvancedWriter(
    _PyUnicodeWriter *writer,
    PyObject *obj,
    PyObject *format_spec,
    Py_ssize_t start,
    Py_ssize_t end);
#line 65 "C:\\Users\\freez\\Python310\\include\\complexobject.h"




#line 70 "C:\\Users\\freez\\Python310\\include\\complexobject.h"
#line 89 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\rangeobject.h"

















extern __declspec(dllimport) PyTypeObject PyRange_Type;
extern __declspec(dllimport) PyTypeObject PyRangeIter_Type;
extern __declspec(dllimport) PyTypeObject PyLongRangeIter_Type;






#line 28 "C:\\Users\\freez\\Python310\\include\\rangeobject.h"
#line 90 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"









extern __declspec(dllimport) PyTypeObject _PyManagedBuffer_Type;
#line 12 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"
extern __declspec(dllimport) PyTypeObject PyMemoryView_Type;








#line 22 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"

__declspec(dllimport) PyObject * PyMemoryView_FromObject(PyObject *base);

__declspec(dllimport) PyObject * PyMemoryView_FromMemory(char *mem, Py_ssize_t size,
                                               int flags);
#line 28 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"

__declspec(dllimport) PyObject * PyMemoryView_FromBuffer(Py_buffer *info);
#line 31 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"
__declspec(dllimport) PyObject * PyMemoryView_GetContiguous(PyObject *base,
                                                  int buffertype,
                                                  char order);








typedef struct {
    PyObject ob_base;
    int flags;          
    Py_ssize_t exports; 
    Py_buffer master; 
} _PyManagedBufferObject;









typedef struct {
    PyVarObject ob_base;
    _PyManagedBufferObject *mbuf; 
    Py_hash_t hash;               
    int flags;                    
    Py_ssize_t exports;           
    Py_buffer view;               
    PyObject *weakreflist;
    Py_ssize_t ob_array[1];       
} PyMemoryViewObject;
#line 68 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"




#line 73 "C:\\Users\\freez\\Python310\\include\\memoryobject.h"
#line 91 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\tupleobject.h"






















extern __declspec(dllimport) PyTypeObject PyTuple_Type;
extern __declspec(dllimport) PyTypeObject PyTupleIter_Type;





__declspec(dllimport) PyObject * PyTuple_New(Py_ssize_t size);
__declspec(dllimport) Py_ssize_t PyTuple_Size(PyObject *);
__declspec(dllimport) PyObject * PyTuple_GetItem(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyTuple_SetItem(PyObject *, Py_ssize_t, PyObject *);
__declspec(dllimport) PyObject * PyTuple_GetSlice(PyObject *, Py_ssize_t, Py_ssize_t);
__declspec(dllimport) PyObject * PyTuple_Pack(Py_ssize_t, ...);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/tupleobject.h"




typedef struct {
    PyVarObject ob_base;
    


    PyObject *ob_item[1];
} PyTupleObject;

__declspec(dllimport) int _PyTuple_Resize(PyObject **, Py_ssize_t);
__declspec(dllimport) void _PyTuple_MaybeUntrack(PyObject *);













__declspec(dllimport) void _PyTuple_DebugMallocStats(FILE *out);
#line 40 "C:\\Users\\freez\\Python310\\include\\tupleobject.h"

#line 42 "C:\\Users\\freez\\Python310\\include\\tupleobject.h"




#line 47 "C:\\Users\\freez\\Python310\\include\\tupleobject.h"
#line 92 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\listobject.h"



















extern __declspec(dllimport) PyTypeObject PyList_Type;
extern __declspec(dllimport) PyTypeObject PyListIter_Type;
extern __declspec(dllimport) PyTypeObject PyListRevIter_Type;





__declspec(dllimport) PyObject * PyList_New(Py_ssize_t size);
__declspec(dllimport) Py_ssize_t PyList_Size(PyObject *);

__declspec(dllimport) PyObject * PyList_GetItem(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyList_SetItem(PyObject *, Py_ssize_t, PyObject *);
__declspec(dllimport) int PyList_Insert(PyObject *, Py_ssize_t, PyObject *);
__declspec(dllimport) int PyList_Append(PyObject *, PyObject *);

__declspec(dllimport) PyObject * PyList_GetSlice(PyObject *, Py_ssize_t, Py_ssize_t);
__declspec(dllimport) int PyList_SetSlice(PyObject *, Py_ssize_t, Py_ssize_t, PyObject *);

__declspec(dllimport) int PyList_Sort(PyObject *);
__declspec(dllimport) int PyList_Reverse(PyObject *);
__declspec(dllimport) PyObject * PyList_AsTuple(PyObject *);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/listobject.h"




typedef struct {
    PyVarObject ob_base;
    
    PyObject **ob_item;

    










    Py_ssize_t allocated;
} PyListObject;

__declspec(dllimport) PyObject * _PyList_Extend(PyListObject *, PyObject *);
__declspec(dllimport) void _PyList_DebugMallocStats(FILE *out);









#line 46 "C:\\Users\\freez\\Python310\\include\\listobject.h"

#line 48 "C:\\Users\\freez\\Python310\\include\\listobject.h"




#line 53 "C:\\Users\\freez\\Python310\\include\\listobject.h"
#line 93 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\dictobject.h"














extern __declspec(dllimport) PyTypeObject PyDict_Type;





__declspec(dllimport) PyObject * PyDict_New(void);
__declspec(dllimport) PyObject * PyDict_GetItem(PyObject *mp, PyObject *key);
__declspec(dllimport) PyObject * PyDict_GetItemWithError(PyObject *mp, PyObject *key);
__declspec(dllimport) int PyDict_SetItem(PyObject *mp, PyObject *key, PyObject *item);
__declspec(dllimport) int PyDict_DelItem(PyObject *mp, PyObject *key);
__declspec(dllimport) void PyDict_Clear(PyObject *mp);
__declspec(dllimport) int PyDict_Next(
    PyObject *mp, Py_ssize_t *pos, PyObject **key, PyObject **value);
__declspec(dllimport) PyObject * PyDict_Keys(PyObject *mp);
__declspec(dllimport) PyObject * PyDict_Values(PyObject *mp);
__declspec(dllimport) PyObject * PyDict_Items(PyObject *mp);
__declspec(dllimport) Py_ssize_t PyDict_Size(PyObject *mp);
__declspec(dllimport) PyObject * PyDict_Copy(PyObject *mp);
__declspec(dllimport) int PyDict_Contains(PyObject *mp, PyObject *key);


__declspec(dllimport) int PyDict_Update(PyObject *mp, PyObject *other);






__declspec(dllimport) int PyDict_Merge(PyObject *mp,
                             PyObject *other,
                             int override);






__declspec(dllimport) int PyDict_MergeFromSeq2(PyObject *d,
                                     PyObject *seq2,
                                     int override);

__declspec(dllimport) PyObject * PyDict_GetItemString(PyObject *dp, const char *key);
__declspec(dllimport) int PyDict_SetItemString(PyObject *dp, const char *key, PyObject *item);
__declspec(dllimport) int PyDict_DelItemString(PyObject *dp, const char *key);

__declspec(dllimport) PyObject * PyObject_GenericGetDict(PyObject *, void *);
#line 63 "C:\\Users\\freez\\Python310\\include\\dictobject.h"



extern __declspec(dllimport) PyTypeObject PyDictKeys_Type;
extern __declspec(dllimport) PyTypeObject PyDictValues_Type;
extern __declspec(dllimport) PyTypeObject PyDictItems_Type;










extern __declspec(dllimport) PyTypeObject PyDictIterKey_Type;
extern __declspec(dllimport) PyTypeObject PyDictIterValue_Type;
extern __declspec(dllimport) PyTypeObject PyDictIterItem_Type;

extern __declspec(dllimport) PyTypeObject PyDictRevIterKey_Type;
extern __declspec(dllimport) PyTypeObject PyDictRevIterItem_Type;
extern __declspec(dllimport) PyTypeObject PyDictRevIterValue_Type;




#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/dictobject.h"




typedef struct _dictkeysobject PyDictKeysObject;




typedef struct {
    PyObject ob_base;

    
    Py_ssize_t ma_used;

    

    uint64_t ma_version_tag;

    PyDictKeysObject *ma_keys;

    




    PyObject **ma_values;
} PyDictObject;

__declspec(dllimport) PyObject * _PyDict_GetItem_KnownHash(PyObject *mp, PyObject *key,
                                       Py_hash_t hash);
__declspec(dllimport) PyObject * _PyDict_GetItemIdWithError(PyObject *dp,
                                                  struct _Py_Identifier *key);
__declspec(dllimport) PyObject * _PyDict_GetItemStringWithError(PyObject *, const char *);
__declspec(dllimport) PyObject * PyDict_SetDefault(
    PyObject *mp, PyObject *key, PyObject *defaultobj);
__declspec(dllimport) int _PyDict_SetItem_KnownHash(PyObject *mp, PyObject *key,
                                          PyObject *item, Py_hash_t hash);
__declspec(dllimport) int _PyDict_DelItem_KnownHash(PyObject *mp, PyObject *key,
                                          Py_hash_t hash);
__declspec(dllimport) int _PyDict_DelItemIf(PyObject *mp, PyObject *key,
                                  int (*predicate)(PyObject *value));
PyDictKeysObject *_PyDict_NewKeysForClass(void);
__declspec(dllimport) int _PyDict_Next(
    PyObject *mp, Py_ssize_t *pos, PyObject **key, PyObject **value, Py_hash_t *hash);



__declspec(dllimport) int _PyDict_Contains_KnownHash(PyObject *, PyObject *, Py_hash_t);
__declspec(dllimport) int _PyDict_ContainsId(PyObject *, struct _Py_Identifier *);
__declspec(dllimport) PyObject * _PyDict_NewPresized(Py_ssize_t minused);
__declspec(dllimport) void _PyDict_MaybeUntrack(PyObject *mp);
__declspec(dllimport) int _PyDict_HasOnlyStringKeys(PyObject *mp);
Py_ssize_t _PyDict_KeysSize(PyDictKeysObject *keys);
__declspec(dllimport) Py_ssize_t _PyDict_SizeOf(PyDictObject *);
__declspec(dllimport) PyObject * _PyDict_Pop(PyObject *, PyObject *, PyObject *);
PyObject *_PyDict_Pop_KnownHash(PyObject *, PyObject *, Py_hash_t, PyObject *);
PyObject *_PyDict_FromKeys(PyObject *, PyObject *, PyObject *);







__declspec(dllimport) int _PyDict_MergeEx(PyObject *mp, PyObject *other, int override);
__declspec(dllimport) int _PyDict_SetItemId(PyObject *dp, struct _Py_Identifier *key, PyObject *item);

__declspec(dllimport) int _PyDict_DelItemId(PyObject *mp, struct _Py_Identifier *key);
__declspec(dllimport) void _PyDict_DebugMallocStats(FILE *out);

int _PyObjectDict_SetItem(PyTypeObject *tp, PyObject **dictptr, PyObject *name, PyObject *value);
PyObject *_PyDict_LoadGlobal(PyDictObject *, PyDictObject *, PyObject *);
Py_ssize_t _PyDict_GetItemHint(PyDictObject *, PyObject *, Py_ssize_t, PyObject **);



typedef struct {
    PyObject ob_base;
    PyDictObject *dv_dict;
} _PyDictViewObject;

__declspec(dllimport) PyObject * _PyDictView_New(PyObject *, PyTypeObject *);
__declspec(dllimport) PyObject * _PyDictView_Intersect(PyObject* self, PyObject *other);
#line 91 "C:\\Users\\freez\\Python310\\include\\dictobject.h"

#line 93 "C:\\Users\\freez\\Python310\\include\\dictobject.h"




#line 98 "C:\\Users\\freez\\Python310\\include\\dictobject.h"
#line 94 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/odictobject.h"












typedef struct _odictobject PyODictObject;

extern __declspec(dllimport) PyTypeObject PyODict_Type;
extern __declspec(dllimport) PyTypeObject PyODictIter_Type;
extern __declspec(dllimport) PyTypeObject PyODictKeys_Type;
extern __declspec(dllimport) PyTypeObject PyODictItems_Type;
extern __declspec(dllimport) PyTypeObject PyODictValues_Type;





__declspec(dllimport) PyObject * PyODict_New(void);
__declspec(dllimport) int PyODict_SetItem(PyObject *od, PyObject *key, PyObject *item);
__declspec(dllimport) int PyODict_DelItem(PyObject *od, PyObject *key);










#line 39 "C:\\Users\\freez\\Python310\\include\\cpython/odictobject.h"




#line 44 "C:\\Users\\freez\\Python310\\include\\cpython/odictobject.h"
#line 95 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\enumobject.h"









extern __declspec(dllimport) PyTypeObject PyEnum_Type;
extern __declspec(dllimport) PyTypeObject PyReversed_Type;





#line 18 "C:\\Users\\freez\\Python310\\include\\enumobject.h"
#line 96 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\setobject.h"

























typedef struct {
    PyObject *key;
    Py_hash_t hash;             
} setentry;












typedef struct {
    PyObject ob_base;

    Py_ssize_t fill;            
    Py_ssize_t used;            

    



    Py_ssize_t mask;

    




    setentry *table;
    Py_hash_t hash;             
    Py_ssize_t finger;          

    setentry smalltable[8];
    PyObject *weakreflist;      
} PySetObject;



extern __declspec(dllimport) PyObject * _PySet_Dummy;

__declspec(dllimport) int _PySet_NextEntry(PyObject *set, Py_ssize_t *pos, PyObject **key, Py_hash_t *hash);
__declspec(dllimport) int _PySet_Update(PyObject *set, PyObject *iterable);

#line 75 "C:\\Users\\freez\\Python310\\include\\setobject.h"

extern __declspec(dllimport) PyTypeObject PySet_Type;
extern __declspec(dllimport) PyTypeObject PyFrozenSet_Type;
extern __declspec(dllimport) PyTypeObject PySetIter_Type;

__declspec(dllimport) PyObject * PySet_New(PyObject *);
__declspec(dllimport) PyObject * PyFrozenSet_New(PyObject *);

__declspec(dllimport) int PySet_Add(PyObject *set, PyObject *key);
__declspec(dllimport) int PySet_Clear(PyObject *set);
__declspec(dllimport) int PySet_Contains(PyObject *anyset, PyObject *key);
__declspec(dllimport) int PySet_Discard(PyObject *set, PyObject *key);
__declspec(dllimport) PyObject * PySet_Pop(PyObject *set);
__declspec(dllimport) Py_ssize_t PySet_Size(PyObject *anyset);





















#line 111 "C:\\Users\\freez\\Python310\\include\\setobject.h"
#line 97 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\methodobject.h"













extern __declspec(dllimport) PyTypeObject PyCFunction_Type;




typedef PyObject *(*PyCFunction)(PyObject *, PyObject *);
typedef PyObject *(*_PyCFunctionFast) (PyObject *, PyObject *const *, Py_ssize_t);
typedef PyObject *(*PyCFunctionWithKeywords)(PyObject *, PyObject *,
                                             PyObject *);
typedef PyObject *(*_PyCFunctionFastWithKeywords) (PyObject *,
                                                   PyObject *const *, Py_ssize_t,
                                                   PyObject *);
typedef PyObject *(*PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *,
                               size_t, PyObject *);

__declspec(dllimport) PyCFunction PyCFunction_GetFunction(PyObject *);
__declspec(dllimport) PyObject * PyCFunction_GetSelf(PyObject *);
__declspec(dllimport) int PyCFunction_GetFlags(PyObject *);

__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) PyObject * PyCFunction_Call(PyObject *, PyObject *, PyObject *);

struct PyMethodDef {
    const char  *ml_name;   
    PyCFunction ml_meth;    
    int         ml_flags;   

    const char  *ml_doc;    
};
typedef struct PyMethodDef PyMethodDef;




__declspec(dllimport) PyObject * PyCFunction_New(PyMethodDef *, PyObject *);



__declspec(dllimport) PyObject * PyCFunction_NewEx(PyMethodDef *, PyObject *,
                                         PyObject *);



__declspec(dllimport) PyObject * PyCMethod_New(PyMethodDef *, PyObject *,
                                     PyObject *, PyTypeObject *);
#line 59 "C:\\Users\\freez\\Python310\\include\\methodobject.h"

























#line 85 "C:\\Users\\freez\\Python310\\include\\methodobject.h"






#line 92 "C:\\Users\\freez\\Python310\\include\\methodobject.h"










#line 103 "C:\\Users\\freez\\Python310\\include\\methodobject.h"





#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/methodobject.h"




extern __declspec(dllimport) PyTypeObject PyCMethod_Type;

















typedef struct {
    PyObject ob_base;
    PyMethodDef *m_ml; 
    PyObject    *m_self; 
    PyObject    *m_module; 
    PyObject    *m_weakreflist; 
    vectorcallfunc vectorcall;
} PyCFunctionObject;

typedef struct {
    PyCFunctionObject func;
    PyTypeObject *mm_class; 
} PyCMethodObject;
#line 109 "C:\\Users\\freez\\Python310\\include\\methodobject.h"


#line 112 "C:\\Users\\freez\\Python310\\include\\methodobject.h"




#line 117 "C:\\Users\\freez\\Python310\\include\\methodobject.h"
#line 98 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"









extern __declspec(dllimport) PyTypeObject PyModule_Type;





__declspec(dllimport) PyObject * PyModule_NewObject(
    PyObject *name
    );
#line 20 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"
__declspec(dllimport) PyObject * PyModule_New(
    const char *name            
    );
__declspec(dllimport) PyObject * PyModule_GetDict(PyObject *);

__declspec(dllimport) PyObject * PyModule_GetNameObject(PyObject *);
#line 27 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"
__declspec(dllimport) const char * PyModule_GetName(PyObject *);
__declspec(deprecated( "deprecated in " "3.2")) __declspec(dllimport) const char * PyModule_GetFilename(PyObject *);
__declspec(dllimport) PyObject * PyModule_GetFilenameObject(PyObject *);

__declspec(dllimport) void _PyModule_Clear(PyObject *);
__declspec(dllimport) void _PyModule_ClearDict(PyObject *);
__declspec(dllimport) int _PyModuleSpec_IsInitializing(PyObject *);
#line 35 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"
__declspec(dllimport) struct PyModuleDef* PyModule_GetDef(PyObject*);
__declspec(dllimport) void* PyModule_GetState(PyObject*);



__declspec(dllimport) PyObject * PyModuleDef_Init(struct PyModuleDef*);
extern __declspec(dllimport) PyTypeObject PyModuleDef_Type;
#line 43 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"

typedef struct PyModuleDef_Base {
  PyObject ob_base;
  PyObject* (*m_init)(void);
  Py_ssize_t m_index;
  PyObject* m_copy;
} PyModuleDef_Base;








struct PyModuleDef_Slot;


typedef struct PyModuleDef_Slot{
    int slot;
    void *value;
} PyModuleDef_Slot;






#line 72 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"

#line 74 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"

typedef struct PyModuleDef{
  PyModuleDef_Base m_base;
  const char* m_name;
  const char* m_doc;
  Py_ssize_t m_size;
  PyMethodDef *m_methods;
  struct PyModuleDef_Slot* m_slots;
  traverseproc m_traverse;
  inquiry m_clear;
  freefunc m_free;
} PyModuleDef;










#line 97 "C:\\Users\\freez\\Python310\\include\\moduleobject.h"
#line 99 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\funcobject.h"




















typedef struct {
    PyObject *fc_globals; PyObject *fc_builtins; PyObject *fc_name; PyObject *fc_qualname; PyObject *fc_code; PyObject *fc_defaults; PyObject *fc_kwdefaults; PyObject *fc_closure;
} PyFrameConstructor;












typedef struct {
    PyObject ob_base;
    PyObject *func_globals; PyObject *func_builtins; PyObject *func_name; PyObject *func_qualname; PyObject *func_code; PyObject *func_defaults; PyObject *func_kwdefaults; PyObject *func_closure;
    PyObject *func_doc;         
    PyObject *func_dict;        
    PyObject *func_weakreflist; 
    PyObject *func_module;      
    PyObject *func_annotations; 
    vectorcallfunc vectorcall;

    




} PyFunctionObject;

extern __declspec(dllimport) PyTypeObject PyFunction_Type;



__declspec(dllimport) PyObject * PyFunction_New(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyFunction_NewWithQualName(PyObject *, PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetCode(PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetGlobals(PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetModule(PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetDefaults(PyObject *);
__declspec(dllimport) int PyFunction_SetDefaults(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetKwDefaults(PyObject *);
__declspec(dllimport) int PyFunction_SetKwDefaults(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetClosure(PyObject *);
__declspec(dllimport) int PyFunction_SetClosure(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyFunction_GetAnnotations(PyObject *);
__declspec(dllimport) int PyFunction_SetAnnotations(PyObject *, PyObject *);


__declspec(dllimport) PyObject * _PyFunction_Vectorcall(
    PyObject *func,
    PyObject *const *stack,
    size_t nargsf,
    PyObject *kwnames);
#line 78 "C:\\Users\\freez\\Python310\\include\\funcobject.h"






















extern __declspec(dllimport) PyTypeObject PyClassMethod_Type;
extern __declspec(dllimport) PyTypeObject PyStaticMethod_Type;

__declspec(dllimport) PyObject * PyClassMethod_New(PyObject *);
__declspec(dllimport) PyObject * PyStaticMethod_New(PyObject *);




#line 110 "C:\\Users\\freez\\Python310\\include\\funcobject.h"
#line 111 "C:\\Users\\freez\\Python310\\include\\funcobject.h"
#line 100 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\classobject.h"











typedef struct {
    PyObject ob_base;
    PyObject *im_func;   
    PyObject *im_self;   
    PyObject *im_weakreflist; 
    vectorcallfunc vectorcall;
} PyMethodObject;

extern __declspec(dllimport) PyTypeObject PyMethod_Type;



__declspec(dllimport) PyObject * PyMethod_New(PyObject *, PyObject *);

__declspec(dllimport) PyObject * PyMethod_Function(PyObject *);
__declspec(dllimport) PyObject * PyMethod_Self(PyObject *);








typedef struct {
    PyObject ob_base;
    PyObject *func;
} PyInstanceMethodObject;

extern __declspec(dllimport) PyTypeObject PyInstanceMethod_Type;



__declspec(dllimport) PyObject * PyInstanceMethod_New(PyObject *);
__declspec(dllimport) PyObject * PyInstanceMethod_Function(PyObject *);









#line 57 "C:\\Users\\freez\\Python310\\include\\classobject.h"
#line 58 "C:\\Users\\freez\\Python310\\include\\classobject.h"
#line 101 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\fileobject.h"










__declspec(dllimport) PyObject * PyFile_FromFd(int, const char *, const char *, int,
                                     const char *, const char *,
                                     const char *, int);
__declspec(dllimport) PyObject * PyFile_GetLine(PyObject *, int);
__declspec(dllimport) int PyFile_WriteObject(PyObject *, PyObject *, int);
__declspec(dllimport) int PyFile_WriteString(const char *, PyObject *);
__declspec(dllimport) int PyObject_AsFileDescriptor(PyObject *);




extern __declspec(dllimport) const char * Py_FileSystemDefaultEncoding;

extern __declspec(dllimport) const char * Py_FileSystemDefaultEncodeErrors;
#line 26 "C:\\Users\\freez\\Python310\\include\\fileobject.h"
extern __declspec(dllimport) int Py_HasFileSystemDefaultEncoding;


extern __declspec(dllimport) int Py_UTF8Mode;
#line 31 "C:\\Users\\freez\\Python310\\include\\fileobject.h"



    
    


#line 39 "C:\\Users\\freez\\Python310\\include\\fileobject.h"



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/fileobject.h"




__declspec(dllimport) char * Py_UniversalNewlineFgets(char *, int, FILE*, PyObject *);



__declspec(dllimport) PyObject * PyFile_NewStdPrinter(int);
extern __declspec(dllimport) PyTypeObject PyStdPrinter_Type;

typedef PyObject * (*Py_OpenCodeHookFunction)(PyObject *, void *);

__declspec(dllimport) PyObject * PyFile_OpenCode(const char *utf8path);
__declspec(dllimport) PyObject * PyFile_OpenCodeObject(PyObject *path);
__declspec(dllimport) int PyFile_SetOpenCodeHook(Py_OpenCodeHookFunction hook, void *userData);

__declspec(dllimport) int _PyLong_FileDescriptor_Converter(PyObject *, void *);
#line 43 "C:\\Users\\freez\\Python310\\include\\fileobject.h"

#line 45 "C:\\Users\\freez\\Python310\\include\\fileobject.h"




#line 50 "C:\\Users\\freez\\Python310\\include\\fileobject.h"
#line 102 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pycapsule.h"




















extern __declspec(dllimport) PyTypeObject PyCapsule_Type;

typedef void (*PyCapsule_Destructor)(PyObject *);




__declspec(dllimport) PyObject * PyCapsule_New(
    void *pointer,
    const char *name,
    PyCapsule_Destructor destructor);

__declspec(dllimport) void * PyCapsule_GetPointer(PyObject *capsule, const char *name);

__declspec(dllimport) PyCapsule_Destructor PyCapsule_GetDestructor(PyObject *capsule);

__declspec(dllimport) const char * PyCapsule_GetName(PyObject *capsule);

__declspec(dllimport) void * PyCapsule_GetContext(PyObject *capsule);

__declspec(dllimport) int PyCapsule_IsValid(PyObject *capsule, const char *name);

__declspec(dllimport) int PyCapsule_SetPointer(PyObject *capsule, void *pointer);

__declspec(dllimport) int PyCapsule_SetDestructor(PyObject *capsule, PyCapsule_Destructor destructor);

__declspec(dllimport) int PyCapsule_SetName(PyObject *capsule, const char *name);

__declspec(dllimport) int PyCapsule_SetContext(PyObject *capsule, void *context);

__declspec(dllimport) void * PyCapsule_Import(
    const char *name,           
    int no_block);





#line 60 "C:\\Users\\freez\\Python310\\include\\pycapsule.h"
#line 103 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\code.h"








typedef struct PyCodeObject PyCodeObject;



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/code.h"




typedef uint16_t _Py_CODEUNIT;







#line 14 "C:\\Users\\freez\\Python310\\include\\cpython/code.h"

typedef struct _PyOpcache _PyOpcache;


struct PyCodeObject {
    PyObject ob_base;
    int co_argcount;            
    int co_posonlyargcount;     
    int co_kwonlyargcount;      
    int co_nlocals;             
    int co_stacksize;           
    int co_flags;               
    int co_firstlineno;         
    PyObject *co_code;          
    PyObject *co_consts;        
    PyObject *co_names;         
    PyObject *co_varnames;      
    PyObject *co_freevars;      
    PyObject *co_cellvars;      
    




    Py_ssize_t *co_cell2arg;    
    PyObject *co_filename;      
    PyObject *co_name;          
    PyObject *co_linetable;     

    void *co_zombieframe;       
    PyObject *co_weakreflist;   
    


    void *co_extra;

    






    
    
    
    unsigned char *co_opcache_map;
    _PyOpcache *co_opcache;
    int co_opcache_flag;  
    unsigned char co_opcache_size;  
};














































extern __declspec(dllimport) PyTypeObject PyCode_Type;





__declspec(dllimport) PyCodeObject * PyCode_New(
        int, int, int, int, int, PyObject *, PyObject *,
        PyObject *, PyObject *, PyObject *, PyObject *,
        PyObject *, PyObject *, int, PyObject *);

__declspec(dllimport) PyCodeObject * PyCode_NewWithPosOnlyArgs(
        int, int, int, int, int, int, PyObject *, PyObject *,
        PyObject *, PyObject *, PyObject *, PyObject *,
        PyObject *, PyObject *, int, PyObject *);
        


__declspec(dllimport) PyCodeObject *
PyCode_NewEmpty(const char *filename, const char *funcname, int firstlineno);




__declspec(dllimport) int PyCode_Addr2Line(PyCodeObject *, int);


struct _opaque {
    int computed_line;
    const char *lo_next;
    const char *limit;
};

typedef struct _line_offsets {
    int ar_start;
    int ar_end;
    int ar_line;
    struct _opaque opaque;
} PyCodeAddressRange;




__declspec(dllimport) int _PyCode_CheckLineNumber(int lasti, PyCodeAddressRange *bounds);








__declspec(dllimport) PyObject* _PyCode_ConstantKey(PyObject *obj);

__declspec(dllimport) PyObject* PyCode_Optimize(PyObject *code, PyObject* consts,
                                      PyObject *names, PyObject *lnotab);


__declspec(dllimport) int _PyCode_GetExtra(PyObject *code, Py_ssize_t index,
                                 void **extra);
__declspec(dllimport) int _PyCode_SetExtra(PyObject *code, Py_ssize_t index,
                                 void *extra);


int _PyCode_InitAddressRange(PyCodeObject* co, PyCodeAddressRange *bounds);


void PyLineTable_InitAddressRange(const char *linetable, Py_ssize_t length, int firstlineno, PyCodeAddressRange *range);


int PyLineTable_NextAddressRange(PyCodeAddressRange *range);
int PyLineTable_PreviousAddressRange(PyCodeAddressRange *range);


#line 14 "C:\\Users\\freez\\Python310\\include\\code.h"

#line 16 "C:\\Users\\freez\\Python310\\include\\code.h"




#line 21 "C:\\Users\\freez\\Python310\\include\\code.h"
#line 104 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pyframe.h"











typedef struct _frame PyFrameObject;


__declspec(dllimport) int PyFrame_GetLineNumber(PyFrameObject *);

__declspec(dllimport) PyCodeObject * PyFrame_GetCode(PyFrameObject *frame);




#line 23 "C:\\Users\\freez\\Python310\\include\\pyframe.h"
#line 105 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\traceback.h"








__declspec(dllimport) int PyTraceBack_Here(PyFrameObject *);
__declspec(dllimport) int PyTraceBack_Print(PyObject *, PyObject *);


extern __declspec(dllimport) PyTypeObject PyTraceBack_Type;





#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/traceback.h"




typedef struct _traceback {
    PyObject ob_base;
    struct _traceback *tb_next;
    PyFrameObject *tb_frame;
    int tb_lasti;
    int tb_lineno;
} PyTracebackObject;

__declspec(dllimport) int _Py_DisplaySourceLine(PyObject *, PyObject *, int, int);
__declspec(dllimport) void _PyTraceback_Add(const char *, const char *, int);
#line 20 "C:\\Users\\freez\\Python310\\include\\traceback.h"

#line 22 "C:\\Users\\freez\\Python310\\include\\traceback.h"




#line 27 "C:\\Users\\freez\\Python310\\include\\traceback.h"
#line 106 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\sliceobject.h"








extern __declspec(dllimport) PyObject _Py_EllipsisObject; 












typedef struct {
    PyObject ob_base;
    PyObject *start, *stop, *step;      
} PySliceObject;
#line 27 "C:\\Users\\freez\\Python310\\include\\sliceobject.h"

extern __declspec(dllimport) PyTypeObject PySlice_Type;
extern __declspec(dllimport) PyTypeObject PyEllipsis_Type;



__declspec(dllimport) PyObject * PySlice_New(PyObject* start, PyObject* stop,
                                  PyObject* step);

__declspec(dllimport) PyObject * _PySlice_FromIndices(Py_ssize_t start, Py_ssize_t stop);
__declspec(dllimport) int _PySlice_GetLongIndices(PySliceObject *self, PyObject *length,
                                 PyObject **start_ptr, PyObject **stop_ptr,
                                 PyObject **step_ptr);
#line 41 "C:\\Users\\freez\\Python310\\include\\sliceobject.h"
__declspec(dllimport) int PySlice_GetIndices(PyObject *r, Py_ssize_t length,
                                  Py_ssize_t *start, Py_ssize_t *stop, Py_ssize_t *step);
__declspec(deprecated( "deprecated in " "3.7"))
__declspec(dllimport) int PySlice_GetIndicesEx(PyObject *r, Py_ssize_t length,
                                     Py_ssize_t *start, Py_ssize_t *stop,
                                     Py_ssize_t *step,
                                     Py_ssize_t *slicelength);







__declspec(dllimport) int PySlice_Unpack(PyObject *slice,
                               Py_ssize_t *start, Py_ssize_t *stop, Py_ssize_t *step);
__declspec(dllimport) Py_ssize_t PySlice_AdjustIndices(Py_ssize_t length,
                                             Py_ssize_t *start, Py_ssize_t *stop,
                                             Py_ssize_t step);
#line 61 "C:\\Users\\freez\\Python310\\include\\sliceobject.h"




#line 66 "C:\\Users\\freez\\Python310\\include\\sliceobject.h"
#line 107 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cellobject.h"








typedef struct {
    PyObject ob_base;
    PyObject *ob_ref;       
} PyCellObject;

extern __declspec(dllimport) PyTypeObject PyCell_Type;



__declspec(dllimport) PyObject * PyCell_New(PyObject *);
__declspec(dllimport) PyObject * PyCell_Get(PyObject *);
__declspec(dllimport) int PyCell_Set(PyObject *, PyObject *);







#line 29 "C:\\Users\\freez\\Python310\\include\\cellobject.h"
#line 30 "C:\\Users\\freez\\Python310\\include\\cellobject.h"
#line 108 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\iterobject.h"







extern __declspec(dllimport) PyTypeObject PySeqIter_Type;
extern __declspec(dllimport) PyTypeObject PyCallIter_Type;






__declspec(dllimport) PyObject * PySeqIter_New(PyObject *);




__declspec(dllimport) PyObject * PyCallIter_New(PyObject *, PyObject *);




#line 27 "C:\\Users\\freez\\Python310\\include\\iterobject.h"

#line 109 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/initconfig.h"









typedef struct {
    enum {
        _PyStatus_TYPE_OK=0,
        _PyStatus_TYPE_ERROR=1,
        _PyStatus_TYPE_EXIT=2
    } _type;
    const char *func;
    const char *err_msg;
    int exitcode;
} PyStatus;

__declspec(dllimport) PyStatus PyStatus_Ok(void);
__declspec(dllimport) PyStatus PyStatus_Error(const char *err_msg);
__declspec(dllimport) PyStatus PyStatus_NoMemory(void);
__declspec(dllimport) PyStatus PyStatus_Exit(int exitcode);
__declspec(dllimport) int PyStatus_IsError(PyStatus err);
__declspec(dllimport) int PyStatus_IsExit(PyStatus err);
__declspec(dllimport) int PyStatus_Exception(PyStatus err);



typedef struct {
    

    Py_ssize_t length;
    wchar_t **items;
} PyWideStringList;

__declspec(dllimport) PyStatus PyWideStringList_Append(PyWideStringList *list,
    const wchar_t *item);
__declspec(dllimport) PyStatus PyWideStringList_Insert(PyWideStringList *list,
    Py_ssize_t index,
    const wchar_t *item);




typedef struct PyPreConfig {
    int _config_init;     

    

    int parse_argv;

    




    int isolated;

    


    int use_environment;

    

    int configure_locale;

    










    int coerce_c_locale;

    





    int coerce_c_locale_warn;


    







    int legacy_windows_fs_encoding;
#line 102 "C:\\Users\\freez\\Python310\\include\\cpython/initconfig.h"

    










    int utf8_mode;

    



    int dev_mode;

    

    int allocator;
} PyPreConfig;

__declspec(dllimport) void PyPreConfig_InitPythonConfig(PyPreConfig *config);
__declspec(dllimport) void PyPreConfig_InitIsolatedConfig(PyPreConfig *config);





typedef struct PyConfig {
    int _config_init;     

    int isolated;
    int use_environment;
    int dev_mode;
    int install_signal_handlers;
    int use_hash_seed;
    unsigned long hash_seed;
    int faulthandler;
    int tracemalloc;
    int import_time;
    int show_ref_count;
    int dump_refs;
    int malloc_stats;
    wchar_t *filesystem_encoding;
    wchar_t *filesystem_errors;
    wchar_t *pycache_prefix;
    int parse_argv;
    PyWideStringList orig_argv;
    PyWideStringList argv;
    PyWideStringList xoptions;
    PyWideStringList warnoptions;
    int site_import;
    int bytes_warning;
    int warn_default_encoding;
    int inspect;
    int interactive;
    int optimization_level;
    int parser_debug;
    int write_bytecode;
    int verbose;
    int quiet;
    int user_site_directory;
    int configure_c_stdio;
    int buffered_stdio;
    wchar_t *stdio_encoding;
    wchar_t *stdio_errors;

    int legacy_windows_stdio;
#line 175 "C:\\Users\\freez\\Python310\\include\\cpython/initconfig.h"
    wchar_t *check_hash_pycs_mode;

    
    int pathconfig_warnings;
    wchar_t *program_name;
    wchar_t *pythonpath_env;
    wchar_t *home;
    wchar_t *platlibdir;

    
    int module_search_paths_set;
    PyWideStringList module_search_paths;
    wchar_t *executable;
    wchar_t *base_executable;
    wchar_t *prefix;
    wchar_t *base_prefix;
    wchar_t *exec_prefix;
    wchar_t *base_exec_prefix;

    
    int skip_source_first_line;
    wchar_t *run_command;
    wchar_t *run_module;
    wchar_t *run_filename;

    

    
    
    int _install_importlib;

    
    int _init_main;

    
    
    int _isolated_interpreter;
} PyConfig;

__declspec(dllimport) void PyConfig_InitPythonConfig(PyConfig *config);
__declspec(dllimport) void PyConfig_InitIsolatedConfig(PyConfig *config);
__declspec(dllimport) void PyConfig_Clear(PyConfig *);
__declspec(dllimport) PyStatus PyConfig_SetString(
    PyConfig *config,
    wchar_t **config_str,
    const wchar_t *str);
__declspec(dllimport) PyStatus PyConfig_SetBytesString(
    PyConfig *config,
    wchar_t **config_str,
    const char *str);
__declspec(dllimport) PyStatus PyConfig_Read(PyConfig *config);
__declspec(dllimport) PyStatus PyConfig_SetBytesArgv(
    PyConfig *config,
    Py_ssize_t argc,
    char * const *argv);
__declspec(dllimport) PyStatus PyConfig_SetArgv(PyConfig *config,
    Py_ssize_t argc,
    wchar_t * const *argv);
__declspec(dllimport) PyStatus PyConfig_SetWideStringList(PyConfig *config,
    PyWideStringList *list,
    Py_ssize_t length, wchar_t **items);







__declspec(dllimport) void Py_GetArgcArgv(int *argc, wchar_t ***argv);




#line 249 "C:\\Users\\freez\\Python310\\include\\cpython/initconfig.h"
#line 250 "C:\\Users\\freez\\Python310\\include\\cpython/initconfig.h"
#line 110 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\genobject.h"










#line 1 "C:\\Users\\freez\\Python310\\include\\pystate.h"















struct _ts;
struct _is;


typedef struct _ts PyThreadState;

typedef struct _is PyInterpreterState;

__declspec(dllimport) PyInterpreterState * PyInterpreterState_New(void);
__declspec(dllimport) void PyInterpreterState_Clear(PyInterpreterState *);
__declspec(dllimport) void PyInterpreterState_Delete(PyInterpreterState *);









__declspec(dllimport) PyInterpreterState * PyInterpreterState_Get(void);
#line 38 "C:\\Users\\freez\\Python310\\include\\pystate.h"



__declspec(dllimport) PyObject * PyInterpreterState_GetDict(PyInterpreterState *);
#line 43 "C:\\Users\\freez\\Python310\\include\\pystate.h"



__declspec(dllimport) int64_t PyInterpreterState_GetID(PyInterpreterState *);
#line 48 "C:\\Users\\freez\\Python310\\include\\pystate.h"





__declspec(dllimport) int PyState_AddModule(PyObject*, struct PyModuleDef*);
__declspec(dllimport) int PyState_RemoveModule(struct PyModuleDef*);
#line 56 "C:\\Users\\freez\\Python310\\include\\pystate.h"
__declspec(dllimport) PyObject* PyState_FindModule(struct PyModuleDef*);

__declspec(dllimport) PyThreadState * PyThreadState_New(PyInterpreterState *);
__declspec(dllimport) void PyThreadState_Clear(PyThreadState *);
__declspec(dllimport) void PyThreadState_Delete(PyThreadState *);









__declspec(dllimport) PyThreadState * PyThreadState_Get(void);












__declspec(dllimport) PyThreadState * PyThreadState_Swap(PyThreadState *);
__declspec(dllimport) PyObject * PyThreadState_GetDict(void);
__declspec(dllimport) int PyThreadState_SetAsyncExc(unsigned long, PyObject *);



__declspec(dllimport) PyInterpreterState* PyThreadState_GetInterpreter(PyThreadState *tstate);
__declspec(dllimport) PyFrameObject* PyThreadState_GetFrame(PyThreadState *tstate);
__declspec(dllimport) uint64_t PyThreadState_GetID(PyThreadState *tstate);
#line 93 "C:\\Users\\freez\\Python310\\include\\pystate.h"

typedef
    enum {PyGILState_LOCKED, PyGILState_UNLOCKED}
        PyGILState_STATE;























__declspec(dllimport) PyGILState_STATE PyGILState_Ensure(void);









__declspec(dllimport) void PyGILState_Release(PyGILState_STATE);







__declspec(dllimport) PyThreadState * PyGILState_GetThisThreadState(void);




#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pystate.h"




__declspec(dllimport) int _PyInterpreterState_RequiresIDRef(PyInterpreterState *);
__declspec(dllimport) void _PyInterpreterState_RequireIDRef(PyInterpreterState *, int);

__declspec(dllimport) PyObject * _PyInterpreterState_GetMainModule(PyInterpreterState *);




typedef int (*Py_tracefunc)(PyObject *, PyFrameObject *, int, PyObject *);
















typedef struct _cframe {
    









    int use_tracing;
    struct _cframe *previous;
} CFrame;

typedef struct _err_stackitem {
    





    PyObject *exc_type, *exc_value, *exc_traceback;

    struct _err_stackitem *previous_item;

} _PyErr_StackItem;



struct _ts {
    

    struct _ts *prev;
    struct _ts *next;
    PyInterpreterState *interp;

    
    PyFrameObject *frame;
    int recursion_depth;
    int recursion_headroom; 
    int stackcheck_counter;

    


    int tracing;

    

    CFrame *cframe;

    Py_tracefunc c_profilefunc;
    Py_tracefunc c_tracefunc;
    PyObject *c_profileobj;
    PyObject *c_traceobj;

    
    PyObject *curexc_type;
    PyObject *curexc_value;
    PyObject *curexc_traceback;

    


    _PyErr_StackItem exc_state;

    

    _PyErr_StackItem *exc_info;

    PyObject *dict;  

    int gilstate_counter;

    PyObject *async_exc; 
    unsigned long thread_id; 

    int trash_delete_nesting;
    PyObject *trash_delete_later;

    






















    void (*on_delete)(void *);
    void *on_delete_data;

    int coroutine_origin_tracking_depth;

    PyObject *async_gen_firstiter;
    PyObject *async_gen_finalizer;

    PyObject *context;
    uint64_t context_ver;

    
    uint64_t id;

    CFrame root_cframe;

    

};




__declspec(dllimport) PyThreadState * _PyThreadState_Prealloc(PyInterpreterState *);



__declspec(dllimport) PyThreadState * _PyThreadState_UncheckedGet(void);

__declspec(dllimport) PyObject * _PyThreadState_GetDict(PyThreadState *tstate);







__declspec(dllimport) int PyGILState_Check(void);








__declspec(dllimport) PyInterpreterState * _PyGILState_GetInterpreterStateUnsafe(void);




__declspec(dllimport) PyObject * _PyThread_CurrentFrames(void);




__declspec(dllimport) PyObject * _PyThread_CurrentExceptions(void);



__declspec(dllimport) PyInterpreterState * PyInterpreterState_Main(void);
__declspec(dllimport) PyInterpreterState * PyInterpreterState_Head(void);
__declspec(dllimport) PyInterpreterState * PyInterpreterState_Next(PyInterpreterState *);
__declspec(dllimport) PyThreadState * PyInterpreterState_ThreadHead(PyInterpreterState *);
__declspec(dllimport) PyThreadState * PyThreadState_Next(PyThreadState *);
__declspec(dllimport) void PyThreadState_DeleteCurrent(void);



typedef PyObject* (*_PyFrameEvalFunction)(PyThreadState *tstate, PyFrameObject *, int);

__declspec(dllimport) _PyFrameEvalFunction _PyInterpreterState_GetEvalFrameFunc(
    PyInterpreterState *interp);
__declspec(dllimport) void _PyInterpreterState_SetEvalFrameFunc(
    PyInterpreterState *interp,
    _PyFrameEvalFunction eval_frame);

__declspec(dllimport) const PyConfig* _PyInterpreterState_GetConfig(PyInterpreterState *interp);










__declspec(dllimport) int _PyInterpreterState_GetConfigCopy(
    struct PyConfig *config);
















__declspec(dllimport) int _PyInterpreterState_SetConfig(
    const struct PyConfig *config);



__declspec(dllimport) const PyConfig* _Py_GetConfig(void);




struct _xid;




typedef struct _xid {
    
    
    
    void *data;
    
    
    
    
    
    
    PyObject *obj;
    
    
    
    
    
    
    
    
    
    int64_t interp;
    
    
    
    
    PyObject *(*new_object)(struct _xid *);
    
    
    
    
    
    
    
    
    
    void (*free)(void *);
} _PyCrossInterpreterData;

__declspec(dllimport) int _PyObject_GetCrossInterpreterData(PyObject *, _PyCrossInterpreterData *);
__declspec(dllimport) PyObject * _PyCrossInterpreterData_NewObject(_PyCrossInterpreterData *);
__declspec(dllimport) void _PyCrossInterpreterData_Release(_PyCrossInterpreterData *);

__declspec(dllimport) int _PyObject_CheckCrossInterpreterData(PyObject *);



typedef int (*crossinterpdatafunc)(PyObject *, struct _xid *);

__declspec(dllimport) int _PyCrossInterpreterData_RegisterClass(PyTypeObject *, crossinterpdatafunc);
__declspec(dllimport) crossinterpdatafunc _PyCrossInterpreterData_Lookup(PyObject *);
#line 144 "C:\\Users\\freez\\Python310\\include\\pystate.h"

#line 146 "C:\\Users\\freez\\Python310\\include\\pystate.h"




#line 151 "C:\\Users\\freez\\Python310\\include\\pystate.h"
#line 12 "C:\\Users\\freez\\Python310\\include\\genobject.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\abstract.h"












































































































































#line 142 "C:\\Users\\freez\\Python310\\include\\abstract.h"




__declspec(dllimport) PyObject * PyObject_CallNoArgs(PyObject *func);
#line 148 "C:\\Users\\freez\\Python310\\include\\abstract.h"










__declspec(dllimport) PyObject * PyObject_Call(PyObject *callable,
                                     PyObject *args, PyObject *kwargs);









__declspec(dllimport) PyObject * PyObject_CallObject(PyObject *callable,
                                           PyObject *args);











__declspec(dllimport) PyObject * _PyObject_CallFunction_SizeT(PyObject *callable,
                                             const char *format, ...);










__declspec(dllimport) PyObject * _PyObject_CallMethod_SizeT(PyObject *obj,
                                           const char *name,
                                           const char *format, ...);

__declspec(dllimport) PyObject * _PyObject_CallFunction_SizeT(PyObject *callable,
                                                    const char *format,
                                                    ...);

__declspec(dllimport) PyObject * _PyObject_CallMethod_SizeT(PyObject *obj,
                                                  const char *name,
                                                  const char *format,
                                                  ...);









__declspec(dllimport) PyObject * PyObject_CallFunctionObjArgs(PyObject *callable,
                                                    ...);









__declspec(dllimport) PyObject * PyObject_CallMethodObjArgs(
    PyObject *obj,
    PyObject *name,
    ...);






































__declspec(dllimport) PyObject * PyObject_Type(PyObject *o);








__declspec(dllimport) Py_ssize_t PyObject_Size(PyObject *o);




__declspec(dllimport) Py_ssize_t PyObject_Length(PyObject *o);






__declspec(dllimport) PyObject * PyObject_GetItem(PyObject *o, PyObject *key);







__declspec(dllimport) int PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v);





__declspec(dllimport) int PyObject_DelItemString(PyObject *o, const char *key);





__declspec(dllimport) int PyObject_DelItem(PyObject *o, PyObject *key);















__declspec(deprecated( "deprecated in " "3.0"))
__declspec(dllimport) int PyObject_AsCharBuffer(PyObject *obj,
                                      const char **buffer,
                                      Py_ssize_t *buffer_len);





__declspec(deprecated( "deprecated in " "3.0")) __declspec(dllimport) int PyObject_CheckReadBuffer(PyObject *obj);







__declspec(deprecated( "deprecated in " "3.0"))
__declspec(dllimport) int PyObject_AsReadBuffer(PyObject *obj,
                                      const void **buffer,
                                      Py_ssize_t *buffer_len);







__declspec(deprecated( "deprecated in " "3.0"))
__declspec(dllimport) int PyObject_AsWriteBuffer(PyObject *obj,
                                       void **buffer,
                                       Py_ssize_t *buffer_len);






__declspec(dllimport) PyObject * PyObject_Format(PyObject *obj,
                                       PyObject *format_spec);







__declspec(dllimport) PyObject * PyObject_GetIter(PyObject *);




__declspec(dllimport) PyObject * PyObject_GetAIter(PyObject *);




__declspec(dllimport) int PyIter_Check(PyObject *);




__declspec(dllimport) int PyAIter_Check(PyObject *);








__declspec(dllimport) PyObject * PyIter_Next(PyObject *);











__declspec(dllimport) PySendResult PyIter_Send(PyObject *, PyObject *, PyObject **);
#line 410 "C:\\Users\\freez\\Python310\\include\\abstract.h"







__declspec(dllimport) int PyNumber_Check(PyObject *o);




__declspec(dllimport) PyObject * PyNumber_Add(PyObject *o1, PyObject *o2);




__declspec(dllimport) PyObject * PyNumber_Subtract(PyObject *o1, PyObject *o2);




__declspec(dllimport) PyObject * PyNumber_Multiply(PyObject *o1, PyObject *o2);



__declspec(dllimport) PyObject * PyNumber_MatrixMultiply(PyObject *o1, PyObject *o2);
#line 438 "C:\\Users\\freez\\Python310\\include\\abstract.h"





__declspec(dllimport) PyObject * PyNumber_FloorDivide(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_TrueDivide(PyObject *o1, PyObject *o2);




__declspec(dllimport) PyObject * PyNumber_Remainder(PyObject *o1, PyObject *o2);






__declspec(dllimport) PyObject * PyNumber_Divmod(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_Power(PyObject *o1, PyObject *o2,
                                      PyObject *o3);




__declspec(dllimport) PyObject * PyNumber_Negative(PyObject *o);




__declspec(dllimport) PyObject * PyNumber_Positive(PyObject *o);




__declspec(dllimport) PyObject * PyNumber_Absolute(PyObject *o);




__declspec(dllimport) PyObject * PyNumber_Invert(PyObject *o);




__declspec(dllimport) PyObject * PyNumber_Lshift(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_Rshift(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_And(PyObject *o1, PyObject *o2);




__declspec(dllimport) PyObject * PyNumber_Xor(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_Or(PyObject *o1, PyObject *o2);



__declspec(dllimport) int PyIndex_Check(PyObject *);



__declspec(dllimport) PyObject * PyNumber_Index(PyObject *o);







__declspec(dllimport) Py_ssize_t PyNumber_AsSsize_t(PyObject *o, PyObject *exc);





__declspec(dllimport) PyObject * PyNumber_Long(PyObject *o);





__declspec(dllimport) PyObject * PyNumber_Float(PyObject *o);








__declspec(dllimport) PyObject * PyNumber_InPlaceAdd(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceSubtract(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceMultiply(PyObject *o1, PyObject *o2);



__declspec(dllimport) PyObject * PyNumber_InPlaceMatrixMultiply(PyObject *o1, PyObject *o2);
#line 571 "C:\\Users\\freez\\Python310\\include\\abstract.h"





__declspec(dllimport) PyObject * PyNumber_InPlaceFloorDivide(PyObject *o1,
                                                   PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceTrueDivide(PyObject *o1,
                                                  PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceRemainder(PyObject *o1, PyObject *o2);






__declspec(dllimport) PyObject * PyNumber_InPlacePower(PyObject *o1, PyObject *o2,
                                             PyObject *o3);





__declspec(dllimport) PyObject * PyNumber_InPlaceLshift(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceRshift(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceAnd(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceXor(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_InPlaceOr(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PyNumber_ToBase(PyObject *n, int base);








__declspec(dllimport) int PySequence_Check(PyObject *o);


__declspec(dllimport) Py_ssize_t PySequence_Size(PyObject *o);



__declspec(dllimport) Py_ssize_t PySequence_Length(PyObject *o);






__declspec(dllimport) PyObject * PySequence_Concat(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PySequence_Repeat(PyObject *o, Py_ssize_t count);




__declspec(dllimport) PyObject * PySequence_GetItem(PyObject *o, Py_ssize_t i);




__declspec(dllimport) PyObject * PySequence_GetSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2);





__declspec(dllimport) int PySequence_SetItem(PyObject *o, Py_ssize_t i, PyObject *v);




__declspec(dllimport) int PySequence_DelItem(PyObject *o, Py_ssize_t i);





__declspec(dllimport) int PySequence_SetSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2,
                                    PyObject *v);





__declspec(dllimport) int PySequence_DelSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2);




__declspec(dllimport) PyObject * PySequence_Tuple(PyObject *o);



__declspec(dllimport) PyObject * PySequence_List(PyObject *o);








__declspec(dllimport) PyObject * PySequence_Fast(PyObject *o, const char* m);






















__declspec(dllimport) Py_ssize_t PySequence_Count(PyObject *o, PyObject *value);





__declspec(dllimport) int PySequence_Contains(PyObject *seq, PyObject *ob);







__declspec(dllimport) int PySequence_In(PyObject *o, PyObject *value);









__declspec(dllimport) Py_ssize_t PySequence_Index(PyObject *o, PyObject *value);








__declspec(dllimport) PyObject * PySequence_InPlaceConcat(PyObject *o1, PyObject *o2);





__declspec(dllimport) PyObject * PySequence_InPlaceRepeat(PyObject *o, Py_ssize_t count);







__declspec(dllimport) int PyMapping_Check(PyObject *o);



__declspec(dllimport) Py_ssize_t PyMapping_Size(PyObject *o);



__declspec(dllimport) Py_ssize_t PyMapping_Length(PyObject *o);





























__declspec(dllimport) int PyMapping_HasKeyString(PyObject *o, const char *key);






__declspec(dllimport) int PyMapping_HasKey(PyObject *o, PyObject *key);



__declspec(dllimport) PyObject * PyMapping_Keys(PyObject *o);



__declspec(dllimport) PyObject * PyMapping_Values(PyObject *o);




__declspec(dllimport) PyObject * PyMapping_Items(PyObject *o);




__declspec(dllimport) PyObject * PyMapping_GetItemString(PyObject *o,
                                               const char *key);





__declspec(dllimport) int PyMapping_SetItemString(PyObject *o, const char *key,
                                        PyObject *value);


__declspec(dllimport) int PyObject_IsInstance(PyObject *object, PyObject *typeorclass);


__declspec(dllimport) int PyObject_IsSubclass(PyObject *object, PyObject *typeorclass);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/abstract.h"








#line 10 "C:\\Users\\freez\\Python310\\include\\cpython/abstract.h"











__declspec(dllimport) PyObject * _PyStack_AsDict(
    PyObject *const *values,
    PyObject *kwnames);












__declspec(dllimport) PyObject * _Py_CheckFunctionResult(
    PyThreadState *tstate,
    PyObject *callable,
    PyObject *result,
    const char *where);






__declspec(dllimport) PyObject * _PyObject_MakeTpCall(
    PyThreadState *tstate,
    PyObject *callable,
    PyObject *const *args, Py_ssize_t nargs,
    PyObject *keywords);



static inline Py_ssize_t
PyVectorcall_NARGS(size_t n)
{
    return n & ~((size_t)1 << (8 * sizeof(size_t) - 1));
}

static inline vectorcallfunc
PyVectorcall_Function(PyObject *callable)
{
    PyTypeObject *tp;
    Py_ssize_t offset;
    vectorcallfunc ptr;

    ((void)0);
    tp = (((PyObject*)(callable))->ob_type);
    if (!PyType_HasFeature(tp, (1UL << 11))) {
        return ((void *)0);
    }
    ((void)0);
    offset = tp->tp_vectorcall_offset;
    ((void)0);
    memcpy(&ptr, (char *) callable + offset, sizeof(ptr));
    return ptr;
}



















static inline PyObject *
_PyObject_VectorcallTstate(PyThreadState *tstate, PyObject *callable,
                           PyObject *const *args, size_t nargsf,
                           PyObject *kwnames)
{
    vectorcallfunc func;
    PyObject *res;

    ((void)0);
    ((void)0);

    func = PyVectorcall_Function(callable);
    if (func == ((void *)0)) {
        Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
        return _PyObject_MakeTpCall(tstate, callable, args, nargs, kwnames);
    }
    res = func(callable, args, nargsf, kwnames);
    return _Py_CheckFunctionResult(tstate, callable, res, ((void *)0));
}

static inline PyObject *
PyObject_Vectorcall(PyObject *callable, PyObject *const *args,
                     size_t nargsf, PyObject *kwnames)
{
    PyThreadState *tstate = PyThreadState_Get();
    return _PyObject_VectorcallTstate(tstate, callable,
                                      args, nargsf, kwnames);
}












__declspec(dllimport) PyObject * PyObject_VectorcallDict(
    PyObject *callable,
    PyObject *const *args,
    size_t nargsf,
    PyObject *kwargs);



__declspec(dllimport) PyObject * PyVectorcall_Call(PyObject *callable, PyObject *tuple, PyObject *dict);

static inline PyObject *
_PyObject_FastCallTstate(PyThreadState *tstate, PyObject *func, PyObject *const *args, Py_ssize_t nargs)
{
    return _PyObject_VectorcallTstate(tstate, func, args, (size_t)nargs, ((void *)0));
}


static inline PyObject *
_PyObject_FastCall(PyObject *func, PyObject *const *args, Py_ssize_t nargs)
{
    PyThreadState *tstate = PyThreadState_Get();
    return _PyObject_FastCallTstate(tstate, func, args, nargs);
}




static inline PyObject *
_PyObject_CallNoArg(PyObject *func) {
    PyThreadState *tstate = PyThreadState_Get();
    return _PyObject_VectorcallTstate(tstate, func, ((void *)0), 0, ((void *)0));
}

static inline PyObject *
PyObject_CallOneArg(PyObject *func, PyObject *arg)
{
    PyObject *_args[2];
    PyObject **args;
    PyThreadState *tstate;
    size_t nargsf;

    ((void)0);
    args = _args + 1;  
    args[0] = arg;
    tstate = PyThreadState_Get();
    nargsf = 1 | ((size_t)1 << (8 * sizeof(size_t) - 1));
    return _PyObject_VectorcallTstate(tstate, func, args, nargsf, ((void *)0));
}

__declspec(dllimport) PyObject * PyObject_VectorcallMethod(
    PyObject *name, PyObject *const *args,
    size_t nargsf, PyObject *kwnames);

static inline PyObject *
PyObject_CallMethodNoArgs(PyObject *self, PyObject *name)
{
    return PyObject_VectorcallMethod(name, &self,
           1 | ((size_t)1 << (8 * sizeof(size_t) - 1)), ((void *)0));
}

static inline PyObject *
PyObject_CallMethodOneArg(PyObject *self, PyObject *name, PyObject *arg)
{
    PyObject *args[2] = {self, arg};

    ((void)0);
    return PyObject_VectorcallMethod(name, args,
           2 | ((size_t)1 << (8 * sizeof(size_t) - 1)), ((void *)0));
}



__declspec(dllimport) PyObject * _PyObject_CallMethodId_SizeT(PyObject *obj,
                                              _Py_Identifier *name,
                                              const char *format, ...);

__declspec(dllimport) PyObject * _PyObject_CallMethodId_SizeT(PyObject *obj,
                                                    _Py_Identifier *name,
                                                    const char *format,
                                                    ...);

__declspec(dllimport) PyObject * _PyObject_CallMethodIdObjArgs(
    PyObject *obj,
    struct _Py_Identifier *name,
    ...);

static inline PyObject *
_PyObject_VectorcallMethodId(
    _Py_Identifier *name, PyObject *const *args,
    size_t nargsf, PyObject *kwnames)
{
    PyObject *oname = _PyUnicode_FromId(name); 
    if (!oname) {
        return ((void *)0);
    }
    return PyObject_VectorcallMethod(oname, args, nargsf, kwnames);
}

static inline PyObject *
_PyObject_CallMethodIdNoArgs(PyObject *self, _Py_Identifier *name)
{
    return _PyObject_VectorcallMethodId(name, &self,
           1 | ((size_t)1 << (8 * sizeof(size_t) - 1)), ((void *)0));
}

static inline PyObject *
_PyObject_CallMethodIdOneArg(PyObject *self, _Py_Identifier *name, PyObject *arg)
{
    PyObject *args[2] = {self, arg};

    ((void)0);
    return _PyObject_VectorcallMethodId(name, args,
           2 | ((size_t)1 << (8 * sizeof(size_t) - 1)), ((void *)0));
}

__declspec(dllimport) int _PyObject_HasLen(PyObject *o);




__declspec(dllimport) Py_ssize_t PyObject_LengthHint(PyObject *o, Py_ssize_t);




__declspec(dllimport) int PyObject_CheckBuffer(PyObject *obj);






__declspec(dllimport) int PyObject_GetBuffer(PyObject *obj, Py_buffer *view,
                                   int flags);



__declspec(dllimport) void * PyBuffer_GetPointer(Py_buffer *view, Py_ssize_t *indices);



__declspec(dllimport) Py_ssize_t PyBuffer_SizeFromFormat(const char *format);


__declspec(dllimport) int PyBuffer_ToContiguous(void *buf, Py_buffer *view,
                                      Py_ssize_t len, char order);

__declspec(dllimport) int PyBuffer_FromContiguous(Py_buffer *view, void *buf,
                                        Py_ssize_t len, char order);














__declspec(dllimport) int PyObject_CopyData(PyObject *dest, PyObject *src);


__declspec(dllimport) int PyBuffer_IsContiguous(const Py_buffer *view, char fort);





__declspec(dllimport) void PyBuffer_FillContiguousStrides(int ndims,
                                               Py_ssize_t *shape,
                                               Py_ssize_t *strides,
                                               int itemsize,
                                               char fort);






__declspec(dllimport) int PyBuffer_FillInfo(Py_buffer *view, PyObject *o, void *buf,
                                  Py_ssize_t len, int readonly,
                                  int flags);


__declspec(dllimport) void PyBuffer_Release(Py_buffer *view);























__declspec(dllimport) Py_ssize_t _PySequence_IterSearch(PyObject *seq,
                                              PyObject *obj, int operation);



__declspec(dllimport) int _PyObject_RealIsInstance(PyObject *inst, PyObject *cls);

__declspec(dllimport) int _PyObject_RealIsSubclass(PyObject *derived, PyObject *cls);

__declspec(dllimport) char *const * _PySequence_BytesToCharpArray(PyObject* self);

__declspec(dllimport) void _Py_FreeCharPArray(char *const array[]);


__declspec(dllimport) void _Py_add_one_to_index_F(int nd, Py_ssize_t *index,
                                        const Py_ssize_t *shape);
__declspec(dllimport) void _Py_add_one_to_index_C(int nd, Py_ssize_t *index,
                                        const Py_ssize_t *shape);


__declspec(dllimport) int _Py_convert_optional_to_ssize_t(PyObject *, void *);


__declspec(dllimport) PyObject * _PyNumber_Index(PyObject *o);
#line 867 "C:\\Users\\freez\\Python310\\include\\abstract.h"

#line 869 "C:\\Users\\freez\\Python310\\include\\abstract.h"




#line 874 "C:\\Users\\freez\\Python310\\include\\abstract.h"
#line 13 "C:\\Users\\freez\\Python310\\include\\genobject.h"

















typedef struct {
    
    PyObject ob_base; PyFrameObject *gi_frame; PyObject *gi_code; PyObject *gi_weakreflist; PyObject *gi_name; PyObject *gi_qualname; _PyErr_StackItem gi_exc_state;
} PyGenObject;

extern __declspec(dllimport) PyTypeObject PyGen_Type;




__declspec(dllimport) PyObject * PyGen_New(PyFrameObject *);
__declspec(dllimport) PyObject * PyGen_NewWithQualName(PyFrameObject *,
    PyObject *name, PyObject *qualname);
__declspec(dllimport) int _PyGen_SetStopIterationValue(PyObject *);
__declspec(dllimport) int _PyGen_FetchStopIterationValue(PyObject **);
PyObject *_PyGen_yf(PyGenObject *);
__declspec(dllimport) void _PyGen_Finalize(PyObject *self);


typedef struct {
    PyObject ob_base; PyFrameObject *cr_frame; PyObject *cr_code; PyObject *cr_weakreflist; PyObject *cr_name; PyObject *cr_qualname; _PyErr_StackItem cr_exc_state;
    PyObject *cr_origin;
} PyCoroObject;

extern __declspec(dllimport) PyTypeObject PyCoro_Type;
extern __declspec(dllimport) PyTypeObject _PyCoroWrapper_Type;


PyObject *_PyCoro_GetAwaitableIter(PyObject *o);
__declspec(dllimport) PyObject * PyCoro_New(PyFrameObject *,
    PyObject *name, PyObject *qualname);



typedef struct {
    PyObject ob_base; PyFrameObject *ag_frame; PyObject *ag_code; PyObject *ag_weakreflist; PyObject *ag_name; PyObject *ag_qualname; _PyErr_StackItem ag_exc_state;
    PyObject *ag_finalizer;

    


    int ag_hooks_inited;

    

    int ag_closed;

    int ag_running_async;
} PyAsyncGenObject;

extern __declspec(dllimport) PyTypeObject PyAsyncGen_Type;
extern __declspec(dllimport) PyTypeObject _PyAsyncGenASend_Type;
extern __declspec(dllimport) PyTypeObject _PyAsyncGenWrappedValue_Type;
extern __declspec(dllimport) PyTypeObject _PyAsyncGenAThrow_Type;

__declspec(dllimport) PyObject * PyAsyncGen_New(PyFrameObject *,
    PyObject *name, PyObject *qualname);



PyObject *_PyAsyncGenValueWrapperNew(PyObject *);

#line 93 "C:\\Users\\freez\\Python310\\include\\genobject.h"






#line 100 "C:\\Users\\freez\\Python310\\include\\genobject.h"
#line 101 "C:\\Users\\freez\\Python310\\include\\genobject.h"
#line 111 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\descrobject.h"







typedef PyObject *(*getter)(PyObject *, void *);
typedef int (*setter)(PyObject *, PyObject *, void *);

typedef struct PyGetSetDef {
    const char *name;
    getter get;
    setter set;
    const char *doc;
    void *closure;
} PyGetSetDef;


typedef PyObject *(*wrapperfunc)(PyObject *self, PyObject *args,
                                 void *wrapped);

typedef PyObject *(*wrapperfunc_kwds)(PyObject *self, PyObject *args,
                                      void *wrapped, PyObject *kwds);

struct wrapperbase {
    const char *name;
    int offset;
    void *function;
    wrapperfunc wrapper;
    const char *doc;
    int flags;
    PyObject *name_strobj;
};






typedef struct {
    PyObject ob_base;
    PyTypeObject *d_type;
    PyObject *d_name;
    PyObject *d_qualname;
} PyDescrObject;






typedef struct {
    PyDescrObject d_common;
    PyMethodDef *d_method;
    vectorcallfunc vectorcall;
} PyMethodDescrObject;

typedef struct {
    PyDescrObject d_common;
    struct PyMemberDef *d_member;
} PyMemberDescrObject;

typedef struct {
    PyDescrObject d_common;
    PyGetSetDef *d_getset;
} PyGetSetDescrObject;

typedef struct {
    PyDescrObject d_common;
    struct wrapperbase *d_base;
    void *d_wrapped; 
} PyWrapperDescrObject;
#line 75 "C:\\Users\\freez\\Python310\\include\\descrobject.h"

extern __declspec(dllimport) PyTypeObject PyClassMethodDescr_Type;
extern __declspec(dllimport) PyTypeObject PyGetSetDescr_Type;
extern __declspec(dllimport) PyTypeObject PyMemberDescr_Type;
extern __declspec(dllimport) PyTypeObject PyMethodDescr_Type;
extern __declspec(dllimport) PyTypeObject PyWrapperDescr_Type;
extern __declspec(dllimport) PyTypeObject PyDictProxy_Type;

extern __declspec(dllimport) PyTypeObject _PyMethodWrapper_Type;
#line 85 "C:\\Users\\freez\\Python310\\include\\descrobject.h"

__declspec(dllimport) PyObject * PyDescr_NewMethod(PyTypeObject *, PyMethodDef *);
__declspec(dllimport) PyObject * PyDescr_NewClassMethod(PyTypeObject *, PyMethodDef *);
struct PyMemberDef; 
__declspec(dllimport) PyObject * PyDescr_NewMember(PyTypeObject *,
                                               struct PyMemberDef *);
__declspec(dllimport) PyObject * PyDescr_NewGetSet(PyTypeObject *,
                                               struct PyGetSetDef *);

__declspec(dllimport) PyObject * PyDescr_NewWrapper(PyTypeObject *,
                                                struct wrapperbase *, void *);
__declspec(dllimport) int PyDescr_IsData(PyObject *);
#line 98 "C:\\Users\\freez\\Python310\\include\\descrobject.h"

__declspec(dllimport) PyObject * PyDictProxy_New(PyObject *);
__declspec(dllimport) PyObject * PyWrapper_New(PyObject *, PyObject *);


extern __declspec(dllimport) PyTypeObject PyProperty_Type;



#line 108 "C:\\Users\\freez\\Python310\\include\\descrobject.h"

#line 112 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\genericaliasobject.h"







__declspec(dllimport) PyObject * Py_GenericAlias(PyObject *, PyObject *);
extern __declspec(dllimport) PyTypeObject Py_GenericAliasType;




#line 15 "C:\\Users\\freez\\Python310\\include\\genericaliasobject.h"
#line 113 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\warnings.h"







__declspec(dllimport) PyObject* _PyWarnings_Init(void);
#line 10 "C:\\Users\\freez\\Python310\\include\\warnings.h"

__declspec(dllimport) int PyErr_WarnEx(
    PyObject *category,
    const char *message,        
    Py_ssize_t stack_level);
__declspec(dllimport) int PyErr_WarnFormat(
    PyObject *category,
    Py_ssize_t stack_level,
    const char *format,         
    ...);



__declspec(dllimport) int PyErr_ResourceWarning(
    PyObject *source,
    Py_ssize_t stack_level,
    const char *format,         
    ...);
#line 29 "C:\\Users\\freez\\Python310\\include\\warnings.h"

__declspec(dllimport) int PyErr_WarnExplicitObject(
    PyObject *category,
    PyObject *message,
    PyObject *filename,
    int lineno,
    PyObject *module,
    PyObject *registry);
#line 38 "C:\\Users\\freez\\Python310\\include\\warnings.h"
__declspec(dllimport) int PyErr_WarnExplicit(
    PyObject *category,
    const char *message,        
    const char *filename,       
    int lineno,
    const char *module,         
    PyObject *registry);


__declspec(dllimport) int
PyErr_WarnExplicitFormat(PyObject *category,
                         const char *filename, int lineno,
                         const char *module, PyObject *registry,
                         const char *format, ...);
#line 53 "C:\\Users\\freez\\Python310\\include\\warnings.h"




#line 58 "C:\\Users\\freez\\Python310\\include\\warnings.h"


void _PyErr_WarnUnawaitedCoroutine(PyObject *coro);
#line 62 "C:\\Users\\freez\\Python310\\include\\warnings.h"




#line 67 "C:\\Users\\freez\\Python310\\include\\warnings.h"

#line 114 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\weakrefobject.h"









typedef struct _PyWeakReference PyWeakReference;





struct _PyWeakReference {
    PyObject ob_base;

    



    PyObject *wr_object;

    
    PyObject *wr_callback;

    


    Py_hash_t hash;

    




    PyWeakReference *wr_prev;
    PyWeakReference *wr_next;
};
#line 42 "C:\\Users\\freez\\Python310\\include\\weakrefobject.h"

extern __declspec(dllimport) PyTypeObject _PyWeakref_RefType;
extern __declspec(dllimport) PyTypeObject _PyWeakref_ProxyType;
extern __declspec(dllimport) PyTypeObject _PyWeakref_CallableProxyType;












__declspec(dllimport) PyObject * PyWeakref_NewRef(PyObject *ob,
                                              PyObject *callback);
__declspec(dllimport) PyObject * PyWeakref_NewProxy(PyObject *ob,
                                                PyObject *callback);
__declspec(dllimport) PyObject * PyWeakref_GetObject(PyObject *ref);


__declspec(dllimport) Py_ssize_t _PyWeakref_GetWeakrefCount(PyWeakReference *head);

__declspec(dllimport) void _PyWeakref_ClearRef(PyWeakReference *self);
#line 69 "C:\\Users\\freez\\Python310\\include\\weakrefobject.h"

















#line 87 "C:\\Users\\freez\\Python310\\include\\weakrefobject.h"
#line 115 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\structseq.h"









typedef struct PyStructSequence_Field {
    const char *name;
    const char *doc;
} PyStructSequence_Field;

typedef struct PyStructSequence_Desc {
    const char *name;
    const char *doc;
    struct PyStructSequence_Field *fields;
    int n_in_sequence;
} PyStructSequence_Desc;

extern const char * const PyStructSequence_UnnamedField;


__declspec(dllimport) void PyStructSequence_InitType(PyTypeObject *type,
                                           PyStructSequence_Desc *desc);
__declspec(dllimport) int PyStructSequence_InitType2(PyTypeObject *type,
                                           PyStructSequence_Desc *desc);
#line 30 "C:\\Users\\freez\\Python310\\include\\structseq.h"
__declspec(dllimport) PyTypeObject* PyStructSequence_NewType(PyStructSequence_Desc *desc);

__declspec(dllimport) PyObject * PyStructSequence_New(PyTypeObject* type);


typedef PyTupleObject PyStructSequence;





#line 42 "C:\\Users\\freez\\Python310\\include\\structseq.h"

__declspec(dllimport) void PyStructSequence_SetItem(PyObject*, Py_ssize_t, PyObject*);
__declspec(dllimport) PyObject* PyStructSequence_GetItem(PyObject*, Py_ssize_t);




#line 50 "C:\\Users\\freez\\Python310\\include\\structseq.h"
#line 116 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\namespaceobject.h"










extern __declspec(dllimport) PyTypeObject _PyNamespace_Type;

__declspec(dllimport) PyObject * _PyNamespace_New(PyObject *kwds);
#line 15 "C:\\Users\\freez\\Python310\\include\\namespaceobject.h"




#line 20 "C:\\Users\\freez\\Python310\\include\\namespaceobject.h"
#line 117 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/picklebufobject.h"












extern __declspec(dllimport) PyTypeObject PyPickleBuffer_Type;




__declspec(dllimport) PyObject * PyPickleBuffer_FromObject(PyObject *);



__declspec(dllimport) const Py_buffer * PyPickleBuffer_GetBuffer(PyObject *);

__declspec(dllimport) int PyPickleBuffer_Release(PyObject *);

#line 27 "C:\\Users\\freez\\Python310\\include\\cpython/picklebufobject.h"




#line 32 "C:\\Users\\freez\\Python310\\include\\cpython/picklebufobject.h"
#line 118 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pytime.h"















typedef int64_t _PyTime_t;



typedef enum {
    

    _PyTime_ROUND_FLOOR=0,
    

    _PyTime_ROUND_CEILING=1,
    

    _PyTime_ROUND_HALF_EVEN=2,
    





    _PyTime_ROUND_UP=3,
    

    _PyTime_ROUND_TIMEOUT = _PyTime_ROUND_UP
} _PyTime_round_t;



__declspec(dllimport) PyObject * _PyLong_FromTime_t(
    time_t sec);


__declspec(dllimport) time_t _PyLong_AsTime_t(
    PyObject *obj);


__declspec(dllimport) int _PyTime_ObjectToTime_t(
    PyObject *obj,
    time_t *sec,
    _PyTime_round_t);




__declspec(dllimport) int _PyTime_ObjectToTimeval(
    PyObject *obj,
    time_t *sec,
    long *usec,
    _PyTime_round_t);




__declspec(dllimport) int _PyTime_ObjectToTimespec(
    PyObject *obj,
    time_t *sec,
    long *nsec,
    _PyTime_round_t);



__declspec(dllimport) _PyTime_t _PyTime_FromSeconds(int seconds);







__declspec(dllimport) _PyTime_t _PyTime_FromNanoseconds(_PyTime_t ns);


__declspec(dllimport) int _PyTime_FromNanosecondsObject(_PyTime_t *t,
    PyObject *obj);



__declspec(dllimport) int _PyTime_FromSecondsObject(_PyTime_t *t,
    PyObject *obj,
    _PyTime_round_t round);



__declspec(dllimport) int _PyTime_FromMillisecondsObject(_PyTime_t *t,
    PyObject *obj,
    _PyTime_round_t round);


__declspec(dllimport) double _PyTime_AsSecondsDouble(_PyTime_t t);


__declspec(dllimport) _PyTime_t _PyTime_AsMilliseconds(_PyTime_t t,
    _PyTime_round_t round);


__declspec(dllimport) _PyTime_t _PyTime_AsMicroseconds(_PyTime_t t,
    _PyTime_round_t round);



__declspec(dllimport) PyObject * _PyTime_AsNanosecondsObject(_PyTime_t t);



__declspec(dllimport) int _PyTime_FromTimeval(_PyTime_t *tp, struct timeval *tv);





__declspec(dllimport) int _PyTime_AsTimeval(_PyTime_t t,
    struct timeval *tv,
    _PyTime_round_t round);


__declspec(dllimport) int _PyTime_AsTimeval_noraise(_PyTime_t t,
    struct timeval *tv,
    _PyTime_round_t round);







__declspec(dllimport) int _PyTime_AsTimevalTime_t(
    _PyTime_t t,
    time_t *secs,
    int *us,
    _PyTime_round_t round);










#line 157 "C:\\Users\\freez\\Python310\\include\\cpython/pytime.h"



__declspec(dllimport) _PyTime_t _PyTime_MulDiv(_PyTime_t ticks,
    _PyTime_t mul,
    _PyTime_t div);


typedef struct {
    const char *implementation;
    int monotonic;
    int adjustable;
    double resolution;
} _Py_clock_info_t;








__declspec(dllimport) _PyTime_t _PyTime_GetSystemClock(void);





__declspec(dllimport) int _PyTime_GetSystemClockWithInfo(
    _PyTime_t *t,
    _Py_clock_info_t *info);











__declspec(dllimport) _PyTime_t _PyTime_GetMonotonicClock(void);









__declspec(dllimport) int _PyTime_GetMonotonicClockWithInfo(
    _PyTime_t *t,
    _Py_clock_info_t *info);




__declspec(dllimport) int _PyTime_localtime(time_t t, struct tm *tm);



__declspec(dllimport) int _PyTime_gmtime(time_t t, struct tm *tm);









__declspec(dllimport) _PyTime_t _PyTime_GetPerfCounter(void);







__declspec(dllimport) int _PyTime_GetPerfCounterWithInfo(
    _PyTime_t *t,
    _Py_clock_info_t *info);





#line 247 "C:\\Users\\freez\\Python310\\include\\cpython/pytime.h"
#line 248 "C:\\Users\\freez\\Python310\\include\\cpython/pytime.h"
#line 119 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\codecs.h"

























__declspec(dllimport) int PyCodec_Register(
       PyObject *search_function
       );





__declspec(dllimport) int PyCodec_Unregister(
       PyObject *search_function
       );




















__declspec(dllimport) PyObject * _PyCodec_Lookup(
       const char *encoding
       );

__declspec(dllimport) int _PyCodec_Forget(
       const char *encoding
       );
#line 65 "C:\\Users\\freez\\Python310\\include\\codecs.h"








__declspec(dllimport) int PyCodec_KnownEncoding(
       const char *encoding
       );











__declspec(dllimport) PyObject * PyCodec_Encode(
       PyObject *object,
       const char *encoding,
       const char *errors
       );











__declspec(dllimport) PyObject * PyCodec_Decode(
       PyObject *object,
       const char *encoding,
       const char *errors
       );















__declspec(dllimport) PyObject * _PyCodec_LookupTextEncoding(
       const char *encoding,
       const char *alternate_command
       );

__declspec(dllimport) PyObject * _PyCodec_EncodeText(
       PyObject *object,
       const char *encoding,
       const char *errors
       );

__declspec(dllimport) PyObject * _PyCodec_DecodeText(
       PyObject *object,
       const char *encoding,
       const char *errors
       );




__declspec(dllimport) PyObject * _PyCodecInfo_GetIncrementalDecoder(
       PyObject *codec_info,
       const char *errors
       );

__declspec(dllimport) PyObject * _PyCodecInfo_GetIncrementalEncoder(
       PyObject *codec_info,
       const char *errors
       );
#line 153 "C:\\Users\\freez\\Python310\\include\\codecs.h"













__declspec(dllimport) PyObject * PyCodec_Encoder(
       const char *encoding
       );



__declspec(dllimport) PyObject * PyCodec_Decoder(
       const char *encoding
       );



__declspec(dllimport) PyObject * PyCodec_IncrementalEncoder(
       const char *encoding,
       const char *errors
       );



__declspec(dllimport) PyObject * PyCodec_IncrementalDecoder(
       const char *encoding,
       const char *errors
       );



__declspec(dllimport) PyObject * PyCodec_StreamReader(
       const char *encoding,
       PyObject *stream,
       const char *errors
       );



__declspec(dllimport) PyObject * PyCodec_StreamWriter(
       const char *encoding,
       PyObject *stream,
       const char *errors
       );









__declspec(dllimport) int PyCodec_RegisterError(const char *name, PyObject *error);




__declspec(dllimport) PyObject * PyCodec_LookupError(const char *name);


__declspec(dllimport) PyObject * PyCodec_StrictErrors(PyObject *exc);


__declspec(dllimport) PyObject * PyCodec_IgnoreErrors(PyObject *exc);


__declspec(dllimport) PyObject * PyCodec_ReplaceErrors(PyObject *exc);


__declspec(dllimport) PyObject * PyCodec_XMLCharRefReplaceErrors(PyObject *exc);


__declspec(dllimport) PyObject * PyCodec_BackslashReplaceErrors(PyObject *exc);



__declspec(dllimport) PyObject * PyCodec_NameReplaceErrors(PyObject *exc);
#line 240 "C:\\Users\\freez\\Python310\\include\\codecs.h"


extern __declspec(dllimport) const char * Py_hexdigits;
#line 244 "C:\\Users\\freez\\Python310\\include\\codecs.h"




#line 249 "C:\\Users\\freez\\Python310\\include\\codecs.h"
#line 121 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"










__declspec(dllimport) void PyErr_SetNone(PyObject *);
__declspec(dllimport) void PyErr_SetObject(PyObject *, PyObject *);
__declspec(dllimport) void PyErr_SetString(
    PyObject *exception,
    const char *string   
    );
__declspec(dllimport) PyObject * PyErr_Occurred(void);
__declspec(dllimport) void PyErr_Clear(void);
__declspec(dllimport) void PyErr_Fetch(PyObject **, PyObject **, PyObject **);
__declspec(dllimport) void PyErr_Restore(PyObject *, PyObject *, PyObject *);

__declspec(dllimport) void PyErr_GetExcInfo(PyObject **, PyObject **, PyObject **);
__declspec(dllimport) void PyErr_SetExcInfo(PyObject *, PyObject *, PyObject *);
#line 25 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"






__declspec(dllimport) void __declspec(noreturn) Py_FatalError(const char *message);


__declspec(dllimport) int PyErr_GivenExceptionMatches(PyObject *, PyObject *);
__declspec(dllimport) int PyErr_ExceptionMatches(PyObject *);
__declspec(dllimport) void PyErr_NormalizeException(PyObject**, PyObject**, PyObject**);


__declspec(dllimport) int PyException_SetTraceback(PyObject *, PyObject *);
__declspec(dllimport) PyObject * PyException_GetTraceback(PyObject *);


__declspec(dllimport) PyObject * PyException_GetCause(PyObject *);
__declspec(dllimport) void PyException_SetCause(PyObject *, PyObject *);


__declspec(dllimport) PyObject * PyException_GetContext(PyObject *);
__declspec(dllimport) void PyException_SetContext(PyObject *, PyObject *);










__declspec(dllimport) const char * PyExceptionClass_Name(PyObject *);






extern __declspec(dllimport) PyObject * PyExc_BaseException;
extern __declspec(dllimport) PyObject * PyExc_Exception;

extern __declspec(dllimport) PyObject * PyExc_StopAsyncIteration;
#line 71 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
extern __declspec(dllimport) PyObject * PyExc_StopIteration;
extern __declspec(dllimport) PyObject * PyExc_GeneratorExit;
extern __declspec(dllimport) PyObject * PyExc_ArithmeticError;
extern __declspec(dllimport) PyObject * PyExc_LookupError;

extern __declspec(dllimport) PyObject * PyExc_AssertionError;
extern __declspec(dllimport) PyObject * PyExc_AttributeError;
extern __declspec(dllimport) PyObject * PyExc_BufferError;
extern __declspec(dllimport) PyObject * PyExc_EOFError;
extern __declspec(dllimport) PyObject * PyExc_FloatingPointError;
extern __declspec(dllimport) PyObject * PyExc_OSError;
extern __declspec(dllimport) PyObject * PyExc_ImportError;

extern __declspec(dllimport) PyObject * PyExc_ModuleNotFoundError;
#line 86 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
extern __declspec(dllimport) PyObject * PyExc_IndexError;
extern __declspec(dllimport) PyObject * PyExc_KeyError;
extern __declspec(dllimport) PyObject * PyExc_KeyboardInterrupt;
extern __declspec(dllimport) PyObject * PyExc_MemoryError;
extern __declspec(dllimport) PyObject * PyExc_NameError;
extern __declspec(dllimport) PyObject * PyExc_OverflowError;
extern __declspec(dllimport) PyObject * PyExc_RuntimeError;

extern __declspec(dllimport) PyObject * PyExc_RecursionError;
#line 96 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
extern __declspec(dllimport) PyObject * PyExc_NotImplementedError;
extern __declspec(dllimport) PyObject * PyExc_SyntaxError;
extern __declspec(dllimport) PyObject * PyExc_IndentationError;
extern __declspec(dllimport) PyObject * PyExc_TabError;
extern __declspec(dllimport) PyObject * PyExc_ReferenceError;
extern __declspec(dllimport) PyObject * PyExc_SystemError;
extern __declspec(dllimport) PyObject * PyExc_SystemExit;
extern __declspec(dllimport) PyObject * PyExc_TypeError;
extern __declspec(dllimport) PyObject * PyExc_UnboundLocalError;
extern __declspec(dllimport) PyObject * PyExc_UnicodeError;
extern __declspec(dllimport) PyObject * PyExc_UnicodeEncodeError;
extern __declspec(dllimport) PyObject * PyExc_UnicodeDecodeError;
extern __declspec(dllimport) PyObject * PyExc_UnicodeTranslateError;
extern __declspec(dllimport) PyObject * PyExc_ValueError;
extern __declspec(dllimport) PyObject * PyExc_ZeroDivisionError;


extern __declspec(dllimport) PyObject * PyExc_BlockingIOError;
extern __declspec(dllimport) PyObject * PyExc_BrokenPipeError;
extern __declspec(dllimport) PyObject * PyExc_ChildProcessError;
extern __declspec(dllimport) PyObject * PyExc_ConnectionError;
extern __declspec(dllimport) PyObject * PyExc_ConnectionAbortedError;
extern __declspec(dllimport) PyObject * PyExc_ConnectionRefusedError;
extern __declspec(dllimport) PyObject * PyExc_ConnectionResetError;
extern __declspec(dllimport) PyObject * PyExc_FileExistsError;
extern __declspec(dllimport) PyObject * PyExc_FileNotFoundError;
extern __declspec(dllimport) PyObject * PyExc_InterruptedError;
extern __declspec(dllimport) PyObject * PyExc_IsADirectoryError;
extern __declspec(dllimport) PyObject * PyExc_NotADirectoryError;
extern __declspec(dllimport) PyObject * PyExc_PermissionError;
extern __declspec(dllimport) PyObject * PyExc_ProcessLookupError;
extern __declspec(dllimport) PyObject * PyExc_TimeoutError;
#line 129 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"



extern __declspec(dllimport) PyObject * PyExc_EnvironmentError;
extern __declspec(dllimport) PyObject * PyExc_IOError;

extern __declspec(dllimport) PyObject * PyExc_WindowsError;
#line 137 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"


extern __declspec(dllimport) PyObject * PyExc_Warning;
extern __declspec(dllimport) PyObject * PyExc_UserWarning;
extern __declspec(dllimport) PyObject * PyExc_DeprecationWarning;
extern __declspec(dllimport) PyObject * PyExc_PendingDeprecationWarning;
extern __declspec(dllimport) PyObject * PyExc_SyntaxWarning;
extern __declspec(dllimport) PyObject * PyExc_RuntimeWarning;
extern __declspec(dllimport) PyObject * PyExc_FutureWarning;
extern __declspec(dllimport) PyObject * PyExc_ImportWarning;
extern __declspec(dllimport) PyObject * PyExc_UnicodeWarning;
extern __declspec(dllimport) PyObject * PyExc_BytesWarning;
extern __declspec(dllimport) PyObject * PyExc_EncodingWarning;
extern __declspec(dllimport) PyObject * PyExc_ResourceWarning;




__declspec(dllimport) int PyErr_BadArgument(void);
__declspec(dllimport) PyObject * PyErr_NoMemory(void);
__declspec(dllimport) PyObject * PyErr_SetFromErrno(PyObject *);
__declspec(dllimport) PyObject * PyErr_SetFromErrnoWithFilenameObject(
    PyObject *, PyObject *);

__declspec(dllimport) PyObject * PyErr_SetFromErrnoWithFilenameObjects(
    PyObject *, PyObject *, PyObject *);
#line 164 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
__declspec(dllimport) PyObject * PyErr_SetFromErrnoWithFilename(
    PyObject *exc,
    const char *filename   
    );

__declspec(dllimport) PyObject * PyErr_Format(
    PyObject *exception,
    const char *format,   
    ...
    );

__declspec(dllimport) PyObject * PyErr_FormatV(
    PyObject *exception,
    const char *format,
    va_list vargs);
#line 180 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"


__declspec(dllimport) PyObject * PyErr_SetFromWindowsErrWithFilename(
    int ierr,
    const char *filename        
    );
__declspec(dllimport) PyObject * PyErr_SetFromWindowsErr(int);
__declspec(dllimport) PyObject * PyErr_SetExcFromWindowsErrWithFilenameObject(
    PyObject *,int, PyObject *);

__declspec(dllimport) PyObject * PyErr_SetExcFromWindowsErrWithFilenameObjects(
    PyObject *,int, PyObject *, PyObject *);
#line 193 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
__declspec(dllimport) PyObject * PyErr_SetExcFromWindowsErrWithFilename(
    PyObject *exc,
    int ierr,
    const char *filename        
    );
__declspec(dllimport) PyObject * PyErr_SetExcFromWindowsErr(PyObject *, int);
#line 200 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"


__declspec(dllimport) PyObject * PyErr_SetImportErrorSubclass(PyObject *, PyObject *,
    PyObject *, PyObject *);
#line 205 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"

__declspec(dllimport) PyObject * PyErr_SetImportError(PyObject *, PyObject *,
    PyObject *);
#line 209 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"


__declspec(dllimport) void PyErr_BadInternalCall(void);
__declspec(dllimport) void _PyErr_BadInternalCall(const char *filename, int lineno);





__declspec(dllimport) PyObject * PyErr_NewException(
    const char *name, PyObject *base, PyObject *dict);
__declspec(dllimport) PyObject * PyErr_NewExceptionWithDoc(
    const char *name, const char *doc, PyObject *base, PyObject *dict);
__declspec(dllimport) void PyErr_WriteUnraisable(PyObject *);



__declspec(dllimport) int PyErr_CheckSignals(void);
__declspec(dllimport) void PyErr_SetInterrupt(void);

__declspec(dllimport) int PyErr_SetInterruptEx(int signum);
#line 231 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"


__declspec(dllimport) void PyErr_SyntaxLocation(
    const char *filename,       
    int lineno);
__declspec(dllimport) void PyErr_SyntaxLocationEx(
    const char *filename,       
    int lineno,
    int col_offset);
__declspec(dllimport) PyObject * PyErr_ProgramText(
    const char *filename,       
    int lineno);





__declspec(dllimport) PyObject * PyUnicodeDecodeError_Create(
    const char *encoding,       
    const char *object,
    Py_ssize_t length,
    Py_ssize_t start,
    Py_ssize_t end,
    const char *reason          
    );


__declspec(dllimport) PyObject * PyUnicodeEncodeError_GetEncoding(PyObject *);
__declspec(dllimport) PyObject * PyUnicodeDecodeError_GetEncoding(PyObject *);


__declspec(dllimport) PyObject * PyUnicodeEncodeError_GetObject(PyObject *);
__declspec(dllimport) PyObject * PyUnicodeDecodeError_GetObject(PyObject *);
__declspec(dllimport) PyObject * PyUnicodeTranslateError_GetObject(PyObject *);



__declspec(dllimport) int PyUnicodeEncodeError_GetStart(PyObject *, Py_ssize_t *);
__declspec(dllimport) int PyUnicodeDecodeError_GetStart(PyObject *, Py_ssize_t *);
__declspec(dllimport) int PyUnicodeTranslateError_GetStart(PyObject *, Py_ssize_t *);



__declspec(dllimport) int PyUnicodeEncodeError_SetStart(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyUnicodeDecodeError_SetStart(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyUnicodeTranslateError_SetStart(PyObject *, Py_ssize_t);



__declspec(dllimport) int PyUnicodeEncodeError_GetEnd(PyObject *, Py_ssize_t *);
__declspec(dllimport) int PyUnicodeDecodeError_GetEnd(PyObject *, Py_ssize_t *);
__declspec(dllimport) int PyUnicodeTranslateError_GetEnd(PyObject *, Py_ssize_t *);



__declspec(dllimport) int PyUnicodeEncodeError_SetEnd(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyUnicodeDecodeError_SetEnd(PyObject *, Py_ssize_t);
__declspec(dllimport) int PyUnicodeTranslateError_SetEnd(PyObject *, Py_ssize_t);


__declspec(dllimport) PyObject * PyUnicodeEncodeError_GetReason(PyObject *);
__declspec(dllimport) PyObject * PyUnicodeDecodeError_GetReason(PyObject *);
__declspec(dllimport) PyObject * PyUnicodeTranslateError_GetReason(PyObject *);



__declspec(dllimport) int PyUnicodeEncodeError_SetReason(
    PyObject *exc,
    const char *reason          
    );
__declspec(dllimport) int PyUnicodeDecodeError_SetReason(
    PyObject *exc,
    const char *reason          
    );
__declspec(dllimport) int PyUnicodeTranslateError_SetReason(
    PyObject *exc,
    const char *reason          
    );

__declspec(dllimport) int PyOS_snprintf(char *str, size_t size, const char  *format, ...)
                        ;
__declspec(dllimport) int PyOS_vsnprintf(char *str, size_t size, const char  *format, va_list va)
                        ;



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pyerrors.h"












typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
} PyBaseExceptionObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *msg;
    PyObject *filename;
    PyObject *lineno;
    PyObject *offset;
    PyObject *end_lineno;
    PyObject *end_offset;
    PyObject *text;
    PyObject *print_file_and_line;
} PySyntaxErrorObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *msg;
    PyObject *name;
    PyObject *path;
} PyImportErrorObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *encoding;
    PyObject *object;
    Py_ssize_t start;
    Py_ssize_t end;
    PyObject *reason;
} PyUnicodeErrorObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *code;
} PySystemExitObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *myerrno;
    PyObject *strerror;
    PyObject *filename;
    PyObject *filename2;

    PyObject *winerror;
#line 59 "C:\\Users\\freez\\Python310\\include\\cpython/pyerrors.h"
    Py_ssize_t written;   
} PyOSErrorObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *value;
} PyStopIterationObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *name;
} PyNameErrorObject;

typedef struct {
    PyObject ob_base; PyObject *dict; PyObject *args; PyObject *traceback; PyObject *context; PyObject *cause; char suppress_context;
    PyObject *obj;
    PyObject *name;
} PyAttributeErrorObject;


typedef PyOSErrorObject PyEnvironmentErrorObject;

typedef PyOSErrorObject PyWindowsErrorObject;
#line 83 "C:\\Users\\freez\\Python310\\include\\cpython/pyerrors.h"



__declspec(dllimport) void _PyErr_SetKeyError(PyObject *);
__declspec(dllimport) _PyErr_StackItem* _PyErr_GetTopmostException(PyThreadState *tstate);
__declspec(dllimport) void _PyErr_GetExcInfo(PyThreadState *, PyObject **, PyObject **, PyObject **);



__declspec(dllimport) void _PyErr_ChainExceptions(PyObject *, PyObject *, PyObject *);




__declspec(deprecated( "deprecated in " "3.3"))
__declspec(dllimport) PyObject * PyErr_SetFromErrnoWithUnicodeFilename(
    PyObject *, const Py_UNICODE *);
#line 101 "C:\\Users\\freez\\Python310\\include\\cpython/pyerrors.h"




__declspec(dllimport) PyObject * _PyErr_FormatFromCause(
    PyObject *exception,
    const char *format,   
    ...
    );



__declspec(deprecated( "deprecated in " "3.3"))
__declspec(dllimport) PyObject * PyErr_SetFromWindowsErrWithUnicodeFilename(
    int, const Py_UNICODE *);
__declspec(deprecated( "deprecated in " "3.3"))
__declspec(dllimport) PyObject * PyErr_SetExcFromWindowsErrWithUnicodeFilename(
    PyObject *,int, const Py_UNICODE *);
#line 120 "C:\\Users\\freez\\Python310\\include\\cpython/pyerrors.h"
















__declspec(dllimport) PyObject * _PyErr_TrySetFromCause(
    const char *prefix_format,   
    ...
    );



int PySignal_SetWakeupFd(int fd);
__declspec(dllimport) int _PyErr_CheckSignals(void);



__declspec(dllimport) void PyErr_SyntaxLocationObject(
    PyObject *filename,
    int lineno,
    int col_offset);

__declspec(dllimport) void PyErr_RangedSyntaxLocationObject(
    PyObject *filename,
    int lineno,
    int col_offset,
    int end_lineno,
    int end_col_offset);

__declspec(dllimport) PyObject * PyErr_ProgramTextObject(
    PyObject *filename,
    int lineno);





__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject * PyUnicodeEncodeError_Create(
    const char *encoding,       
    const Py_UNICODE *object,
    Py_ssize_t length,
    Py_ssize_t start,
    Py_ssize_t end,
    const char *reason          
    );





__declspec(deprecated( "deprecated in " "3.3")) __declspec(dllimport) PyObject * PyUnicodeTranslateError_Create(
    const Py_UNICODE *object,
    Py_ssize_t length,
    Py_ssize_t start,
    Py_ssize_t end,
    const char *reason          
    );

__declspec(dllimport) PyObject * _PyErr_ProgramDecodedTextObject(
    PyObject *filename,
    int lineno,
    const char* encoding);

__declspec(dllimport) PyObject * _PyUnicodeTranslateError_Create(
    PyObject *object,
    Py_ssize_t start,
    Py_ssize_t end,
    const char *reason          
    );

__declspec(dllimport) void _PyErr_WriteUnraisableMsg(
    const char *err_msg,
    PyObject *obj);

__declspec(dllimport) void __declspec(noreturn) _Py_FatalErrorFunc(
    const char *func,
    const char *message);

__declspec(dllimport) void __declspec(noreturn) _Py_FatalErrorFormat(
    const char *func,
    const char *format,
    ...);


#line 318 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"

#line 320 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"




#line 325 "C:\\Users\\freez\\Python310\\include\\pyerrors.h"
#line 122 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pythread.h"




typedef void *PyThread_type_lock;







typedef enum PyLockStatus {
    PY_LOCK_FAILURE = 0,
    PY_LOCK_ACQUIRED = 1,
    PY_LOCK_INTR
} PyLockStatus;



#line 22 "C:\\Users\\freez\\Python310\\include\\pythread.h"

__declspec(dllimport) void PyThread_init_thread(void);
__declspec(dllimport) unsigned long PyThread_start_new_thread(void (*)(void *), void *);
__declspec(dllimport) void __declspec(noreturn) PyThread_exit_thread(void);
__declspec(dllimport) unsigned long PyThread_get_thread_ident(void);



__declspec(dllimport) unsigned long PyThread_get_thread_native_id(void);
#line 32 "C:\\Users\\freez\\Python310\\include\\pythread.h"

__declspec(dllimport) PyThread_type_lock PyThread_allocate_lock(void);
__declspec(dllimport) void PyThread_free_lock(PyThread_type_lock);
__declspec(dllimport) int PyThread_acquire_lock(PyThread_type_lock, int);










#line 47 "C:\\Users\\freez\\Python310\\include\\pythread.h"
















#line 64 "C:\\Users\\freez\\Python310\\include\\pythread.h"
   




#line 70 "C:\\Users\\freez\\Python310\\include\\pythread.h"


#line 73 "C:\\Users\\freez\\Python310\\include\\pythread.h"














__declspec(dllimport) PyLockStatus PyThread_acquire_lock_timed(PyThread_type_lock,
                                                     long long microseconds,
                                                     int intr_flag);

__declspec(dllimport) void PyThread_release_lock(PyThread_type_lock);

__declspec(dllimport) size_t PyThread_get_stacksize(void);
__declspec(dllimport) int PyThread_set_stacksize(size_t);


__declspec(dllimport) PyObject* PyThread_GetInfo(void);
#line 99 "C:\\Users\\freez\\Python310\\include\\pythread.h"









__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) int PyThread_create_key(void);
__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) void PyThread_delete_key(int key);
__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) int PyThread_set_key_value(int key,
                                                          void *value);
__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) void * PyThread_get_key_value(int key);
__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) void PyThread_delete_key_value(int key);


__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) void PyThread_ReInitTLS(void);






typedef struct _Py_tss_t Py_tss_t;  






#line 131 "C:\\Users\\freez\\Python310\\include\\pythread.h"
    





#line 138 "C:\\Users\\freez\\Python310\\include\\pythread.h"





struct _Py_tss_t {
    int _is_initialized;
    unsigned long _key;
};





#line 153 "C:\\Users\\freez\\Python310\\include\\pythread.h"

__declspec(dllimport) Py_tss_t * PyThread_tss_alloc(void);
__declspec(dllimport) void PyThread_tss_free(Py_tss_t *key);


__declspec(dllimport) int PyThread_tss_is_created(Py_tss_t *key);
__declspec(dllimport) int PyThread_tss_create(Py_tss_t *key);
__declspec(dllimport) void PyThread_tss_delete(Py_tss_t *key);
__declspec(dllimport) int PyThread_tss_set(Py_tss_t *key, void *value);
__declspec(dllimport) void * PyThread_tss_get(Py_tss_t *key);
#line 164 "C:\\Users\\freez\\Python310\\include\\pythread.h"





#line 170 "C:\\Users\\freez\\Python310\\include\\pythread.h"
#line 123 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\context.h"









extern __declspec(dllimport) PyTypeObject PyContext_Type;
typedef struct _pycontextobject PyContext;

extern __declspec(dllimport) PyTypeObject PyContextVar_Type;
typedef struct _pycontextvarobject PyContextVar;

extern __declspec(dllimport) PyTypeObject PyContextToken_Type;
typedef struct _pycontexttokenobject PyContextToken;







__declspec(dllimport) PyObject * PyContext_New(void);
__declspec(dllimport) PyObject * PyContext_Copy(PyObject *);
__declspec(dllimport) PyObject * PyContext_CopyCurrent(void);

__declspec(dllimport) int PyContext_Enter(PyObject *);
__declspec(dllimport) int PyContext_Exit(PyObject *);






__declspec(dllimport) PyObject * PyContextVar_New(
    const char *name, PyObject *default_value);

















__declspec(dllimport) int PyContextVar_Get(
    PyObject *var, PyObject *default_value, PyObject **value);





__declspec(dllimport) PyObject * PyContextVar_Set(PyObject *var, PyObject *value);





__declspec(dllimport) int PyContextVar_Reset(PyObject *var, PyObject *token);



__declspec(dllimport) PyObject * _PyContext_NewHamtForTests(void);


#line 77 "C:\\Users\\freez\\Python310\\include\\context.h"




#line 82 "C:\\Users\\freez\\Python310\\include\\context.h"
#line 125 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\modsupport.h"























#line 25 "C:\\Users\\freez\\Python310\\include\\modsupport.h"










#line 36 "C:\\Users\\freez\\Python310\\include\\modsupport.h"



__declspec(dllimport) int _PyArg_Parse_SizeT(PyObject *, const char *, ...);
__declspec(dllimport) int _PyArg_ParseTuple_SizeT(PyObject *, const char *, ...);
__declspec(dllimport) int _PyArg_ParseTupleAndKeywords_SizeT(PyObject *, PyObject *,
                                                  const char *, char **, ...);
__declspec(dllimport) int _PyArg_VaParse_SizeT(PyObject *, const char *, va_list);
__declspec(dllimport) int _PyArg_VaParseTupleAndKeywords_SizeT(PyObject *, PyObject *,
                                                  const char *, char **, va_list);
#line 47 "C:\\Users\\freez\\Python310\\include\\modsupport.h"
__declspec(dllimport) int PyArg_ValidateKeywordArguments(PyObject *);
__declspec(dllimport) int PyArg_UnpackTuple(PyObject *, const char *, Py_ssize_t, Py_ssize_t, ...);
__declspec(dllimport) PyObject * _Py_BuildValue_SizeT(const char *, ...);
__declspec(dllimport) PyObject * _Py_BuildValue_SizeT(const char *, ...);



__declspec(dllimport) int _PyArg_UnpackStack(
    PyObject *const *args,
    Py_ssize_t nargs,
    const char *name,
    Py_ssize_t min,
    Py_ssize_t max,
    ...);

__declspec(dllimport) int _PyArg_NoKeywords(const char *funcname, PyObject *kwargs);
__declspec(dllimport) int _PyArg_NoKwnames(const char *funcname, PyObject *kwnames);
__declspec(dllimport) int _PyArg_NoPositional(const char *funcname, PyObject *args);







__declspec(dllimport) void _PyArg_BadArgument(const char *, const char *, const char *, PyObject *);
__declspec(dllimport) int _PyArg_CheckPositional(const char *, Py_ssize_t,
                                       Py_ssize_t, Py_ssize_t);




#line 80 "C:\\Users\\freez\\Python310\\include\\modsupport.h"

__declspec(dllimport) PyObject * _Py_VaBuildValue_SizeT(const char *, va_list);

__declspec(dllimport) PyObject ** _Py_VaBuildStack_SizeT(
    PyObject **small_stack,
    Py_ssize_t small_stack_len,
    const char *format,
    va_list va,
    Py_ssize_t *p_nargs);
#line 90 "C:\\Users\\freez\\Python310\\include\\modsupport.h"


typedef struct _PyArg_Parser {
    const char *format;
    const char * const *keywords;
    const char *fname;
    const char *custom_msg;
    int pos;            
    int min;            
    int max;            
    PyObject *kwtuple;  
    struct _PyArg_Parser *next;
} _PyArg_Parser;





#line 109 "C:\\Users\\freez\\Python310\\include\\modsupport.h"
__declspec(dllimport) int _PyArg_ParseTupleAndKeywordsFast_SizeT(PyObject *, PyObject *,
                                                 struct _PyArg_Parser *, ...);
__declspec(dllimport) int _PyArg_ParseStack_SizeT(
    PyObject *const *args,
    Py_ssize_t nargs,
    const char *format,
    ...);
__declspec(dllimport) int _PyArg_ParseStackAndKeywords_SizeT(
    PyObject *const *args,
    Py_ssize_t nargs,
    PyObject *kwnames,
    struct _PyArg_Parser *,
    ...);
__declspec(dllimport) int _PyArg_VaParseTupleAndKeywordsFast_SizeT(PyObject *, PyObject *,
                                                   struct _PyArg_Parser *, va_list);
__declspec(dllimport) PyObject * const * _PyArg_UnpackKeywords(
        PyObject *const *args, Py_ssize_t nargs,
        PyObject *kwargs, PyObject *kwnames,
        struct _PyArg_Parser *parser,
        int minpos, int maxpos, int minkw,
        PyObject **buf);






void _PyArg_Fini(void);
#line 138 "C:\\Users\\freez\\Python310\\include\\modsupport.h"




__declspec(dllimport) int PyModule_AddObjectRef(PyObject *mod, const char *name, PyObject *value);



__declspec(dllimport) int PyModule_AddObject(PyObject *mod, const char *, PyObject *value);

__declspec(dllimport) int PyModule_AddIntConstant(PyObject *, const char *, long);
__declspec(dllimport) int PyModule_AddStringConstant(PyObject *, const char *, const char *);


__declspec(dllimport) int PyModule_AddType(PyObject *module, PyTypeObject *type);
#line 154 "C:\\Users\\freez\\Python310\\include\\modsupport.h"





__declspec(dllimport) int PyModule_SetDocString(PyObject *, const char *);
__declspec(dllimport) int PyModule_AddFunctions(PyObject *, PyMethodDef *);
__declspec(dllimport) int PyModule_ExecDef(PyObject *module, PyModuleDef *def);
#line 163 "C:\\Users\\freez\\Python310\\include\\modsupport.h"































































__declspec(dllimport) PyObject * PyModule_Create2(struct PyModuleDef*,
                                     int apiver);

__declspec(dllimport) PyObject * _PyModule_CreateInitialized(struct PyModuleDef*,
                                                   int apiver);
#line 232 "C:\\Users\\freez\\Python310\\include\\modsupport.h"







#line 240 "C:\\Users\\freez\\Python310\\include\\modsupport.h"



__declspec(dllimport) PyObject * PyModule_FromDefAndSpec2(PyModuleDef *def,
                                                PyObject *spec,
                                                int module_api_version);







#line 254 "C:\\Users\\freez\\Python310\\include\\modsupport.h"
#line 255 "C:\\Users\\freez\\Python310\\include\\modsupport.h"


extern __declspec(dllimport) const char * _Py_PackageContext;
#line 259 "C:\\Users\\freez\\Python310\\include\\modsupport.h"




#line 264 "C:\\Users\\freez\\Python310\\include\\modsupport.h"
#line 127 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\compile.h"

















#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/compile.h"























typedef struct {
    int cf_flags;  
    int cf_feature_version;  
} PyCompilerFlags;






typedef struct {
    int ff_features;      
    int ff_lineno;        
} PyFutureFeatures;













__declspec(dllimport) int PyCompile_OpcodeStackEffect(int opcode, int oparg);
__declspec(dllimport) int PyCompile_OpcodeStackEffectWithJump(int opcode, int oparg, int jump);
#line 19 "C:\\Users\\freez\\Python310\\include\\compile.h"

#line 21 "C:\\Users\\freez\\Python310\\include\\compile.h"




#line 26 "C:\\Users\\freez\\Python310\\include\\compile.h"
#line 128 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pythonrun.h"









__declspec(dllimport) PyObject * Py_CompileString(const char *, const char *, int);

__declspec(dllimport) void PyErr_Print(void);
__declspec(dllimport) void PyErr_PrintEx(int);
__declspec(dllimport) void PyErr_Display(PyObject *, PyObject *, PyObject *);



extern __declspec(dllimport) int (*PyOS_InputHook)(void);









#line 29 "C:\\Users\\freez\\Python310\\include\\pythonrun.h"








#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pythonrun.h"




__declspec(dllimport) int PyRun_SimpleStringFlags(const char *, PyCompilerFlags *);
__declspec(dllimport) int _PyRun_SimpleFileObject(
    FILE *fp,
    PyObject *filename,
    int closeit,
    PyCompilerFlags *flags);
__declspec(dllimport) int PyRun_AnyFileExFlags(
    FILE *fp,
    const char *filename,       
    int closeit,
    PyCompilerFlags *flags);
__declspec(dllimport) int _PyRun_AnyFileObject(
    FILE *fp,
    PyObject *filename,
    int closeit,
    PyCompilerFlags *flags);
__declspec(dllimport) int PyRun_SimpleFileExFlags(
    FILE *fp,
    const char *filename,       
    int closeit,
    PyCompilerFlags *flags);
__declspec(dllimport) int PyRun_InteractiveOneFlags(
    FILE *fp,
    const char *filename,       
    PyCompilerFlags *flags);
__declspec(dllimport) int PyRun_InteractiveOneObject(
    FILE *fp,
    PyObject *filename,
    PyCompilerFlags *flags);
__declspec(dllimport) int PyRun_InteractiveLoopFlags(
    FILE *fp,
    const char *filename,       
    PyCompilerFlags *flags);
__declspec(dllimport) int _PyRun_InteractiveLoopObject(
    FILE *fp,
    PyObject *filename,
    PyCompilerFlags *flags);


__declspec(dllimport) PyObject * PyRun_StringFlags(const char *, int, PyObject *,
                                         PyObject *, PyCompilerFlags *);

__declspec(dllimport) PyObject * PyRun_FileExFlags(
    FILE *fp,
    const char *filename,       
    int start,
    PyObject *globals,
    PyObject *locals,
    int closeit,
    PyCompilerFlags *flags);


__declspec(dllimport) PyObject * Py_CompileStringExFlags(
    const char *str,
    const char *filename,       
    int start,
    PyCompilerFlags *flags,
    int optimize);
__declspec(dllimport) PyObject * Py_CompileStringObject(
    const char *str,
    PyObject *filename, int start,
    PyCompilerFlags *flags,
    int optimize);





__declspec(dllimport) const char * _Py_SourceAsString(
    PyObject *cmd,
    const char *funcname,
    const char *what,
    PyCompilerFlags *cf,
    PyObject **cmd_copy);






__declspec(dllimport) PyObject * PyRun_String(const char *str, int s, PyObject *g, PyObject *l);
__declspec(dllimport) int PyRun_AnyFile(FILE *fp, const char *name);
__declspec(dllimport) int PyRun_AnyFileEx(FILE *fp, const char *name, int closeit);
__declspec(dllimport) int PyRun_AnyFileFlags(FILE *, const char *, PyCompilerFlags *);
__declspec(dllimport) int PyRun_SimpleString(const char *s);
__declspec(dllimport) int PyRun_SimpleFile(FILE *f, const char *p);
__declspec(dllimport) int PyRun_SimpleFileEx(FILE *f, const char *p, int c);
__declspec(dllimport) int PyRun_InteractiveOne(FILE *f, const char *p);
__declspec(dllimport) int PyRun_InteractiveLoop(FILE *f, const char *p);
__declspec(dllimport) PyObject * PyRun_File(FILE *fp, const char *p, int s, PyObject *g, PyObject *l);
__declspec(dllimport) PyObject * PyRun_FileEx(FILE *fp, const char *p, int s, PyObject *g, PyObject *l, int c);
__declspec(dllimport) PyObject * PyRun_FileFlags(FILE *fp, const char *p, int s, PyObject *g, PyObject *l, PyCompilerFlags *flags);






















__declspec(dllimport) char * PyOS_Readline(FILE *, FILE *, const char *);
extern __declspec(dllimport) PyThreadState* _PyOS_ReadlineTState;
extern __declspec(dllimport) char *(*PyOS_ReadlineFunctionPointer)(FILE *, FILE *, const char *);
#line 38 "C:\\Users\\freez\\Python310\\include\\pythonrun.h"

#line 40 "C:\\Users\\freez\\Python310\\include\\pythonrun.h"




#line 45 "C:\\Users\\freez\\Python310\\include\\pythonrun.h"
#line 129 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"











__declspec(dllimport) void Py_Initialize(void);
__declspec(dllimport) void Py_InitializeEx(int);
__declspec(dllimport) void Py_Finalize(void);

__declspec(dllimport) int Py_FinalizeEx(void);
#line 18 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"
__declspec(dllimport) int Py_IsInitialized(void);


__declspec(dllimport) PyThreadState * Py_NewInterpreter(void);
__declspec(dllimport) void Py_EndInterpreter(PyThreadState *);





__declspec(dllimport) int Py_AtExit(void (*func)(void));

__declspec(dllimport) void __declspec(noreturn) Py_Exit(int);


__declspec(dllimport) int Py_Main(int argc, wchar_t **argv);
__declspec(dllimport) int Py_BytesMain(int argc, char **argv);


__declspec(dllimport) void Py_SetProgramName(const wchar_t *);
__declspec(dllimport) wchar_t * Py_GetProgramName(void);

__declspec(dllimport) void Py_SetPythonHome(const wchar_t *);
__declspec(dllimport) wchar_t * Py_GetPythonHome(void);

__declspec(dllimport) wchar_t * Py_GetProgramFullPath(void);

__declspec(dllimport) wchar_t * Py_GetPrefix(void);
__declspec(dllimport) wchar_t * Py_GetExecPrefix(void);
__declspec(dllimport) wchar_t * Py_GetPath(void);
__declspec(dllimport) void      Py_SetPath(const wchar_t *);

int _Py_CheckPython3(void);
#line 52 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"


__declspec(dllimport) const char * Py_GetVersion(void);
__declspec(dllimport) const char * Py_GetPlatform(void);
__declspec(dllimport) const char * Py_GetCopyright(void);
__declspec(dllimport) const char * Py_GetCompiler(void);
__declspec(dllimport) const char * Py_GetBuildInfo(void);


typedef void (*PyOS_sighandler_t)(int);
__declspec(dllimport) PyOS_sighandler_t PyOS_getsig(int);
__declspec(dllimport) PyOS_sighandler_t PyOS_setsig(int, PyOS_sighandler_t);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pylifecycle.h"






__declspec(dllimport) int Py_FrozenMain(int argc, char **argv);




__declspec(dllimport) int Py_SetStandardStreamEncoding(const char *encoding,
                                             const char *errors);



__declspec(dllimport) PyStatus Py_PreInitialize(
    const PyPreConfig *src_config);
__declspec(dllimport) PyStatus Py_PreInitializeFromBytesArgs(
    const PyPreConfig *src_config,
    Py_ssize_t argc,
    char **argv);
__declspec(dllimport) PyStatus Py_PreInitializeFromArgs(
    const PyPreConfig *src_config,
    Py_ssize_t argc,
    wchar_t **argv);

__declspec(dllimport) int _Py_IsCoreInitialized(void);




__declspec(dllimport) PyStatus Py_InitializeFromConfig(
    const PyConfig *config);
__declspec(dllimport) PyStatus _Py_InitializeMain(void);

__declspec(dllimport) int Py_RunMain(void);


__declspec(dllimport) void __declspec(noreturn) Py_ExitStatusException(PyStatus err);


__declspec(dllimport) void _Py_RestoreSignals(void);

__declspec(dllimport) int Py_FdIsInteractive(FILE *, const char *);
__declspec(dllimport) int _Py_FdIsInteractive(FILE *fp, PyObject *filename);

__declspec(dllimport) void _Py_SetProgramFullPath(const wchar_t *);

__declspec(dllimport) const char * _Py_gitidentifier(void);
__declspec(dllimport) const char * _Py_gitversion(void);

__declspec(dllimport) int _Py_IsFinalizing(void);


__declspec(dllimport) int _PyOS_URandom(void *buffer, Py_ssize_t size);
__declspec(dllimport) int _PyOS_URandomNonblock(void *buffer, Py_ssize_t size);


__declspec(dllimport) int _Py_CoerceLegacyLocale(int warn);
__declspec(dllimport) int _Py_LegacyLocaleDetected(int warn);
__declspec(dllimport) char * _Py_SetLocaleFromEnv(int category);

__declspec(dllimport) PyThreadState * _Py_NewInterpreter(int isolated_subinterpreter);
#line 68 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"

#line 70 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"




#line 75 "C:\\Users\\freez\\Python310\\include\\pylifecycle.h"
#line 130 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\ceval.h"
















__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) PyObject * PyEval_CallObjectWithKeywords(
    PyObject *callable,
    PyObject *args,
    PyObject *kwargs);





__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) PyObject * PyEval_CallFunction(
    PyObject *callable, const char *format, ...);
__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) PyObject * PyEval_CallMethod(
    PyObject *obj, const char *name, const char *format, ...);

__declspec(dllimport) PyObject * PyEval_GetBuiltins(void);
__declspec(dllimport) PyObject * PyEval_GetGlobals(void);
__declspec(dllimport) PyObject * PyEval_GetLocals(void);
__declspec(dllimport) PyFrameObject * PyEval_GetFrame(void);

__declspec(dllimport) int Py_AddPendingCall(int (*func)(void *), void *arg);
__declspec(dllimport) int Py_MakePendingCalls(void);


























__declspec(dllimport) void Py_SetRecursionLimit(int);
__declspec(dllimport) int Py_GetRecursionLimit(void);

__declspec(dllimport) int Py_EnterRecursiveCall(const char *where);
__declspec(dllimport) void Py_LeaveRecursiveCall(void);

__declspec(dllimport) const char * PyEval_GetFuncName(PyObject *);
__declspec(dllimport) const char * PyEval_GetFuncDesc(PyObject *);

__declspec(dllimport) PyObject * PyEval_EvalFrame(PyFrameObject *);
__declspec(dllimport) PyObject * PyEval_EvalFrameEx(PyFrameObject *f, int exc);











































__declspec(dllimport) PyThreadState * PyEval_SaveThread(void);
__declspec(dllimport) void PyEval_RestoreThread(PyThreadState *);

__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) int PyEval_ThreadsInitialized(void);
__declspec(deprecated( "deprecated in " "3.9")) __declspec(dllimport) void PyEval_InitThreads(void);




__declspec(deprecated( "deprecated in " "3.2")) __declspec(dllimport) void PyEval_AcquireLock(void);
__declspec(deprecated( "deprecated in " "3.2")) __declspec(dllimport) void PyEval_ReleaseLock(void);
__declspec(dllimport) void PyEval_AcquireThread(PyThreadState *tstate);
__declspec(dllimport) void PyEval_ReleaseThread(PyThreadState *tstate);




















#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/ceval.h"




__declspec(dllimport) void PyEval_SetProfile(Py_tracefunc, PyObject *);
extern __declspec(dllimport) int _PyEval_SetProfile(PyThreadState *tstate, Py_tracefunc func, PyObject *arg);
__declspec(dllimport) void PyEval_SetTrace(Py_tracefunc, PyObject *);
__declspec(dllimport) int _PyEval_SetTrace(PyThreadState *tstate, Py_tracefunc func, PyObject *arg);
__declspec(dllimport) int _PyEval_GetCoroutineOriginTrackingDepth(void);
__declspec(dllimport) int _PyEval_SetAsyncGenFirstiter(PyObject *);
__declspec(dllimport) PyObject * _PyEval_GetAsyncGenFirstiter(void);
__declspec(dllimport) int _PyEval_SetAsyncGenFinalizer(PyObject *);
__declspec(dllimport) PyObject * _PyEval_GetAsyncGenFinalizer(void);


__declspec(dllimport) PyObject * _PyEval_GetBuiltinId(_Py_Identifier *);



__declspec(dllimport) int PyEval_MergeCompilerFlags(PyCompilerFlags *cf);

__declspec(dllimport) PyObject * _PyEval_EvalFrameDefault(PyThreadState *tstate, PyFrameObject *f, int exc);

__declspec(dllimport) void _PyEval_SetSwitchInterval(unsigned long microseconds);
__declspec(dllimport) unsigned long _PyEval_GetSwitchInterval(void);

__declspec(dllimport) Py_ssize_t _PyEval_RequestCodeExtraIndex(freefunc);

__declspec(dllimport) int _PyEval_SliceIndex(PyObject *, Py_ssize_t *);
__declspec(dllimport) int _PyEval_SliceIndexNotNone(PyObject *, Py_ssize_t *);
#line 152 "C:\\Users\\freez\\Python310\\include\\ceval.h"

#line 154 "C:\\Users\\freez\\Python310\\include\\ceval.h"




#line 159 "C:\\Users\\freez\\Python310\\include\\ceval.h"
#line 131 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\sysmodule.h"









__declspec(dllimport) PyObject * PySys_GetObject(const char *);
__declspec(dllimport) int PySys_SetObject(const char *, PyObject *);

__declspec(dllimport) void PySys_SetArgv(int, wchar_t **);
__declspec(dllimport) void PySys_SetArgvEx(int, wchar_t **, int);
__declspec(dllimport) void PySys_SetPath(const wchar_t *);

__declspec(dllimport) void PySys_WriteStdout(const char *format, ...)
                 ;
__declspec(dllimport) void PySys_WriteStderr(const char *format, ...)
                 ;
__declspec(dllimport) void PySys_FormatStdout(const char *format, ...);
__declspec(dllimport) void PySys_FormatStderr(const char *format, ...);

__declspec(dllimport) void PySys_ResetWarnOptions(void);
__declspec(dllimport) void PySys_AddWarnOption(const wchar_t *);
__declspec(dllimport) void PySys_AddWarnOptionUnicode(PyObject *);
__declspec(dllimport) int PySys_HasWarnOptions(void);

__declspec(dllimport) void PySys_AddXOption(const wchar_t *);
__declspec(dllimport) PyObject * PySys_GetXOptions(void);



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/sysmodule.h"




__declspec(dllimport) PyObject * _PySys_GetObjectId(_Py_Identifier *key);
__declspec(dllimport) int _PySys_SetObjectId(_Py_Identifier *key, PyObject *);

__declspec(dllimport) size_t _PySys_GetSizeOf(PyObject *);

typedef int(*Py_AuditHookFunction)(const char *, PyObject *, void *);

__declspec(dllimport) int PySys_Audit(
    const char *event,
    const char *argFormat,
    ...);
__declspec(dllimport) int PySys_AddAuditHook(Py_AuditHookFunction, void*);
#line 35 "C:\\Users\\freez\\Python310\\include\\sysmodule.h"

#line 37 "C:\\Users\\freez\\Python310\\include\\sysmodule.h"




#line 42 "C:\\Users\\freez\\Python310\\include\\sysmodule.h"
#line 132 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\osmodule.h"










__declspec(dllimport) PyObject * PyOS_FSPath(PyObject *path);
#line 13 "C:\\Users\\freez\\Python310\\include\\osmodule.h"




#line 18 "C:\\Users\\freez\\Python310\\include\\osmodule.h"
#line 133 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\intrcheck.h"






__declspec(dllimport) int PyOS_InterruptOccurred(void);








__declspec(deprecated( "deprecated in " "3.7")) __declspec(dllimport) void PyOS_AfterFork(void);


__declspec(dllimport) int _PyOS_IsMainThread(void);



__declspec(dllimport) void* _PyOS_SigintEvent(void);
#line 25 "C:\\Users\\freez\\Python310\\include\\intrcheck.h"
#line 26 "C:\\Users\\freez\\Python310\\include\\intrcheck.h"




#line 31 "C:\\Users\\freez\\Python310\\include\\intrcheck.h"
#line 134 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\import.h"








__declspec(dllimport) long PyImport_GetMagicNumber(void);
__declspec(dllimport) const char * PyImport_GetMagicTag(void);
__declspec(dllimport) PyObject * PyImport_ExecCodeModule(
    const char *name,           
    PyObject *co
    );
__declspec(dllimport) PyObject * PyImport_ExecCodeModuleEx(
    const char *name,           
    PyObject *co,
    const char *pathname        
    );
__declspec(dllimport) PyObject * PyImport_ExecCodeModuleWithPathnames(
    const char *name,           
    PyObject *co,
    const char *pathname,       
    const char *cpathname       
    );

__declspec(dllimport) PyObject * PyImport_ExecCodeModuleObject(
    PyObject *name,
    PyObject *co,
    PyObject *pathname,
    PyObject *cpathname
    );
#line 34 "C:\\Users\\freez\\Python310\\include\\import.h"
__declspec(dllimport) PyObject * PyImport_GetModuleDict(void);

__declspec(dllimport) PyObject * PyImport_GetModule(PyObject *name);
#line 38 "C:\\Users\\freez\\Python310\\include\\import.h"

__declspec(dllimport) PyObject * PyImport_AddModuleObject(
    PyObject *name
    );
#line 43 "C:\\Users\\freez\\Python310\\include\\import.h"
__declspec(dllimport) PyObject * PyImport_AddModule(
    const char *name            
    );
__declspec(dllimport) PyObject * PyImport_ImportModule(
    const char *name            
    );
__declspec(dllimport) PyObject * PyImport_ImportModuleNoBlock(
    const char *name            
    );
__declspec(dllimport) PyObject * PyImport_ImportModuleLevel(
    const char *name,           
    PyObject *globals,
    PyObject *locals,
    PyObject *fromlist,
    int level
    );

__declspec(dllimport) PyObject * PyImport_ImportModuleLevelObject(
    PyObject *name,
    PyObject *globals,
    PyObject *locals,
    PyObject *fromlist,
    int level
    );
#line 68 "C:\\Users\\freez\\Python310\\include\\import.h"




__declspec(dllimport) PyObject * PyImport_GetImporter(PyObject *path);
__declspec(dllimport) PyObject * PyImport_Import(PyObject *name);
__declspec(dllimport) PyObject * PyImport_ReloadModule(PyObject *m);

__declspec(dllimport) int PyImport_ImportFrozenModuleObject(
    PyObject *name
    );
#line 80 "C:\\Users\\freez\\Python310\\include\\import.h"
__declspec(dllimport) int PyImport_ImportFrozenModule(
    const char *name            
    );

__declspec(dllimport) int PyImport_AppendInittab(
    const char *name,           
    PyObject* (*initfunc)(void)
    );



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/import.h"




__declspec(dllexport) PyObject* PyInit__imp(void);

__declspec(dllimport) int _PyImport_IsInitialized(PyInterpreterState *);

__declspec(dllimport) PyObject * _PyImport_GetModuleId(struct _Py_Identifier *name);
__declspec(dllimport) int _PyImport_SetModule(PyObject *name, PyObject *module);
__declspec(dllimport) int _PyImport_SetModuleString(const char *name, PyObject* module);

__declspec(dllimport) void _PyImport_AcquireLock(void);
__declspec(dllimport) int _PyImport_ReleaseLock(void);


__declspec(deprecated( "deprecated in " "3.10")) __declspec(dllimport) PyObject * _PyImport_FindExtensionObject(PyObject *, PyObject *);

__declspec(dllimport) int _PyImport_FixupBuiltin(
    PyObject *mod,
    const char *name,            
    PyObject *modules
    );
__declspec(dllimport) int _PyImport_FixupExtensionObject(PyObject*, PyObject *,
                                               PyObject *, PyObject *);

struct _inittab {
    const char *name;           
    PyObject* (*initfunc)(void);
};
extern __declspec(dllimport) struct _inittab * PyImport_Inittab;
__declspec(dllimport) int PyImport_ExtendInittab(struct _inittab *newtab);

struct _frozen {
    const char *name;                 
    const unsigned char *code;
    int size;
};




extern __declspec(dllimport) const struct _frozen * PyImport_FrozenModules;
#line 92 "C:\\Users\\freez\\Python310\\include\\import.h"

#line 94 "C:\\Users\\freez\\Python310\\include\\import.h"




#line 99 "C:\\Users\\freez\\Python310\\include\\import.h"
#line 135 "C:\\Users\\freez\\Python310\\include\\Python.h"


#line 1 "C:\\Users\\freez\\Python310\\include\\bltinmodule.h"






extern __declspec(dllimport) PyTypeObject PyFilter_Type;
extern __declspec(dllimport) PyTypeObject PyMap_Type;
extern __declspec(dllimport) PyTypeObject PyZip_Type;




#line 15 "C:\\Users\\freez\\Python310\\include\\bltinmodule.h"
#line 138 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\eval.h"









__declspec(dllimport) PyObject * PyEval_EvalCode(PyObject *, PyObject *, PyObject *);

__declspec(dllimport) PyObject * PyEval_EvalCodeEx(PyObject *co,
                                         PyObject *globals,
                                         PyObject *locals,
                                         PyObject *const *args, int argc,
                                         PyObject *const *kwds, int kwdc,
                                         PyObject *const *defs, int defc,
                                         PyObject *kwdefs, PyObject *closure);


__declspec(dllimport) PyObject * _PyEval_CallTracing(PyObject *func, PyObject *args);
#line 23 "C:\\Users\\freez\\Python310\\include\\eval.h"




#line 28 "C:\\Users\\freez\\Python310\\include\\eval.h"
#line 140 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pyctype.h"















extern __declspec(dllimport) const unsigned int _Py_ctype_table[256];












extern __declspec(dllimport) const unsigned char _Py_ctype_tolower[256];
extern __declspec(dllimport) const unsigned char _Py_ctype_toupper[256];







#line 39 "C:\\Users\\freez\\Python310\\include\\cpython/pyctype.h"
#line 40 "C:\\Users\\freez\\Python310\\include\\cpython/pyctype.h"
#line 142 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pystrtod.h"








__declspec(dllimport) double PyOS_string_to_double(const char *str,
                                         char **endptr,
                                         PyObject *overflow_exception);



__declspec(dllimport) char * PyOS_double_to_string(double val,
                                         char format_code,
                                         int precision,
                                         int flags,
                                         int *type);


__declspec(dllimport) PyObject * _Py_string_to_number_with_underscores(
    const char *str, Py_ssize_t len, const char *what, PyObject *obj, void *arg,
    PyObject *(*innerfunc)(const char *, Py_ssize_t, void *));

__declspec(dllimport) double _Py_parse_inf_or_nan(const char *p, char **endptr);
#line 28 "C:\\Users\\freez\\Python310\\include\\pystrtod.h"

















#line 46 "C:\\Users\\freez\\Python310\\include\\pystrtod.h"
#line 143 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\pystrcmp.h"







__declspec(dllimport) int PyOS_mystrnicmp(const char *, const char *, Py_ssize_t);
__declspec(dllimport) int PyOS_mystricmp(const char *, const char *);







#line 18 "C:\\Users\\freez\\Python310\\include\\pystrcmp.h"





#line 24 "C:\\Users\\freez\\Python310\\include\\pystrcmp.h"
#line 144 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\fileutils.h"







__declspec(dllimport) wchar_t * Py_DecodeLocale(
    const char *arg,
    size_t *size);

__declspec(dllimport) char* Py_EncodeLocale(
    const wchar_t *text,
    size_t *error_pos);
#line 16 "C:\\Users\\freez\\Python310\\include\\fileutils.h"



#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/fileutils.h"




typedef enum {
    _Py_ERROR_UNKNOWN=0,
    _Py_ERROR_STRICT,
    _Py_ERROR_SURROGATEESCAPE,
    _Py_ERROR_REPLACE,
    _Py_ERROR_IGNORE,
    _Py_ERROR_BACKSLASHREPLACE,
    _Py_ERROR_SURROGATEPASS,
    _Py_ERROR_XMLCHARREFREPLACE,
    _Py_ERROR_OTHER
} _Py_error_handler;

__declspec(dllimport) _Py_error_handler _Py_GetErrorHandler(const char *errors);

__declspec(dllimport) int _Py_DecodeLocaleEx(
    const char *arg,
    wchar_t **wstr,
    size_t *wlen,
    const char **reason,
    int current_locale,
    _Py_error_handler errors);

__declspec(dllimport) int _Py_EncodeLocaleEx(
    const wchar_t *text,
    char **str,
    size_t *error_pos,
    const char **reason,
    int current_locale,
    _Py_error_handler errors);

__declspec(dllimport) char* _Py_EncodeLocaleRaw(
    const wchar_t *text,
    size_t *error_pos);

__declspec(dllimport) PyObject * _Py_device_encoding(int);


    









#line 53 "C:\\Users\\freez\\Python310\\include\\cpython/fileutils.h"


struct _Py_stat_struct {
    unsigned long st_dev;
    uint64_t st_ino;
    unsigned short st_mode;
    int st_nlink;
    int st_uid;
    int st_gid;
    unsigned long st_rdev;
    __int64 st_size;
    time_t st_atime;
    int st_atime_nsec;
    time_t st_mtime;
    int st_mtime_nsec;
    time_t st_ctime;
    int st_ctime_nsec;
    unsigned long st_file_attributes;
    unsigned long st_reparse_tag;
};


#line 76 "C:\\Users\\freez\\Python310\\include\\cpython/fileutils.h"

__declspec(dllimport) int _Py_fstat(
    int fd,
    struct _Py_stat_struct *status);

__declspec(dllimport) int _Py_fstat_noraise(
    int fd,
    struct _Py_stat_struct *status);

__declspec(dllimport) int _Py_stat(
    PyObject *path,
    struct stat *status);

__declspec(dllimport) int _Py_open(
    const char *pathname,
    int flags);

__declspec(dllimport) int _Py_open_noraise(
    const char *pathname,
    int flags);

__declspec(dllimport) FILE * _Py_wfopen(
    const wchar_t *path,
    const wchar_t *mode);

__declspec(dllimport) FILE* _Py_fopen_obj(
    PyObject *path,
    const char *mode);

__declspec(dllimport) Py_ssize_t _Py_read(
    int fd,
    void *buf,
    size_t count);

__declspec(dllimport) Py_ssize_t _Py_write(
    int fd,
    const void *buf,
    size_t count);

__declspec(dllimport) Py_ssize_t _Py_write_noraise(
    int fd,
    const void *buf,
    size_t count);























__declspec(dllimport) int _Py_abspath(const wchar_t *path, wchar_t **abspath_p);

__declspec(dllimport) wchar_t* _Py_wgetcwd(
    wchar_t *buf,
    

    size_t buflen);

__declspec(dllimport) int _Py_get_inheritable(int fd);

__declspec(dllimport) int _Py_set_inheritable(int fd, int inheritable,
                                    int *atomic_flag_works);

__declspec(dllimport) int _Py_set_inheritable_async_safe(int fd, int inheritable,
                                               int *atomic_flag_works);

__declspec(dllimport) int _Py_dup(int fd);






__declspec(dllimport) void* _Py_get_osfhandle_noraise(int fd);

__declspec(dllimport) void* _Py_get_osfhandle(int fd);

__declspec(dllimport) int _Py_open_osfhandle_noraise(void *handle, int flags);

__declspec(dllimport) int _Py_open_osfhandle(void *handle, int flags);
#line 173 "C:\\Users\\freez\\Python310\\include\\cpython/fileutils.h"
#line 20 "C:\\Users\\freez\\Python310\\include\\fileutils.h"

#line 22 "C:\\Users\\freez\\Python310\\include\\fileutils.h"




#line 27 "C:\\Users\\freez\\Python310\\include\\fileutils.h"
#line 145 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\cpython/pyfpe.h"













#line 15 "C:\\Users\\freez\\Python310\\include\\cpython/pyfpe.h"
#line 16 "C:\\Users\\freez\\Python310\\include\\cpython/pyfpe.h"
#line 146 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 1 "C:\\Users\\freez\\Python310\\include\\tracemalloc.h"











__declspec(dllimport) int PyTraceMalloc_Track(
    unsigned int domain,
    uintptr_t ptr,
    size_t size);





__declspec(dllimport) int PyTraceMalloc_Untrack(
    unsigned int domain,
    uintptr_t ptr);









__declspec(dllimport) PyObject* _PyTraceMalloc_GetTraceback(
    unsigned int domain,
    uintptr_t ptr);
#line 37 "C:\\Users\\freez\\Python310\\include\\tracemalloc.h"

#line 39 "C:\\Users\\freez\\Python310\\include\\tracemalloc.h"
#line 147 "C:\\Users\\freez\\Python310\\include\\Python.h"

#line 149 "C:\\Users\\freez\\Python310\\include\\Python.h"
#line 3 "dtmodule.c"



char* name_datetime_c_api = "datetime.datetime_CAPI";
PyCapsule_Import(name_datetime_c_api, 0);


static PyObject *
dt_parse(PyObject *self, PyObject *args)
{
    const char *command;
    int sts;

    if (!_PyArg_ParseTuple_SizeT(args, "s", &command))
        return ((void *)0);
    sts = system(command);
    if (sts < 0) {
        PyErr_SetString(PyExc_ValueError, "System command failed");
        return ((void *)0);
    }
    return PyLong_FromLong(sts);
}

static PyMethodDef DtMethods[] = {
    {"parse",  dt_parse, 0x0001,
     "Execute a shell command."},
    {((void *)0), ((void *)0), 0, ((void *)0)}        
};

static struct PyModuleDef dtmodule = {
    { {  1, ((void *)0) }, ((void *)0), 0, ((void *)0), },
    "dt",   
    ((void *)0), 
    -1,       

    DtMethods
};

__declspec(dllexport) PyObject*
PyInit_dt(void)
{
    return PyModule_Create2(&dtmodule, 1013);
}
